!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/01b9fc86/
#	nvim/autoload/plugged/incsearch.vim/test/autonohlsearch.vim	/^  map #  <Plug>(incsearch-nohl-#)$/;"	m
#	nvim/autoload/plugged/incsearch.vim/test/autonohlsearch.vim	/^  noremap #  #$/;"	m
#all	nvim/autoload/plugged/editorconfig-vim/tests/plugin/spec/editorconfig_spec.rb	/^    describe '#all' do$/;"	d
$FZF_DEFAULT_COMMAND	.config/nvim/configs/fzf.vim	/^let $FZF_DEFAULT_COMMAND="rg --line-number --no-heading --smart-case --files --hidden --glob '!./;"	v
$FZF_DEFAULT_COMMAND	nvim/configs/fzf.vim	/^let $FZF_DEFAULT_COMMAND="rg --line-number --no-heading --smart-case --files --hidden --glob '!./;"	v
$FZF_DEFAULT_OPTS	.config/nvim/configs/fzf.vim	/^    let $FZF_DEFAULT_OPTS='--layout=reverse --margin=1,3'$/;"	v
$FZF_DEFAULT_OPTS	nvim/configs/fzf.vim	/^    let $FZF_DEFAULT_OPTS='--layout=reverse --margin=1,3'$/;"	v
*	nvim/autoload/plugged/incsearch.vim/test/autonohlsearch.vim	/^  map *  <Plug>(incsearch-nohl-*)$/;"	m
*	nvim/autoload/plugged/incsearch.vim/test/autonohlsearch.vim	/^  noremap *  *$/;"	m
/	.config/nvim/configs/incsearch.vim	/^map \/  <Plug>(incsearch-forward)$/;"	m
/	nvim/autoload/plugged/incsearch.vim/test/autonohlsearch.vim	/^  map \/  <Plug>(incsearch-forward)$/;"	m
/	nvim/autoload/plugged/incsearch.vim/test/cancel.vim	/^  map \/  <Plug>(incsearch-forward)$/;"	m
/	nvim/autoload/plugged/incsearch.vim/test/count.vim	/^map \/  <Plug>(incsearch-forward)$/;"	m
/	nvim/autoload/plugged/incsearch.vim/test/default_behaviors.vim	/^  map \/  <Plug>(incsearch-forward)$/;"	m
/	nvim/autoload/plugged/incsearch.vim/test/default_behaviors.vim	/^map \/  <Plug>(incsearch-forward)$/;"	m
/	nvim/autoload/plugged/incsearch.vim/test/error_warning_emulation.vim	/^  map \/  <Plug>(incsearch-forward)$/;"	m
/	nvim/autoload/plugged/incsearch.vim/test/fold.vim	/^  map \/  <Plug>(incsearch-forward)$/;"	m
/	nvim/autoload/plugged/incsearch.vim/test/fold.vim	/^map \/  <Plug>(incsearch-forward)$/;"	m
/	nvim/autoload/plugged/incsearch.vim/test/highlight.vim	/^  map \/  <Plug>(incsearch-forward)$/;"	m
/	nvim/autoload/plugged/incsearch.vim/test/history.vim	/^  map \/  <Plug>(incsearch-forward)$/;"	m
/	nvim/autoload/plugged/incsearch.vim/test/incremental_next_prev.vim	/^  map \/  <Plug>(incsearch-forward)$/;"	m
/	nvim/autoload/plugged/incsearch.vim/test/insert_register.vim	/^  map \/  <Plug>(incsearch-forward)$/;"	m
/	nvim/autoload/plugged/incsearch.vim/test/jumplist.vim	/^  map \/  <Plug>(incsearch-forward)$/;"	m
/	nvim/autoload/plugged/incsearch.vim/test/magic_option.vim	/^  map \/  <Plug>(incsearch-forward)$/;"	m
/	nvim/autoload/plugged/incsearch.vim/test/module.vim	/^  map \/  <Plug>(incsearch-forward)$/;"	m
/	nvim/autoload/plugged/incsearch.vim/test/n_and_N.vim	/^  map \/  <Plug>(incsearch-forward)$/;"	m
/	nvim/autoload/plugged/incsearch.vim/test/nomagic.vim	/^  map \/  <Plug>(incsearch-forward)$/;"	m
/	nvim/autoload/plugged/incsearch.vim/test/nomagic.vim	/^map \/  <Plug>(incsearch-forward)$/;"	m
/	nvim/autoload/plugged/incsearch.vim/test/operator_pending_behavior.vim	/^  map \/  <Plug>(incsearch-forward)$/;"	m
/	nvim/autoload/plugged/incsearch.vim/test/operator_pending_behavior.vim	/^map \/  <Plug>(incsearch-forward)$/;"	m
/	nvim/autoload/plugged/incsearch.vim/test/register.vim	/^map \/  <Plug>(incsearch-forward)$/;"	m
/	nvim/autoload/plugged/incsearch.vim/test/repetition.vim	/^  map \/  <Plug>(incsearch-forward)$/;"	m
/	nvim/autoload/plugged/incsearch.vim/test/scroll.vim	/^  map \/  <Plug>(incsearch-forward)$/;"	m
/	nvim/autoload/plugged/incsearch.vim/test/visual_behavior.vim	/^  map \/  <Plug>(incsearch-forward)$/;"	m
/	nvim/configs/incsearch.vim	/^map \/  <Plug>(incsearch-forward)$/;"	m
0	.config/nvim/coc-settings.json	/^    "html",$/;"	s	array:html.filetypes
0	.config/nvim/coc-settings.json	/^    "javascript",$/;"	s	array:eslint.filetypes
0	.config/polybar/base.ini	/^font-0 = Fira Code:style=Regular:pixelsize=12;2$/;"	k	section:section/base
0	polybar/base.ini	/^font-0 = Fira Code:style=Regular:pixelsize=12;2$/;"	k	section:section/base
1	.config/nvim/coc-settings.json	/^    "handlebars",$/;"	s	array:html.filetypes
1	.config/nvim/coc-settings.json	/^    "typescript",$/;"	s	array:eslint.filetypes
1	.config/polybar/base.ini	/^font-1 = "Wuncon Siji:size=12;2"$/;"	k	section:section/base
1	polybar/base.ini	/^font-1 = "Wuncon Siji:size=12;2"$/;"	k	section:section/base
1. Simple	nvim/autoload/plugged/incsearch.vim/README.md	/^### 1. Simple$/;"	S	section:Concepts
2	.config/nvim/coc-settings.json	/^    "django",$/;"	s	array:html.filetypes
2	.config/nvim/coc-settings.json	/^    "typescriptreact",$/;"	s	array:eslint.filetypes
2	.config/polybar/base.ini	/^font-2 = "Font Awesome 5 Free Solid:style=solid:antialias=false:size=7;2"$/;"	k	section:section/base
2	polybar/base.ini	/^font-2 = "Font Awesome 5 Free Solid:style=solid:antialias=false:size=7;2"$/;"	k	section:section/base
2. Comfortable	nvim/autoload/plugged/incsearch.vim/README.md	/^### 2. Comfortable$/;"	S	section:Concepts
3	.config/nvim/coc-settings.json	/^    "htmldjango"$/;"	s	array:html.filetypes
3	.config/nvim/coc-settings.json	/^    "javascriptreact",$/;"	s	array:eslint.filetypes
3	.config/polybar/base.ini	/^font-3 = "Font Awesome 5 Free:style=regular:antialias=false:size=7;2"$/;"	k	section:section/base
3	polybar/base.ini	/^font-3 = "Font Awesome 5 Free:style=regular:antialias=false:size=7;2"$/;"	k	section:section/base
3-space indentation	nvim/autoload/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/indentation.rst	/^3-space indentation$/;"	S	section:Space-based indentation
3. Useful	nvim/autoload/plugged/incsearch.vim/README.md	/^### 3. Useful$/;"	S	section:Concepts
4	.config/nvim/coc-settings.json	/^    "vue"$/;"	s	array:eslint.filetypes
4	.config/polybar/base.ini	/^font-4 = "Font Awesome 5 Free:style=regular:antialias=false:size=7;2"$/;"	k	section:section/base
4-space indentation with tab width of 8	nvim/autoload/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/indentation.rst	/^4-space indentation with tab width of 8$/;"	S	section:Space-based indentation
5	.config/polybar/base.ini	/^font-5 = RobotoMono Nerd Font:pixelsize=10;1$/;"	k	section:section/base
:tada: Version 2.0 :tada:	nvim/autoload/plugged/incsearch.vim/README.md	/^:tada: Version 2.0 :tada:$/;"	s
<	.config/nvim/keys/mappings.vim	/^vnoremap < <gv$/;"	m
<	nvim/general/keys.vim	/^vnoremap < <gv$/;"	m
<2-ScrollWheelDown>	nvim/autoload/plugged/minimap.vim/autoload/minimap/vim.vim	/^    noremap <buffer> <2-ScrollWheelDown> j$/;"	m
<2-ScrollWheelUp>	nvim/autoload/plugged/minimap.vim/autoload/minimap/vim.vim	/^    noremap <buffer> <2-ScrollWheelUp>   k$/;"	m
<3-ScrollWheelDown>	nvim/autoload/plugged/minimap.vim/autoload/minimap/vim.vim	/^    noremap <buffer> <3-ScrollWheelDown> j$/;"	m
<3-ScrollWheelUp>	nvim/autoload/plugged/minimap.vim/autoload/minimap/vim.vim	/^    noremap <buffer> <3-ScrollWheelUp>   k$/;"	m
<4-ScrollWheelDown>	nvim/autoload/plugged/minimap.vim/autoload/minimap/vim.vim	/^    noremap <buffer> <4-ScrollWheelDown> j$/;"	m
<4-ScrollWheelUp>	nvim/autoload/plugged/minimap.vim/autoload/minimap/vim.vim	/^    noremap <buffer> <4-ScrollWheelUp>   k$/;"	m
<A-/>	.config/nvim/configs/commentary.vim	/^nnoremap <silent> <A-\/> :Commentary<CR>$/;"	m
<A-/>	nvim/configs/commentary.vim	/^nnoremap <silent> <A-\/> :Commentary<CR>$/;"	m
<A-h>	.config/nvim/configs/fzf.vim	/^nnoremap <silent><A-h> :call fzf#run({$/;"	m
<A-h>	nvim/configs/fzf.vim	/^nnoremap <silent><A-h> :call fzf#run({$/;"	m
<A-k>	.config/nvim/configs/fzf.vim	/^nnoremap <silent><A-k> :Rg <C-R><C-W><space><CR>$/;"	m
<A-k>	nvim/configs/fzf.vim	/^nnoremap <silent><A-k> :Rg <C-R><C-W><space><CR>$/;"	m
<A-v>	.config/nvim/configs/fzf.vim	/^nnoremap <silent><A-v> :call fzf#run({$/;"	m
<A-v>	nvim/configs/fzf.vim	/^nnoremap <silent><A-v> :call fzf#run({$/;"	m
<BS>	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/mappings.vim	/^  snoremap <BS>     a<BS>$/;"	m
<C-A>	.config/nvim/keys/mappings.vim	/^nnoremap <C-A> ggvG\$$/;"	m
<C-A>	nvim/general/keys.vim	/^nnoremap <C-A> ggvG\$$/;"	m
<C-Q>	.config/nvim/keys/mappings.vim	/^inoremap <C-Q> <esc>:q<CR>$/;"	m
<C-Q>	.config/nvim/keys/mappings.vim	/^nnoremap <C-Q> :q<CR>$/;"	m
<C-Q>	nvim/general/keys.vim	/^inoremap <C-Q> <esc>:q<CR>$/;"	m
<C-Q>	nvim/general/keys.vim	/^nnoremap <C-Q> :q<CR>$/;"	m
<C-S>	.config/nvim/keys/mappings.vim	/^inoremap <C-S> <esc>:w<CR>$/;"	m
<C-S>	.config/nvim/keys/mappings.vim	/^nnoremap <C-S> :w<CR>$/;"	m
<C-S>	.config/nvim/keys/mappings.vim	/^vnoremap <C-S> <esc>:w<CR>$/;"	m
<C-S>	nvim/general/keys.vim	/^inoremap <C-S> <esc>:w<CR>$/;"	m
<C-S>	nvim/general/keys.vim	/^nnoremap <C-S> :w<CR>$/;"	m
<C-S>	nvim/general/keys.vim	/^vnoremap <C-S> <esc>:w<CR>$/;"	m
<C-b>	.config/nvim/configs/fzf.vim	/^nnoremap <silent> <C-b> :Buffers<CR>$/;"	m
<C-b>	nvim/configs/fzf.vim	/^nnoremap <silent> <C-b> :Buffers<CR>$/;"	m
<C-c>	.config/nvim/keys/mappings.vim	/^vnoremap <C-c> "+y$/;"	m
<C-c>	nvim/general/keys.vim	/^vnoremap <C-c> "+y$/;"	m
<C-h>	.config/nvim/keys/mappings.vim	/^nnoremap <C-h> <C-w>h$/;"	m
<C-h>	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/mappings.vim	/^  snoremap <C-h>    a<BS>$/;"	m
<C-h>	nvim/general/keys.vim	/^nnoremap <C-h> <C-w>h$/;"	m
<C-j>	.config/nvim/configs/coc.vim	/^imap <C-j> <Plug>(coc-snippets-expand-jump)$/;"	m
<C-j>	.config/nvim/configs/coc.vim	/^nmap <silent> <C-j> <Plug>(coc-diagnostic-next)$/;"	m
<C-j>	.config/nvim/configs/coc.vim	/^vmap <C-j> <Plug>(coc-snippets-select)$/;"	m
<C-j>	.config/nvim/keys/mappings.vim	/^nnoremap <C-j> <C-w>j$/;"	m
<C-j>	nvim/general/keys.vim	/^nnoremap <C-j> <C-w>j$/;"	m
<C-k>	.config/nvim/configs/coc.vim	/^nmap <silent> <C-k> <Plug>(coc-diagnostic-prev)$/;"	m
<C-k>	.config/nvim/keys/mappings.vim	/^nnoremap <C-k> <C-w>k$/;"	m
<C-k>	nvim/general/keys.vim	/^nnoremap <C-k> <C-w>k$/;"	m
<C-l>	.config/nvim/configs/coc.vim	/^imap <C-l> <Plug>(coc-snippets-expand)$/;"	m
<C-l>	.config/nvim/keys/mappings.vim	/^nnoremap <C-l> <C-w>l$/;"	m
<C-l>	nvim/general/keys.vim	/^nnoremap <C-l> <C-w>l$/;"	m
<C-p>	.config/nvim/configs/fzf.vim	/^nnoremap <silent> <C-p> :Files<CR>$/;"	m
<C-p>	nvim/configs/fzf.vim	/^nnoremap <silent> <C-p> :Files<CR>$/;"	m
<C-s>	.config/nvim/keys/mappings.vim	/^nnoremap <silent> <C-s> :w<CR>$/;"	m
<C-s>	nvim/general/keys.vim	/^nnoremap <silent> <C-s> :w<CR>$/;"	m
<CR>	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/mappings.vim	/^  snoremap <CR>     a<BS>$/;"	m
<Del>	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/mappings.vim	/^  snoremap <Del>    a<BS>$/;"	m
<F10>	.config/nvim/configs/coc.vim	/^nmap <silent><F10> <Plug>(coc-bookmark-annotate)$/;"	m
<F11>	.config/nvim/configs/coc.vim	/^nmap <silent><F11> <Plug>(coc-bookmark-next)$/;"	m
<F12>	.config/nvim/configs/coc.vim	/^nmap <silent><F12> :CocList bookmark <CR>$/;"	m
<F2>	.config/nvim/configs/nerdtree.vim	/^nmap <silent><F2> :NERDTreeToggle<CR>$/;"	m
<F3>	.config/nvim/configs/undotree.vim	/^nnoremap <F3> :UndotreeToggle<cr>$/;"	m
<F5>	.config/nvim/configs/vista.vim	/^nnoremap <silent> <F5> :Vista!!	<CR>$/;"	m
<F6>	.config/nvim/configs/vista.vim	/^nnoremap <silent> <F6> :Vista finder ctags	<CR>$/;"	m
<F7>	.config/nvim/configs/coc.vim	/^nnoremap <silent><F7> :<C-u>CocList commands<cr>$/;"	m
<F8>	.config/nvim/configs/coc.vim	/^nnoremap <silent><F8> :<C-u>CocList diagnostics<cr>$/;"	m
<F9>	.config/nvim/configs/coc.vim	/^nmap <silent><F9> <Plug>(coc-bookmark-toggle)$/;"	m
<Leader><Leader>	.config/nvim/configs/fzf.vim	/^nnoremap <silent> <expr> <Leader><Leader> (expand('%') =~ 'NERD_tree' ? "\\<c-w>\\<c-w>" : '')."/;"	m
<Leader><Leader>	nvim/configs/fzf.vim	/^nnoremap <silent> <expr> <Leader><Leader> (expand('%') =~ 'NERD_tree' ? "\\<c-w>\\<c-w>" : '')."/;"	m
<M-Down>	.config/nvim/keys/mappings.vim	/^nnoremap <silent> <M-Down> :bd<CR>$/;"	m
<M-Down>	nvim/general/keys.vim	/^nnoremap <silent> <M-Down> :bd<CR>$/;"	m
<M-Left>	.config/nvim/keys/mappings.vim	/^nnoremap <silent> <M-Left> :bprevious<CR>$/;"	m
<M-Left>	nvim/general/keys.vim	/^nnoremap <silent> <M-Left> :bprevious<CR>$/;"	m
<M-Right>	.config/nvim/keys/mappings.vim	/^nnoremap <silent> <M-Right> :bnext<CR>$/;"	m
<M-Right>	nvim/general/keys.vim	/^nnoremap <silent> <M-Right> :bnext<CR>$/;"	m
<M-S-Down>	.config/nvim/keys/mappings.vim	/^nnoremap <silent> <M-S-Down>    :tabclose<CR>$/;"	m
<M-S-Down>	nvim/general/keys.vim	/^nnoremap <silent> <M-S-Down>    :tabclose<CR>$/;"	m
<M-S-Left>	.config/nvim/keys/mappings.vim	/^nnoremap <silent> <M-S-Left>    :tabprevious<CR>$/;"	m
<M-S-Left>	nvim/general/keys.vim	/^nnoremap <silent> <M-S-Left>    :tabprevious<CR>$/;"	m
<M-S-Right>	.config/nvim/keys/mappings.vim	/^nnoremap <silent> <M-S-Right>    :tabnext<CR>$/;"	m
<M-S-Right>	nvim/general/keys.vim	/^nnoremap <silent> <M-S-Right>    :tabnext<CR>$/;"	m
<M-S-Up>	.config/nvim/keys/mappings.vim	/^nnoremap <silent> <M-S-Up>    :tabnew<CR>$/;"	m
<M-S-Up>	nvim/general/keys.vim	/^nnoremap <silent> <M-S-Up>    :tabnew<CR>$/;"	m
<M-f>	.config/nvim/configs/fzf.vim	/^nnoremap <M-f> :Rg<CR>$/;"	m
<M-f>	nvim/configs/fzf.vim	/^nnoremap <M-f> :Rg<CR>$/;"	m
<M-m>	.config/nvim/configs/fzf.vim	/^nnoremap <M-m> :Marks<CR>$/;"	m
<M-m>	nvim/configs/fzf.vim	/^nnoremap <M-m> :Marks<CR>$/;"	m
<M-t>	.config/nvim/configs/fzf.vim	/^nnoremap <M-t> :Tags<CR>$/;"	m
<M-t>	nvim/configs/fzf.vim	/^nnoremap <M-t> :Tags<CR>$/;"	m
<Plug>(-fzf-complete-trigger)	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^inoremap <silent> <Plug>(-fzf-complete-trigger) <c-o>:call <sid>complete_trigger()<cr>$/;"	m
<Plug>(_incsearch-#)	nvim/autoload/plugged/incsearch.vim/plugin/incsearch.vim	/^noremap        <Plug>(_incsearch-#)  #$/;"	m
<Plug>(_incsearch-*)	nvim/autoload/plugged/incsearch.vim/plugin/incsearch.vim	/^noremap        <Plug>(_incsearch-*)  *$/;"	m
<Plug>(_incsearch-N)	nvim/autoload/plugged/incsearch.vim/plugin/incsearch.vim	/^noremap <expr> <Plug>(_incsearch-N)  g:incsearch#consistent_n_direction && !v:searchforward ? 'n/;"	m
<Plug>(_incsearch-esc)	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^noremap  <silent> <Plug>(_incsearch-esc) <Nop>$/;"	m
<Plug>(_incsearch-esc)	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^noremap! <silent> <Plug>(_incsearch-esc) <Nop>$/;"	m
<Plug>(_incsearch-esc)	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^xnoremap <silent> <Plug>(_incsearch-esc) <Esc>$/;"	m
<Plug>(_incsearch-g#)	nvim/autoload/plugged/incsearch.vim/plugin/incsearch.vim	/^noremap        <Plug>(_incsearch-g#) g#$/;"	m
<Plug>(_incsearch-g*)	nvim/autoload/plugged/incsearch.vim/plugin/incsearch.vim	/^noremap        <Plug>(_incsearch-g*) g*$/;"	m
<Plug>(_incsearch-gv)	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^nnoremap <silent> <Plug>(_incsearch-gv) gv$/;"	m
<Plug>(_incsearch-gv)	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^noremap  <silent> <Plug>(_incsearch-gv) <Nop>$/;"	m
<Plug>(_incsearch-gv)	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^noremap! <silent> <Plug>(_incsearch-gv) <Nop>$/;"	m
<Plug>(_incsearch-hlsearch)	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^nnoremap <silent> <Plug>(_incsearch-hlsearch) :<C-u>let &hlsearch=&hlsearch<CR>$/;"	m
<Plug>(_incsearch-hlsearch)	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^noremap  <silent> <Plug>(_incsearch-hlsearch) <Nop>$/;"	m
<Plug>(_incsearch-hlsearch)	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^noremap! <silent> <Plug>(_incsearch-hlsearch) <Nop>$/;"	m
<Plug>(_incsearch-hlsearch)	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^xnoremap <silent> <Plug>(_incsearch-hlsearch) :<C-u>let &hlsearch=&hlsearch<CR>gv$/;"	m
<Plug>(_incsearch-n)	nvim/autoload/plugged/incsearch.vim/plugin/incsearch.vim	/^noremap <expr> <Plug>(_incsearch-n)  g:incsearch#consistent_n_direction && !v:searchforward ? 'N/;"	m
<Plug>(_incsearch-nohlsearch)	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/autocmd.vim	/^nnoremap <silent>       <Plug>(_incsearch-nohlsearch) :<C-u>nohlsearch<CR>$/;"	m
<Plug>(_incsearch-nohlsearch)	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/autocmd.vim	/^noremap  <silent><expr> <Plug>(_incsearch-nohlsearch) incsearch#autocmd#auto_nohlsearch(0)$/;"	m
<Plug>(_incsearch-nohlsearch)	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/autocmd.vim	/^noremap! <silent><expr> <Plug>(_incsearch-nohlsearch) incsearch#autocmd#auto_nohlsearch(0)$/;"	m
<Plug>(_incsearch-nohlsearch)	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/autocmd.vim	/^xnoremap <silent>       <Plug>(_incsearch-nohlsearch) :<C-u>nohlsearch<CR>gv$/;"	m
<Plug>(_incsearch-searchforward)	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^nnoremap <silent><expr> <Plug>(_incsearch-searchforward) <SID>_searchforward_cmd()$/;"	m
<Plug>(_incsearch-searchforward)	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^noremap  <silent>       <Plug>(_incsearch-searchforward) <Nop>$/;"	m
<Plug>(_incsearch-searchforward)	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^noremap! <silent>       <Plug>(_incsearch-searchforward) <Nop>$/;"	m
<Plug>(_incsearch-searchforward)	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^xnoremap <silent><expr> <Plug>(_incsearch-searchforward) <SID>_searchforward_cmd()$/;"	m
<Plug>(_incsearch-winrestview)	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^nnoremap <silent> <Plug>(_incsearch-winrestview) :<C-u>call winrestview(g:incsearch#_view)<CR>$/;"	m
<Plug>(_incsearch-winrestview)	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^noremap  <silent> <Plug>(_incsearch-winrestview) <Nop>$/;"	m
<Plug>(_incsearch-winrestview)	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^noremap! <silent> <Plug>(_incsearch-winrestview) <Nop>$/;"	m
<Plug>(_incsearch-winrestview)	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^xnoremap <silent> <Plug>(_incsearch-winrestview) :<C-u>call winrestview(g:incsearch#_view)<CR>gv$/;"	m
<Plug>(completion_confirm_completion)	nvim/autoload/plugged/completion-nvim/plugin/completion.vim	/^inoremap <silent> <Plug>(completion_confirm_completion)$/;"	m
<Plug>(completion_next_source)	nvim/autoload/plugged/completion-nvim/plugin/completion.vim	/^inoremap <silent> <Plug>(completion_next_source)$/;"	m
<Plug>(completion_prev_source)	nvim/autoload/plugged/completion-nvim/plugin/completion.vim	/^inoremap <silent> <Plug>(completion_prev_source)$/;"	m
<Plug>(completion_smart_s_tab)	nvim/autoload/plugged/completion-nvim/plugin/completion.vim	/^inoremap <silent> <Plug>(completion_smart_s_tab)$/;"	m
<Plug>(completion_smart_tab)	nvim/autoload/plugged/completion-nvim/plugin/completion.vim	/^inoremap <silent> <Plug>(completion_smart_tab)$/;"	m
<Plug>(completion_trigger)	nvim/autoload/plugged/completion-nvim/plugin/completion.vim	/^inoremap <silent> <Plug>(completion_trigger)$/;"	m
<Plug>(highlightedyank)	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^    nmap     <silent> <Plug>(highlightedyank) <Plug>(highlightedyank-setoperatorfunc)<Plug>(high/;"	m
<Plug>(highlightedyank)	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^    nnoremap <silent> <Plug>(highlightedyank) :<C-u>call highlightedyank#obsolete#highlightedyan/;"	m
<Plug>(highlightedyank)	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^    onoremap          <Plug>(highlightedyank) g@$/;"	m
<Plug>(highlightedyank)	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^    onoremap          <Plug>(highlightedyank) y$/;"	m
<Plug>(highlightedyank)	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^    onoremap <Plug>(highlightedyank) y$/;"	m
<Plug>(highlightedyank)	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^    xmap     <silent> <Plug>(highlightedyank) <Plug>(highlightedyank-setoperatorfunc)<Plug>(high/;"	m
<Plug>(highlightedyank)	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^    xnoremap <silent> <Plug>(highlightedyank) :<C-u>call highlightedyank#obsolete#highlightedyan/;"	m
<Plug>(highlightedyank)	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^  noremap <silent> <Plug>(highlightedyank) y$/;"	m
<Plug>(highlightedyank)	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^  onoremap <Plug>(highlightedyank) g@$/;"	m
<Plug>(highlightedyank)	nvim/autoload/plugged/vim-highlightedyank/plugin/highlightedyank.vim	/^      nmap     <silent> <Plug>(highlightedyank) <Plug>(highlightedyank-setoperatorfunc)<Plug>(hi/;"	m
<Plug>(highlightedyank)	nvim/autoload/plugged/vim-highlightedyank/plugin/highlightedyank.vim	/^      nnoremap <silent> <Plug>(highlightedyank) :<C-u>call highlightedyank#obsolete#highlightedy/;"	m
<Plug>(highlightedyank)	nvim/autoload/plugged/vim-highlightedyank/plugin/highlightedyank.vim	/^      onoremap          <Plug>(highlightedyank) g@$/;"	m
<Plug>(highlightedyank)	nvim/autoload/plugged/vim-highlightedyank/plugin/highlightedyank.vim	/^      onoremap          <Plug>(highlightedyank) y$/;"	m
<Plug>(highlightedyank)	nvim/autoload/plugged/vim-highlightedyank/plugin/highlightedyank.vim	/^      xmap     <silent> <Plug>(highlightedyank) <Plug>(highlightedyank-setoperatorfunc)<Plug>(hi/;"	m
<Plug>(highlightedyank)	nvim/autoload/plugged/vim-highlightedyank/plugin/highlightedyank.vim	/^      xnoremap <silent> <Plug>(highlightedyank) :<C-u>call highlightedyank#obsolete#highlightedy/;"	m
<Plug>(highlightedyank-g@)	nvim/autoload/plugged/vim-highlightedyank/plugin/highlightedyank.vim	/^      noremap  <silent> <Plug>(highlightedyank-g@) g@$/;"	m
<Plug>(highlightedyank-setoperatorfunc)	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^    noremap  <expr>   <Plug>(highlightedyank-setoperatorfunc) highlightedyank#obsolete#highlight/;"	m
<Plug>(highlightedyank-setoperatorfunc)	nvim/autoload/plugged/vim-highlightedyank/plugin/highlightedyank.vim	/^      noremap  <expr>   <Plug>(highlightedyank-setoperatorfunc) highlightedyank#obsolete#highlig/;"	m
<Plug>(incsearch-backward)	nvim/autoload/plugged/incsearch.vim/plugin/incsearch.vim	/^noremap <silent><expr> <Plug>(incsearch-backward) incsearch#go({'command': '?'})$/;"	m
<Plug>(incsearch-forward)	nvim/autoload/plugged/incsearch.vim/plugin/incsearch.vim	/^noremap <silent><expr> <Plug>(incsearch-forward)  incsearch#go({'command': '\/'})$/;"	m
<Plug>(incsearch-nohl)	nvim/autoload/plugged/incsearch.vim/plugin/incsearch.vim	/^noremap <expr> <Plug>(incsearch-nohl)  incsearch#autocmd#auto_nohlsearch(1)$/;"	m
<Plug>(incsearch-nohl-#)	nvim/autoload/plugged/incsearch.vim/plugin/incsearch.vim	/^map <Plug>(incsearch-nohl-#)  <Plug>(incsearch-nohl)<Plug>(_incsearch-#)$/;"	m
<Plug>(incsearch-nohl-*)	nvim/autoload/plugged/incsearch.vim/plugin/incsearch.vim	/^map <Plug>(incsearch-nohl-*)  <Plug>(incsearch-nohl)<Plug>(_incsearch-*)$/;"	m
<Plug>(incsearch-nohl-N)	nvim/autoload/plugged/incsearch.vim/plugin/incsearch.vim	/^map <Plug>(incsearch-nohl-N)  <Plug>(incsearch-nohl)<Plug>(_incsearch-N)$/;"	m
<Plug>(incsearch-nohl-g#)	nvim/autoload/plugged/incsearch.vim/plugin/incsearch.vim	/^map <Plug>(incsearch-nohl-g#) <Plug>(incsearch-nohl)<Plug>(_incsearch-g#)$/;"	m
<Plug>(incsearch-nohl-g*)	nvim/autoload/plugged/incsearch.vim/plugin/incsearch.vim	/^map <Plug>(incsearch-nohl-g*) <Plug>(incsearch-nohl)<Plug>(_incsearch-g*)$/;"	m
<Plug>(incsearch-nohl-n)	nvim/autoload/plugged/incsearch.vim/plugin/incsearch.vim	/^map <Plug>(incsearch-nohl-n)  <Plug>(incsearch-nohl)<Plug>(_incsearch-n)$/;"	m
<Plug>(incsearch-nohl0)	nvim/autoload/plugged/incsearch.vim/plugin/incsearch.vim	/^noremap <expr> <Plug>(incsearch-nohl0) incsearch#autocmd#auto_nohlsearch(0)$/;"	m
<Plug>(incsearch-nohl2)	nvim/autoload/plugged/incsearch.vim/plugin/incsearch.vim	/^noremap <expr> <Plug>(incsearch-nohl2) incsearch#autocmd#auto_nohlsearch(2)$/;"	m
<Plug>(incsearch-stay)	nvim/autoload/plugged/incsearch.vim/plugin/incsearch.vim	/^noremap <silent><expr> <Plug>(incsearch-stay)     incsearch#go({'command': '\/', 'is_stay': 1})$/;"	m
<Plug>(neosnippet_expand)	nvim/autoload/plugged/neosnippet.vim/plugin/neosnippet.vim	/^inoremap <silent><expr> <Plug>(neosnippet_expand)$/;"	m
<Plug>(neosnippet_expand)	nvim/autoload/plugged/neosnippet.vim/plugin/neosnippet.vim	/^nmap <Plug>(neosnippet_expand)         g<C-h><Plug>(neosnippet_expand)$/;"	m
<Plug>(neosnippet_expand)	nvim/autoload/plugged/neosnippet.vim/plugin/neosnippet.vim	/^snoremap <silent><expr> <Plug>(neosnippet_expand)$/;"	m
<Plug>(neosnippet_expand)	nvim/autoload/plugged/neosnippet.vim/plugin/neosnippet.vim	/^xmap <Plug>(neosnippet_expand)         <C-g><Plug>(neosnippet_expand)$/;"	m
<Plug>(neosnippet_expand_or_jump)	nvim/autoload/plugged/neosnippet.vim/plugin/neosnippet.vim	/^inoremap <silent><expr> <Plug>(neosnippet_expand_or_jump)$/;"	m
<Plug>(neosnippet_expand_or_jump)	nvim/autoload/plugged/neosnippet.vim/plugin/neosnippet.vim	/^nmap <Plug>(neosnippet_expand_or_jump) g<C-h><Plug>(neosnippet_expand_or_jump)$/;"	m
<Plug>(neosnippet_expand_or_jump)	nvim/autoload/plugged/neosnippet.vim/plugin/neosnippet.vim	/^snoremap <silent><expr> <Plug>(neosnippet_expand_or_jump)$/;"	m
<Plug>(neosnippet_expand_or_jump)	nvim/autoload/plugged/neosnippet.vim/plugin/neosnippet.vim	/^xmap <Plug>(neosnippet_expand_or_jump) <C-g><Plug>(neosnippet_expand_or_jump)$/;"	m
<Plug>(neosnippet_expand_target)	nvim/autoload/plugged/neosnippet.vim/plugin/neosnippet.vim	/^xnoremap <silent> <Plug>(neosnippet_expand_target)$/;"	m
<Plug>(neosnippet_get_selected_text)	nvim/autoload/plugged/neosnippet.vim/plugin/neosnippet.vim	/^xnoremap <silent> <Plug>(neosnippet_get_selected_text)$/;"	m
<Plug>(neosnippet_jump)	nvim/autoload/plugged/neosnippet.vim/plugin/neosnippet.vim	/^inoremap <silent><expr> <Plug>(neosnippet_jump)$/;"	m
<Plug>(neosnippet_jump)	nvim/autoload/plugged/neosnippet.vim/plugin/neosnippet.vim	/^nmap <Plug>(neosnippet_jump)           g<C-h><Plug>(neosnippet_jump)$/;"	m
<Plug>(neosnippet_jump)	nvim/autoload/plugged/neosnippet.vim/plugin/neosnippet.vim	/^snoremap <silent><expr> <Plug>(neosnippet_jump)$/;"	m
<Plug>(neosnippet_jump)	nvim/autoload/plugged/neosnippet.vim/plugin/neosnippet.vim	/^xmap <Plug>(neosnippet_jump)           <C-g><Plug>(neosnippet_jump)$/;"	m
<Plug>(neosnippet_jump_or_expand)	nvim/autoload/plugged/neosnippet.vim/plugin/neosnippet.vim	/^inoremap <silent><expr> <Plug>(neosnippet_jump_or_expand)$/;"	m
<Plug>(neosnippet_jump_or_expand)	nvim/autoload/plugged/neosnippet.vim/plugin/neosnippet.vim	/^nmap <Plug>(neosnippet_jump_or_expand) g<C-h><Plug>(neosnippet_jump_or_expand)$/;"	m
<Plug>(neosnippet_jump_or_expand)	nvim/autoload/plugged/neosnippet.vim/plugin/neosnippet.vim	/^snoremap <silent><expr> <Plug>(neosnippet_jump_or_expand)$/;"	m
<Plug>(neosnippet_jump_or_expand)	nvim/autoload/plugged/neosnippet.vim/plugin/neosnippet.vim	/^xmap <Plug>(neosnippet_jump_or_expand) <C-g><Plug>(neosnippet_jump_or_expand)$/;"	m
<Plug>(neosnippet_register_oneshot_snippet)	nvim/autoload/plugged/neosnippet.vim/plugin/neosnippet.vim	/^xnoremap <silent> <Plug>(neosnippet_register_oneshot_snippet)$/;"	m
<Plug>(neosnippet_start_unite_snippet)	nvim/autoload/plugged/neosnippet.vim/plugin/neosnippet.vim	/^inoremap <expr><silent> <Plug>(neosnippet_start_unite_snippet)$/;"	m
<Plug>AirlineSelectNextTab	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^    noremap <silent> <Plug>AirlineSelectNextTab :<C-u>call <SID>jump_to_tab(v:count1)<CR>$/;"	m
<Plug>AirlineSelectNextTab	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^  noremap <silent> <Plug>AirlineSelectNextTab :<C-U>exe repeat(':tabn\\|', v:count1)<cr>$/;"	m
<Plug>AirlineSelectPrevTab	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^    noremap <silent> <Plug>AirlineSelectPrevTab :<C-u>call <SID>jump_to_tab(-v:count1)<CR>$/;"	m
<Plug>AirlineSelectPrevTab	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^  noremap <silent> <Plug>AirlineSelectPrevTab gT$/;"	m
<Plug>ChangeCommentary	nvim/autoload/plugged/vim-commentary/plugin/commentary.vim	/^nnoremap <silent> <Plug>ChangeCommentary c:<C-U>call <SID>textobject(1)<CR>$/;"	m
<Plug>Commentary	nvim/autoload/plugged/vim-commentary/plugin/commentary.vim	/^nnoremap <expr>   <Plug>Commentary     <SID>go()$/;"	m
<Plug>Commentary	nvim/autoload/plugged/vim-commentary/plugin/commentary.vim	/^onoremap <silent> <Plug>Commentary        :<C-U>call <SID>textobject(get(v:, 'operator', '') ==#/;"	m
<Plug>Commentary	nvim/autoload/plugged/vim-commentary/plugin/commentary.vim	/^xnoremap <expr>   <Plug>Commentary     <SID>go()$/;"	m
<Plug>CommentaryLine	nvim/autoload/plugged/vim-commentary/plugin/commentary.vim	/^nnoremap <expr>   <Plug>CommentaryLine <SID>go() . '_'$/;"	m
<Plug>CommentaryUndo	nvim/autoload/plugged/vim-commentary/plugin/commentary.vim	/^nmap <silent> <Plug>CommentaryUndo :echoerr "Change your <Plug>CommentaryUndo map to <Plug>Comme/;"	m
<Plug>XTablineCdCurrent	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        nnoremap <unique> <script> <Plug>XTablineCdCurrent :cd %:p:h<cr>:call airline#util#doaut/;"	m
<Plug>XTablineCdDown1	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        nnoremap <unique> <script> <Plug>XTablineCdDown1   :cd %:p:h:h<cr>:call airline#util#doa/;"	m
<Plug>XTablineCdDown2	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        nnoremap <unique> <script> <Plug>XTablineCdDown2   :cd %:p:h:h:h<cr>:call airline#util#d/;"	m
<Plug>XTablineCdDown3	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        nnoremap <unique> <script> <Plug>XTablineCdDown3   :cd %:p:h:h:h:h<cr>:call airline#util/;"	m
<Plug>XTablineCdHome	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        nnoremap <unique> <script> <Plug>XTablineCdHome    :cd ~<cr>:call airline#util#doautocmd/;"	m
<Plug>XTablineNextBuffer	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <unique> <script> <Plug>XTablineNextBuffer <SID>NextBuffer$/;"	m
<Plug>XTablinePrevBuffer	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <unique> <script> <Plug>XTablinePrevBuffer <SID>PrevBuffer$/;"	m
<Plug>XTablineReopen	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <unique> <script> <Plug>XTablineReopen <SID>ReopenLastTab$/;"	m
<Plug>XTablineSelectBuffer	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <unique> <script> <Plug>XTablineSelectBuffer <SID>SelectBuffer$/;"	m
<Plug>XTablineToggleFiltering	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <unique> <script> <Plug>XTablineToggleFiltering <SID>ToggleFiltering$/;"	m
<Plug>XTablineToggleTabs	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <unique> <script> <Plug>XTablineToggleTabs <SID>ToggleTabs$/;"	m
<S-TAB>	.config/nvim/configs/coc.vim	/^inoremap <expr><S-TAB> pumvisible() ? "\\<C-p>" : "\\<C-h>"$/;"	m
<SID>(highlightedyank-doublequote)	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^noremap <SID>(highlightedyank-doublequote) "$/;"	m
<SID>(highlightedyank-g@)	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^noremap <SID>(highlightedyank-g@) g@$/;"	m
<SID>(highlightedyank-gv)	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^noremap <SID>(highlightedyank-gv) gv$/;"	m
<SID>(highlightedyank-y)	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^noremap <SID>(highlightedyank-y) y$/;"	m
<SID>NextBuffer	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <silent> <expr> <SID>NextBuffer airline#extensions#tabline#xtabline#next_buffer(v:c/;"	m
<SID>PrevBuffer	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <silent> <expr> <SID>PrevBuffer airline#extensions#tabline#xtabline#prev_buffer(v:c/;"	m
<SID>ReopenLastTab	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <silent> <SID>ReopenLastTab :XTabReopen<cr>$/;"	m
<SID>SelectBuffer	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <silent> <expr> <SID>SelectBuffer g:xtabline_changing_buffer ? "\\<C-c>" : ":<C-u>c/;"	m
<SID>ToggleFiltering	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <silent> <SID>ToggleFiltering :call airline#extensions#tabline#xtabline#toggle_buff/;"	m
<SID>ToggleTabs	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <silent> <SID>ToggleTabs :call airline#extensions#tabline#xtabline#toggle_tabs()<cr/;"	m
<ScrollWheelDown>	nvim/autoload/plugged/minimap.vim/autoload/minimap/vim.vim	/^    noremap <buffer> <ScrollWheelDown>   j$/;"	m
<ScrollWheelUp>	nvim/autoload/plugged/minimap.vim/autoload/minimap/vim.vim	/^    noremap <buffer> <ScrollWheelUp>     k$/;"	m
<TAB>	.config/nvim/configs/coc.vim	/^inoremap <silent><expr> <TAB>$/;"	m
<TAB>	.config/nvim/configs/coc.vim	/^nmap <silent> <TAB> <Plug>(coc-range-select)$/;"	m
<TAB>	.config/nvim/configs/coc.vim	/^xmap <silent> <TAB> <Plug>(coc-range-select)$/;"	m
<c-j>	.config/nvim/keys/mappings.vim	/^inoremap <expr> <c-j> ("\\<C-n>")$/;"	m
<c-j>	nvim/general/keys.vim	/^inoremap <expr> <c-j> ("\\<C-n>")$/;"	m
<c-k>	.config/nvim/keys/mappings.vim	/^inoremap <expr> <c-k> ("\\<C-p>")$/;"	m
<c-k>	nvim/general/keys.vim	/^inoremap <expr> <c-k> ("\\<C-p>")$/;"	m
<c-space>	.config/nvim/configs/coc.vim	/^inoremap <silent><expr> <c-space> coc#refresh()$/;"	m
<cr>	.config/nvim/configs/coc.vim	/^  inoremap <expr> <cr> complete_info()["selected"] != "-1" ? "\\<C-y>" : "\\<C-g>u\\<CR>"$/;"	m
<cr>	.config/nvim/configs/coc.vim	/^  inoremap <expr> <cr> pumvisible() ? "\\<C-y>" : "\\<C-g>u\\<CR>"$/;"	m
<cr>	nvim/autoload/plug.vim	/^      nmap <buffer> <cr> <plug>(plug-preview)$/;"	m
<leader>ac	.config/nvim/configs/coc.vim	/^nmap <leader>ac  <Plug>(coc-codeaction)$/;"	m
<leader>cd2	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        map <unique> <leader>cd2 <Plug>XTablineCdDown2$/;"	m
<leader>cd3	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        map <unique> <leader>cd3 <Plug>XTablineCdDown3$/;"	m
<leader>cdc	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        map <unique> <leader>cdc <Plug>XTablineCdCurrent$/;"	m
<leader>cdd	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        map <unique> <leader>cdd <Plug>XTablineCdDown1$/;"	m
<leader>cdh	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        map <unique> <leader>cdh <Plug>XTablineCdHome$/;"	m
<leader>dd	.config/nvim/configs/fugitive.vim	/^map <leader>dd :Gdiffsplit<cr>$/;"	m
<leader>ga	.config/nvim/configs/fugitive.vim	/^map <leader>ga :!git add %<cr>:Gcommit<cr>$/;"	m
<leader>gb	.config/nvim/configs/fugitive.vim	/^map <leader>gb :Gblame<cr>$/;"	m
<leader>gc	.config/nvim/configs/fugitive.vim	/^map <leader>gc :GCheckout<cr>$/;"	m
<leader>gm	.config/nvim/configs/fugitive.vim	/^map <leader>gm :Gcommit<cr>$/;"	m
<leader>gp	.config/nvim/configs/fugitive.vim	/^map <leader>gp :Gpush<cr>$/;"	m
<leader>gs	.config/nvim/configs/fugitive.vim	/^map <leader>gs :G<cr>$/;"	m
<leader>r	.config/nvim/configs/gutentags.vim	/^nmap <leader>r :!ctags .<cr>$/;"	m
<leader>rn	.config/nvim/configs/coc.vim	/^nmap <leader>rn <Plug>(coc-rename)$/;"	m
<m-tab>	.config/nvim/keys/mappings.vim	/^nnoremap  <silent>   <m-tab> <C-w>w <CR>$/;"	m
<m-tab>	nvim/general/keys.vim	/^nnoremap  <silent>   <m-tab> <C-w>w <CR>$/;"	m
<plug>(-fzf-/)	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^nnoremap <plug>(-fzf-\/) \/$/;"	m
<plug>(-fzf-:)	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^nnoremap <plug>(-fzf-:) :$/;"	m
<plug>(-fzf-vim-do)	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^nnoremap <plug>(-fzf-vim-do) :execute g:__fzf_command<cr>$/;"	m
<plug>(fzf-complete-buffer-line)	nvim/autoload/plugged/fzf.vim/plugin/fzf.vim	/^inoremap <expr> <plug>(fzf-complete-buffer-line) fzf#vim#complete#buffer_line()$/;"	m
<plug>(fzf-complete-file)	nvim/autoload/plugged/fzf.vim/plugin/fzf.vim	/^  inoremap <expr> <plug>(fzf-complete-file)      fzf#vim#complete#path("find . -path '*\/\\.*' -/;"	m
<plug>(fzf-complete-file)	nvim/autoload/plugged/fzf.vim/plugin/fzf.vim	/^  inoremap <expr> <plug>(fzf-complete-file)      fzf#vim#complete#path('dir \/s\/b\/a:-d')$/;"	m
<plug>(fzf-complete-file-ag)	nvim/autoload/plugged/fzf.vim/plugin/fzf.vim	/^inoremap <expr> <plug>(fzf-complete-file-ag)     fzf#vim#complete#path('ag -l -g ""')$/;"	m
<plug>(fzf-complete-line)	nvim/autoload/plugged/fzf.vim/plugin/fzf.vim	/^inoremap <expr> <plug>(fzf-complete-line)        fzf#vim#complete#line()$/;"	m
<plug>(fzf-complete-path)	nvim/autoload/plugged/fzf.vim/plugin/fzf.vim	/^  inoremap <expr> <plug>(fzf-complete-path)      fzf#vim#complete#path("find . -path '*\/\\.*' -/;"	m
<plug>(fzf-complete-path)	nvim/autoload/plugged/fzf.vim/plugin/fzf.vim	/^  inoremap <expr> <plug>(fzf-complete-path)      fzf#vim#complete#path('dir \/s\/b')$/;"	m
<plug>(fzf-complete-word)	nvim/autoload/plugged/fzf.vim/plugin/fzf.vim	/^inoremap <expr> <plug>(fzf-complete-word)        fzf#vim#complete#word()$/;"	m
<plug>(fzf-maps-i)	nvim/autoload/plugged/fzf.vim/plugin/fzf.vim	/^inoremap <silent> <plug>(fzf-maps-i) <c-o>:call fzf#vim#maps('i', 0)<cr>$/;"	m
<plug>(fzf-maps-n)	nvim/autoload/plugged/fzf.vim/plugin/fzf.vim	/^nnoremap <silent> <plug>(fzf-maps-n) :<c-u>call fzf#vim#maps('n', 0)<cr>$/;"	m
<plug>(fzf-maps-o)	nvim/autoload/plugged/fzf.vim/plugin/fzf.vim	/^onoremap <silent> <plug>(fzf-maps-o) <c-c>:<c-u>call fzf#vim#maps('o', 0)<cr>$/;"	m
<plug>(fzf-maps-x)	nvim/autoload/plugged/fzf.vim/plugin/fzf.vim	/^xnoremap <silent> <plug>(fzf-maps-x) :<c-u>call fzf#vim#maps('x', 0)<cr>$/;"	m
<plug>(plug-preview)	nvim/autoload/plug.vim	/^    nnoremap <silent> <buffer> <plug>(plug-preview) :silent! call <SID>preview_commit()<cr>$/;"	m
<space>	.config/nvim/keys/mappings.vim	/^nnoremap <space> za$/;"	m
<space>	.config/nvim/keys/mappings.vim	/^vnoremap <space> zf$/;"	m
<space>	nvim/general/keys.vim	/^nnoremap <space> za$/;"	m
<space>	nvim/general/keys.vim	/^vnoremap <space> zf$/;"	m
>	.config/nvim/keys/mappings.vim	/^vnoremap > >gv$/;"	m
>	nvim/general/keys.vim	/^vnoremap > >gv$/;"	m
?	.config/nvim/configs/incsearch.vim	/^map ?  <Plug>(incsearch-backward)$/;"	m
?	nvim/autoload/plugged/incsearch.vim/test/autonohlsearch.vim	/^  map ?  <Plug>(incsearch-backward)$/;"	m
?	nvim/autoload/plugged/incsearch.vim/test/cancel.vim	/^  map ?  <Plug>(incsearch-backward)$/;"	m
?	nvim/autoload/plugged/incsearch.vim/test/count.vim	/^map ?  <Plug>(incsearch-backward)$/;"	m
?	nvim/autoload/plugged/incsearch.vim/test/default_behaviors.vim	/^  map ?  <Plug>(incsearch-backward)$/;"	m
?	nvim/autoload/plugged/incsearch.vim/test/default_behaviors.vim	/^map ?  <Plug>(incsearch-backward)$/;"	m
?	nvim/autoload/plugged/incsearch.vim/test/error_warning_emulation.vim	/^  map ?  <Plug>(incsearch-backward)$/;"	m
?	nvim/autoload/plugged/incsearch.vim/test/fold.vim	/^  map ?  <Plug>(incsearch-backward)$/;"	m
?	nvim/autoload/plugged/incsearch.vim/test/fold.vim	/^map ?  <Plug>(incsearch-backward)$/;"	m
?	nvim/autoload/plugged/incsearch.vim/test/highlight.vim	/^  map ?  <Plug>(incsearch-backward)$/;"	m
?	nvim/autoload/plugged/incsearch.vim/test/history.vim	/^  map ?  <Plug>(incsearch-backward)$/;"	m
?	nvim/autoload/plugged/incsearch.vim/test/incremental_next_prev.vim	/^  map ?  <Plug>(incsearch-backward)$/;"	m
?	nvim/autoload/plugged/incsearch.vim/test/insert_register.vim	/^  map ?  <Plug>(incsearch-backward)$/;"	m
?	nvim/autoload/plugged/incsearch.vim/test/jumplist.vim	/^  map ?  <Plug>(incsearch-backward)$/;"	m
?	nvim/autoload/plugged/incsearch.vim/test/magic_option.vim	/^  map ?  <Plug>(incsearch-backward)$/;"	m
?	nvim/autoload/plugged/incsearch.vim/test/module.vim	/^  map ?  <Plug>(incsearch-backward)$/;"	m
?	nvim/autoload/plugged/incsearch.vim/test/n_and_N.vim	/^  map ?  <Plug>(incsearch-backward)$/;"	m
?	nvim/autoload/plugged/incsearch.vim/test/nomagic.vim	/^  map ?  <Plug>(incsearch-backward)$/;"	m
?	nvim/autoload/plugged/incsearch.vim/test/nomagic.vim	/^map ?  <Plug>(incsearch-backward)$/;"	m
?	nvim/autoload/plugged/incsearch.vim/test/operator_pending_behavior.vim	/^  map ?  <Plug>(incsearch-backward)$/;"	m
?	nvim/autoload/plugged/incsearch.vim/test/operator_pending_behavior.vim	/^map ?  <Plug>(incsearch-backward)$/;"	m
?	nvim/autoload/plugged/incsearch.vim/test/register.vim	/^map ?  <Plug>(incsearch-backward)$/;"	m
?	nvim/autoload/plugged/incsearch.vim/test/repetition.vim	/^  map ?  <Plug>(incsearch-backward)$/;"	m
?	nvim/autoload/plugged/incsearch.vim/test/scroll.vim	/^  map ?  <Plug>(incsearch-backward)$/;"	m
?	nvim/autoload/plugged/incsearch.vim/test/visual_behavior.vim	/^  map ?  <Plug>(incsearch-backward)$/;"	m
?	nvim/configs/incsearch.vim	/^map ?  <Plug>(incsearch-backward)$/;"	m
ALWAYS	nvim/autoload/plugged/vim-snippets/pythonx/javascript_snippets.py	/^ALWAYS = 'always'$/;"	v
API	nvim/autoload/plugged/vim-devicons/DEVELOPER.md	/^### API$/;"	S
API Examples	nvim/autoload/plugged/vim-devicons/DEVELOPER.md	/^#### API Examples$/;"	t	subsection:API
AUR	nvim/autoload/plugged/sonokai/README.md	/^### AUR$/;"	S	section:Installation
Acknowledgments	nvim/autoload/plugged/vim-devicons/README.md	/^Acknowledgments$/;"	s
Actual behaviour	nvim/autoload/plugged/nvim-lspconfig/.github/ISSUE_TEMPLATE/bug_report.md	/^### Actual behaviour$/;"	S
Actual behaviour	nvim/autoload/plugged/sonokai/.github/ISSUE_TEMPLATE/bug_report.md	/^### Actual behaviour$/;"	S
Added	nvim/autoload/plugged/sonokai/CHANGELOG.md	/^### Added$/;"	S	section:Changelog""[0.1.0] - 2020-02-19
Added	nvim/autoload/plugged/sonokai/CHANGELOG.md	/^### Added$/;"	S	section:Changelog""[0.1.1] - 2020-04-04
Added	nvim/autoload/plugged/sonokai/CHANGELOG.md	/^### Added$/;"	S	section:Changelog""[0.2.0] - 2020-07-20
Added	nvim/autoload/plugged/sonokai/CHANGELOG.md	/^### Added$/;"	S	section:Changelog""[Unreleased]
Adding new modules	nvim/autoload/plugged/nvim-treesitter/CONTRIBUTING.md	/^## Adding new modules$/;"	s	chapter:Contributing to `nvim-treesitter`
Adding parsers	nvim/autoload/plugged/nvim-treesitter/README.md	/^## Adding parsers$/;"	s	chapter:Quickstart
Additional usages	nvim/autoload/plugged/incsearch.vim/README.md	/^### Additional usages$/;"	S	section:Usage
Advanced customization	nvim/autoload/plugged/fzf.vim/README.md	/^### Advanced customization$/;"	S	section:fzf :heart: vim""Customization
AirlineExtensions	nvim/autoload/plugged/vim-airline/plugin/airline.vim	/^command! AirlineExtensions   call s:airline_extensions()$/;"	c
AirlineRefresh	nvim/autoload/plugged/vim-airline/plugin/airline.vim	/^command! -bar -bang AirlineRefresh call s:airline_refresh(<q-bang>)$/;"	c
AirlineTheme	nvim/autoload/plugged/vim-airline/plugin/airline.vim	/^command! -bar -nargs=? -complete=customlist,<sid>get_airline_themes AirlineTheme call <sid>airli/;"	c
AirlineToggle	nvim/autoload/plugged/vim-airline/plugin/airline.vim	/^command! -bar AirlineToggle  call s:airline_toggle()$/;"	c
AirlineToggleWhitespace	nvim/autoload/plugged/vim-airline/plugin/airline.vim	/^command! -bar AirlineToggleWhitespace call airline#extensions#whitespace#toggle()$/;"	c
AirlineWebDevIcons	nvim/autoload/plugged/vim-devicons/plugin/webdevicons.vim	/^function! AirlineWebDevIcons(...)$/;"	f
Album-Cover-Notif	.bin/ncmpcppp_cover.sh	/^function Album-Cover-Notif() {$/;"	f
Any background context you can provide?	nvim/autoload/plugged/vim-devicons/.github/PULL_REQUEST_TEMPLATE.md	/^#### Any background context you can provide?$/;"	t
Attribution	nvim/autoload/plugged/vim-devicons/CODE_OF_CONDUCT.md	/^## Attribution$/;"	s	chapter:Contributor Covenant Code of Conduct
Author	nvim/autoload/plugged/incsearch.vim/README.md	/^Author$/;"	s
Author	nvim/autoload/plugged/undotree/README.md	/^### Author$/;"	S
Auto-install	nvim/autoload/plugged/nvim-lspconfig/CONTRIBUTING.md	/^## Auto-install$/;"	s	chapter:Contributing to nvim-lspconfig
Automatic :nohlsearch	nvim/autoload/plugged/incsearch.vim/README.md	/^#### Automatic :nohlsearch$/;"	t	subsection:Usage""Additional usages
Automatic truncation	nvim/autoload/plugged/vim-airline/README.md	/^## Automatic truncation$/;"	s	chapter:Features
Available modules	nvim/autoload/plugged/nvim-treesitter/README.md	/^# Available modules$/;"	c
BASE_PATH	nvim/autoload/plugged/editorconfig-vim/tests/plugin/spec/editorconfig_spec.rb	/^BASE_PATH = File.expand_path('..\/plugin_tests\/test_files\/', __FILE__)$/;"	C
BUILD_INVERTED_INDEX	nvim/autoload/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set BUILD_INVERTED_INDEX=1$/;"	v
BUILD_INVERTED_INDEX	nvim/autoload/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set BUILD_INVERTED_INDEX=0$/;"	v
Basic usage	nvim/autoload/plugged/incsearch.vim/README.md	/^### Basic usage$/;"	S	section:Usage
Before submitting	nvim/autoload/plugged/fzf.vim/.github/ISSUE_TEMPLATE.md	/^Before submitting$/;"	c
Behind The Scenes	nvim/autoload/plugged/vim-markdown-preview/README.md	/^Behind The Scenes$/;"	s	chapter:Vim Markdown Preview
Best-effort, unsupported	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## Best-effort, unsupported$/;"	s	chapter:nvim-lspconfig
Best-effort, unsupported	nvim/autoload/plugged/nvim-lspconfig/scripts/README_template.md	/^## Best-effort, unsupported$/;"	s	chapter:nvim-lspconfig
Browser	nvim/autoload/plugged/vim-carbon-now-sh/README.md	/^### Browser$/;"	S	section:vim-carbon-now-sh""Usage
BufTabLine	nvim/autoload/plugged/vim-buftabline/plugin/buftabline.vim	/^augroup BufTabLine$/;"	a
Buffer basics	nvim/autoload/plugged/vim-buftabline/README.md	/^Buffer basics$/;"	s
Buftabline vs. X	nvim/autoload/plugged/vim-buftabline/README.md	/^Buftabline vs. X$/;"	s
Bugs	nvim/autoload/plugged/vim-airline/CONTRIBUTING.md	/^# Bugs$/;"	c
Bugs and Feature Requests	nvim/autoload/plugged/editorconfig-vim/README.md	/^## Bugs and Feature Requests$/;"	s	chapter:EditorConfig Vim Plugin
CHANGELOG	nvim/autoload/plugged/vim-devicons/CHANGELOG.md	/^CHANGELOG$/;"	c
COUNT	nvim/autoload/plugged/minimap.vim/bin/minimap_generator.bat	/^set COUNT=0$/;"	v
CSCOPE_ARGS	nvim/autoload/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set CSCOPE_ARGS=%CSCOPE_ARGS% -q$/;"	v
CSCOPE_ARGS	nvim/autoload/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set CSCOPE_ARGS=$/;"	v
CSCOPE_ARGS	nvim/autoload/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set CSCOPE_ARGS=%CSCOPE_ARGS% -i %DB_FILE%.files$/;"	v
CSCOPE_EXE	nvim/autoload/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set CSCOPE_EXE=%~2$/;"	v
CSCOPE_EXE	nvim/autoload/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set CSCOPE_EXE=cscope$/;"	v
CTAGS_ARGS	nvim/autoload/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        set CTAGS_ARGS=%CTAGS_ARGS% "%PROJECT_ROOT%"$/;"	v
CTAGS_ARGS	nvim/autoload/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        set CTAGS_ARGS=%CTAGS_ARGS% --append "%UPDATED_SOURCE%"$/;"	v
CTAGS_ARGS	nvim/autoload/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        set CTAGS_ARGS=%CTAGS_ARGS% -L %TAGS_FILE%.files$/;"	v
CTAGS_ARGS	nvim/autoload/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_ARGS=%CTAGS_ARGS% %~2$/;"	v
CTAGS_ARGS	nvim/autoload/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_ARGS=%CTAGS_ARGS% --exclude=%2$/;"	v
CTAGS_ARGS	nvim/autoload/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_ARGS=%CTAGS_ARGS% --options=%2$/;"	v
CTAGS_ARGS	nvim/autoload/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set CTAGS_ARGS=$/;"	v
CTAGS_EXE	nvim/autoload/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_EXE=%~2$/;"	v
CTAGS_EXE	nvim/autoload/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set CTAGS_EXE=ctags$/;"	v
CTEST_CUSTOM_TESTS_IGNORE	nvim/autoload/plugged/editorconfig-vim/tests/core/CTestCustom.cmake	/^    set(CTEST_CUSTOM_TESTS_IGNORE ${CTEST_CUSTOM_TESTS_IGNORE} g_utf_8_char)$/;"	v
CTEST_CUSTOM_TESTS_IGNORE	nvim/autoload/plugged/editorconfig-vim/tests/core/CTestCustom.cmake	/^    set(CTEST_CUSTOM_TESTS_IGNORE ${CTEST_CUSTOM_TESTS_IGNORE} utf_8_char)$/;"	v
CarbonNowSh	nvim/autoload/plugged/vim-carbon-now-sh/plugin/vim-carbon-now-sh.vim	/^command! -range=% CarbonNowSh <line1>,<line2>call s:carbonNowSh()$/;"	c
Chain Completion Support	nvim/autoload/plugged/completion-nvim/README.md	/^### Chain Completion Support$/;"	S	section:completion-nvim""Configuration
Change Log	nvim/autoload/plugged/vim-airline/CHANGELOG.md	/^# Change Log$/;"	c
Change virtual text prefix	nvim/autoload/plugged/diagnostic-nvim/README.md	/^### Change virtual text prefix$/;"	S	section:diagnostic-nvim""Options
Changed	nvim/autoload/plugged/sonokai/CHANGELOG.md	/^### Changed$/;"	S	section:Changelog""[0.2.0] - 2020-07-20
Changed	nvim/autoload/plugged/sonokai/CHANGELOG.md	/^### Changed$/;"	S	section:Changelog""[Unreleased]
Changelog	nvim/autoload/plugged/sonokai/CHANGELOG.md	/^# Changelog$/;"	c
Changing Completion Confirm key	nvim/autoload/plugged/completion-nvim/README.md	/^### Changing Completion Confirm key$/;"	S	section:completion-nvim""Configuration
Check list	nvim/autoload/plugged/minimap.vim/.github/issue_template.md	/^## Check list$/;"	s
Check list	nvim/autoload/plugged/minimap.vim/.github/pull_request_template.md	/^## Check list$/;"	s
Checking for Final Newline	nvim/autoload/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/insert_final_newline.rst	/^Checking for Final Newline$/;"	s	chapter:Insert Final Newline Property
CleanUp	nvim/autoload/plugged/vim-gutentags/plat/unix/update_scopedb.sh	/^CleanUp() {$/;"	f
Command-local options	nvim/autoload/plugged/fzf.vim/README.md	/^### Command-local options$/;"	S	section:fzf :heart: vim""Customization
Commands	nvim/autoload/plugged/diagnostic-nvim/README.md	/^## Commands$/;"	s	chapter:diagnostic-nvim
Commands	nvim/autoload/plugged/fzf.vim/README.md	/^Commands$/;"	s	chapter:fzf :heart: vim
Commands	nvim/autoload/plugged/nvim-treesitter/README.md	/^# Commands$/;"	c
Commentary	nvim/autoload/plugged/vim-commentary/plugin/commentary.vim	/^command! -range -bar Commentary call s:go(<line1>,<line2>)$/;"	c
Compatibility with diagnostic-nvim	nvim/autoload/plugged/completion-nvim/README.md	/^## Compatibility with diagnostic-nvim$/;"	s	chapter:completion-nvim
Completion functions	nvim/autoload/plugged/fzf.vim/README.md	/^Completion functions$/;"	s	chapter:fzf :heart: vim
CompletionToggle	nvim/autoload/plugged/completion-nvim/plugin/completion.vim	/^command! -nargs=0 CompletionToggle  lua require'completion'.completionToggle()$/;"	c
Concepts	nvim/autoload/plugged/incsearch.vim/README.md	/^Concepts$/;"	s
Configs	nvim/autoload/plugged/nvim-lspconfig/CONTRIBUTING.md	/^## Configs$/;"	s	chapter:Contributing to nvim-lspconfig
Configurable and extensible	nvim/autoload/plugged/vim-airline/README.md	/^## Configurable and extensible$/;"	s	chapter:Features
Configuration	nvim/autoload/plugged/completion-nvim/README.md	/^## Configuration$/;"	s	chapter:completion-nvim
Configuration	nvim/autoload/plugged/neosnippet.vim/README.md	/^Configuration$/;"	s	chapter:Neosnippet
Configuration	nvim/autoload/plugged/undotree/README.md	/^### Configuration$/;"	S
Configurations	nvim/autoload/plugged/nvim-lspconfig/README.md	/^# Configurations$/;"	c
Configurations	nvim/autoload/plugged/nvim-lspconfig/scripts/README_template.md	/^# Configurations$/;"	c
Configure	nvim/autoload/plugged/formatter.nvim/README.md	/^## Configure$/;"	s	chapter:formatter.nvim
Constants	nvim/autoload/plugged/nvim-treesitter/CONTRIBUTING.md	/^#### Constants$/;"	t	subsection:Contributing to `nvim-treesitter`""Parser configurations""Highlights
Contents	nvim/autoload/plugged/vim-snippets/README.md	/^Contents$/;"	s	chapter:snipMate & UltiSnip Snippets
Contributing	nvim/autoload/plugged/vim-devicons/README.md	/^Contributing$/;"	s
Contributing	nvim/autoload/plugged/vim-gutentags/CONTRIBUTING.md	/^# Contributing$/;"	c
Contributing Guide	nvim/autoload/plugged/vim-devicons/CONTRIBUTING.md	/^# Contributing Guide$/;"	c
Contributing to `nvim-treesitter`	nvim/autoload/plugged/nvim-treesitter/CONTRIBUTING.md	/^# Contributing to `nvim-treesitter`$/;"	c
Contributing to nvim-lspconfig	nvim/autoload/plugged/nvim-lspconfig/CONTRIBUTING.md	/^# Contributing to nvim-lspconfig$/;"	c
Contributions	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## Contributions$/;"	s	chapter:nvim-lspconfig
Contributions	nvim/autoload/plugged/nvim-lspconfig/scripts/README_template.md	/^## Contributions$/;"	s	chapter:nvim-lspconfig
Contributions	nvim/autoload/plugged/vim-airline/CONTRIBUTING.md	/^# Contributions$/;"	c
Contributor Covenant Code of Conduct	nvim/autoload/plugged/vim-devicons/CODE_OF_CONDUCT.md	/^# Contributor Covenant Code of Conduct$/;"	c
Converter feature	nvim/autoload/plugged/incsearch.vim/README.md	/^### Converter feature$/;"	S	section::tada: Version 2.0 :tada:
Credits	nvim/autoload/plugged/vim-better-whitespace/README.md	/^## Credits$/;"	s	chapter:Vim Better Whitespace Plugin
CurrentLineWhitespaceOff	nvim/autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^command! -nargs=* CurrentLineWhitespaceOff echoerr 'E492: Deprecated command CurrentLineWhitespa/;"	c
CurrentLineWhitespaceOn	nvim/autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^command! CurrentLineWhitespaceOn echoerr 'E492: Deprecated command CurrentLineWhitespaceOn: '.s:/;"	c
Custom completion	nvim/autoload/plugged/fzf.vim/README.md	/^Custom completion$/;"	s	chapter:fzf :heart: vim
Custom statusline	nvim/autoload/plugged/fzf.vim/README.md	/^### Custom statusline$/;"	S	section:fzf :heart: vim""Status line of terminal buffer
Customization	nvim/autoload/plugged/fzf.vim/README.md	/^Customization$/;"	s	chapter:fzf :heart: vim
Customization	nvim/autoload/plugged/sonokai/zsh/README.md	/^## Customization$/;"	s	chapter:Prompt
D	nvim/autoload/plug.vim	/^  nnoremap <silent> <buffer> D  :PlugDiff<cr>$/;"	m
D	nvim/autoload/plugged/editorconfig-vim/tests/core/ecvimlib.ps1	/^filter global:D($file = $debug) {$/;"	f
DB_FILE	nvim/autoload/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set DB_FILE=%~2$/;"	v
DB_FILE	nvim/autoload/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set DB_FILE=cscope.out$/;"	v
DIR	nvim/autoload/plugged/editorconfig-vim/tests/core/ecvimlib.ps1	/^$global:DIR = $PSScriptRoot$/;"	v
Debug	nvim/autoload/plugged/undotree/README.md	/^### Debug$/;"	S
Debug	nvim/autoload/plugged/vim-rooter/test/runner.vim	/^function Debug(msg)$/;"	f
Defining Modules	nvim/autoload/plugged/nvim-treesitter/README.md	/^# Defining Modules$/;"	c
Definition Scope	nvim/autoload/plugged/nvim-treesitter/CONTRIBUTING.md	/^#### Definition Scope$/;"	t	subsection:Contributing to `nvim-treesitter`""Parser configurations""Locals
Demo	nvim/autoload/plugged/completion-nvim/README.md	/^## Demo$/;"	s	chapter:completion-nvim
Demo	nvim/autoload/plugged/diagnostic-nvim/README.md	/^## Demo$/;"	s	chapter:diagnostic-nvim
Demo	nvim/autoload/plugged/vim-highlightedyank/README.md	/^## Demo$/;"	s	chapter:vim-highlightedyank
Dependencies	nvim/autoload/plugged/fzf.vim/README.md	/^### Dependencies$/;"	S	section:fzf :heart: vim""Installation
Deprecated commands	nvim/autoload/plugged/vim-better-whitespace/README.md	/^## Deprecated commands$/;"	s	chapter:Vim Better Whitespace Plugin
Description	nvim/autoload/plugged/minimap.vim/.github/pull_request_template.md	/^## Description$/;"	s
Description	nvim/autoload/plugged/undotree/README.md	/^### Description$/;"	S
Developers	nvim/autoload/plugged/vim-devicons/README.md	/^Developers$/;"	s
Disable for a specific filetype	nvim/autoload/plugged/editorconfig-vim/README.md	/^### Disable for a specific filetype$/;"	S	section:EditorConfig Vim Plugin""Selected Options
Disable rules	nvim/autoload/plugged/editorconfig-vim/README.md	/^### Disable rules$/;"	S	section:EditorConfig Vim Plugin""Selected Options
DisableStripWhitespaceOnSave	nvim/autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^command! DisableStripWhitespaceOnSave call <SID>DisableStripWhitespaceOnSave()$/;"	c
DisableWhitespace	nvim/autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^command! DisableWhitespace call <SID>DisableWhitespace()$/;"	c
Document	nvim/autoload/plugged/incsearch.vim/README.md	/^Document$/;"	s
Documentation	nvim/autoload/plugged/vim-airline/README.md	/^# Documentation$/;"	c
DoneParseArgs	nvim/autoload/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^:DoneParseArgs$/;"	l
DoneParseArgs	nvim/autoload/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^:DoneParseArgs$/;"	l
Download and Install	nvim/autoload/plugged/undotree/README.md	/^### Download and Install$/;"	S
EDITORCONFIG_CMD	nvim/autoload/plugged/editorconfig-vim/tests/core/CMakeLists.txt	/^    set(EDITORCONFIG_CMD "${CMAKE_SOURCE_DIR}\/editorconfig")$/;"	v
EDITORCONFIG_CMD	nvim/autoload/plugged/editorconfig-vim/tests/core/CMakeLists.txt	/^    set(EDITORCONFIG_CMD "${CMAKE_SOURCE_DIR}\/editorconfig.bat")$/;"	v
EDITORCONFIG_CMD	nvim/autoload/plugged/editorconfig-vim/tests/core/tests/CMakeLists.txt	/^    set(EDITORCONFIG_CMD "editorconfig" CACHE STRING "editorconfig command.")$/;"	v
EDITORCONFIG_CMD_IS_TARGET	nvim/autoload/plugged/editorconfig-vim/tests/core/CMakeLists.txt	/^set(EDITORCONFIG_CMD_IS_TARGET FALSE)$/;"	v
EDITORCONFIG_CMD_IS_TARGET	nvim/autoload/plugged/editorconfig-vim/tests/core/tests/CMakeLists.txt	/^    set(EDITORCONFIG_CMD_IS_TARGET OFF CACHE BOOL$/;"	v
EOF	.bin/bt-connect.sh	/^bluetoothctl << EOF$/;"	h
EOF	.bin/rofr	/^    cat <<- EOF$/;"	h
EOF	.bin/rofr.sh	/^    cat <<- EOF$/;"	h
EOF	.bin/toggle.sh	/^    cat <<EOF$/;"	h
EOF	nvim/autoload/plugged/editorconfig-vim/tests/core/editorconfig	/^helpstr=$(cat<<'EOF'$/;"	h
ERROR	nvim/autoload/plugged/vim-highlightedyank/test/test-highlightedyank.bat	/^:ERROR$/;"	l
EditorConfig Vim Plugin	nvim/autoload/plugged/editorconfig-vim/README.md	/^# EditorConfig Vim Plugin$/;"	c
EditorConfigDisable	nvim/autoload/plugged/editorconfig-vim/plugin/editorconfig.vim	/^command! EditorConfigDisable call s:EditorConfigEnable(0)$/;"	c
EditorConfigEnable	nvim/autoload/plugged/editorconfig-vim/plugin/editorconfig.vim	/^command! EditorConfigEnable call s:EditorConfigEnable(1)$/;"	c
EditorConfigReload	nvim/autoload/plugged/editorconfig-vim/plugin/editorconfig.vim	/^command! EditorConfigReload call s:UseConfigFiles() " Reload EditorConfig files$/;"	c
Emacs-like incsearch: move the cursor while incremental searching	nvim/autoload/plugged/incsearch.vim/README.md	/^### Emacs-like incsearch: move the cursor while incremental searching$/;"	S	section:Usage
Enable Snippets Support	nvim/autoload/plugged/completion-nvim/README.md	/^### Enable Snippets Support$/;"	S	section:completion-nvim""Configuration
Enable/Disable Sign	nvim/autoload/plugged/diagnostic-nvim/README.md	/^### Enable\/Disable Sign$/;"	S	section:diagnostic-nvim""Options
Enable/Disable Underline	nvim/autoload/plugged/diagnostic-nvim/README.md	/^### Enable\/Disable Underline$/;"	S	section:diagnostic-nvim""Options
Enable/Disable auto hover	nvim/autoload/plugged/completion-nvim/README.md	/^### Enable\/Disable auto hover$/;"	S	section:completion-nvim""Configuration
Enable/Disable auto popup	nvim/autoload/plugged/completion-nvim/README.md	/^### Enable\/Disable auto popup$/;"	S	section:completion-nvim""Configuration
Enable/Disable auto popup window	nvim/autoload/plugged/diagnostic-nvim/README.md	/^### Enable\/Disable auto popup window$/;"	S	section:diagnostic-nvim""Options
Enable/Disable auto signature	nvim/autoload/plugged/completion-nvim/README.md	/^### Enable\/Disable auto signature$/;"	S	section:completion-nvim""Configuration
Enable/Disable insert delay	nvim/autoload/plugged/diagnostic-nvim/README.md	/^### Enable\/Disable insert delay$/;"	S	section:diagnostic-nvim""Options
Enable/Disable virtual text	nvim/autoload/plugged/diagnostic-nvim/README.md	/^### Enable\/Disable virtual text$/;"	S	section:diagnostic-nvim""Options
EnableStripWhitespaceOnSave	nvim/autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^command! EnableStripWhitespaceOnSave call <SID>EnableStripWhitespaceOnSave()$/;"	c
EnableWhitespace	nvim/autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^command! EnableWhitespace call <SID>EnableWhitespace()$/;"	c
Enforcement	nvim/autoload/plugged/vim-devicons/CODE_OF_CONDUCT.md	/^## Enforcement$/;"	s	chapter:Contributor Covenant Code of Conduct
Environment info	nvim/autoload/plugged/minimap.vim/.github/issue_template.md	/^## Environment info$/;"	s
Example	nvim/autoload/plugged/incsearch.vim/README.md	/^#### Example$/;"	t	subsection::tada: Version 2.0 :tada:""Converter feature
Example: Advanced ripgrep integration	nvim/autoload/plugged/fzf.vim/README.md	/^#### Example: Advanced ripgrep integration$/;"	t	subsection:fzf :heart: vim""Customization""Advanced customization
Example: Customizing `Files` command	nvim/autoload/plugged/fzf.vim/README.md	/^#### Example: Customizing `Files` command$/;"	t	subsection:fzf :heart: vim""Customization""Advanced customization
Example: `Rg` command with preview window	nvim/autoload/plugged/fzf.vim/README.md	/^#### Example: `Rg` command with preview window$/;"	t	subsection:fzf :heart: vim""Customization""Advanced customization
Example: `git grep` wrapper	nvim/autoload/plugged/fzf.vim/README.md	/^#### Example: `git grep` wrapper$/;"	t	subsection:fzf :heart: vim""Customization""Advanced customization
Example: custom config	nvim/autoload/plugged/nvim-lspconfig/README.md	/^### Example: custom config$/;"	S	section:nvim-lspconfig""Usage
Example: custom config	nvim/autoload/plugged/nvim-lspconfig/scripts/README_template.md	/^### Example: custom config$/;"	S	section:nvim-lspconfig""Usage
Example: override default config	nvim/autoload/plugged/nvim-lspconfig/README.md	/^### Example: override default config$/;"	S	section:nvim-lspconfig""Usage
Example: override default config	nvim/autoload/plugged/nvim-lspconfig/scripts/README_template.md	/^### Example: override default config$/;"	S	section:nvim-lspconfig""Usage
Example: override some defaults	nvim/autoload/plugged/nvim-lspconfig/README.md	/^### Example: override some defaults$/;"	S	section:nvim-lspconfig""Usage
Example: override some defaults	nvim/autoload/plugged/nvim-lspconfig/scripts/README_template.md	/^### Example: override some defaults$/;"	S	section:nvim-lspconfig""Usage
Example: using the defaults	nvim/autoload/plugged/nvim-lspconfig/README.md	/^### Example: using the defaults$/;"	S	section:nvim-lspconfig""Usage
Example: using the defaults	nvim/autoload/plugged/nvim-lspconfig/scripts/README_template.md	/^### Example: using the defaults$/;"	S	section:nvim-lspconfig""Usage
Excluded patterns	nvim/autoload/plugged/editorconfig-vim/README.md	/^### Excluded patterns$/;"	S	section:EditorConfig Vim Plugin""Selected Options
Expected behaviour	nvim/autoload/plugged/nvim-lspconfig/.github/ISSUE_TEMPLATE/bug_report.md	/^### Expected behaviour$/;"	S
Expected behaviour	nvim/autoload/plugged/sonokai/.github/ISSUE_TEMPLATE/bug_report.md	/^### Expected behaviour$/;"	S
Experimental API	nvim/autoload/plugged/incsearch.vim/README.md	/^### Experimental API$/;"	S	section::tada: Version 2.0 :tada:
Extensible pipeline	nvim/autoload/plugged/vim-airline/README.md	/^#### Extensible pipeline$/;"	t	section:Features""Configurable and extensible
External modules	nvim/autoload/plugged/nvim-treesitter/README.md	/^# External modules$/;"	c
Extra features	nvim/autoload/plugged/nvim-treesitter/README.md	/^# Extra features$/;"	c
Extras	nvim/autoload/plugged/vim-airline/README.md	/^## Extras$/;"	s	chapter:Features
FAQ	nvim/autoload/plugged/vim-airline/README.md	/^# FAQ$/;"	c
FAQ	nvim/autoload/plugged/vim-commentary/README.markdown	/^## FAQ$/;"	s	chapter:commentary.vim
FILESIZE	nvim/autoload/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^for \/F %%F in ("%DB_FILE%.files") do set FILESIZE=%%~zF$/;"	v
FILESIZE	nvim/autoload/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set FILESIZE=0$/;"	v
FILE_LIST_CMD	nvim/autoload/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set FILE_LIST_CMD=%~2$/;"	v
FILE_LIST_CMD	nvim/autoload/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set FILE_LIST_CMD=$/;"	v
FILE_LIST_CMD	nvim/autoload/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set FILE_LIST_CMD=%~2$/;"	v
FILE_LIST_CMD	nvim/autoload/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set FILE_LIST_CMD=$/;"	v
FILE_LIST_CMD_IS_ABSOLUTE	nvim/autoload/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set FILE_LIST_CMD_IS_ABSOLUTE=1$/;"	v
FILE_LIST_CMD_IS_ABSOLUTE	nvim/autoload/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set FILE_LIST_CMD_IS_ABSOLUTE=0$/;"	v
Feature `X` does not work for `{language}`...	nvim/autoload/plugged/nvim-treesitter/README.md	/^## Feature `X` does not work for `{language}`...$/;"	s	chapter:Troubleshooting
Features	nvim/autoload/plugged/completion-nvim/README.md	/^## Features$/;"	s	chapter:completion-nvim
Features	nvim/autoload/plugged/diagnostic-nvim/README.md	/^## Features$/;"	s	chapter:diagnostic-nvim
Features	nvim/autoload/plugged/sonokai/README.md	/^## Features$/;"	s
Features	nvim/autoload/plugged/vim-airline/README.md	/^# Features$/;"	c
Features	nvim/autoload/plugged/vim-devicons/README.md	/^Features$/;"	s
Filename	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/init.vim	/^    function! Filename(...) abort$/;"	f
Filter	nvim/autoload/plugged/vim-devicons/rplugin/python3/denite/filter/devicons_denite_converter.py	/^class Filter(Base):$/;"	c
Find-Vim	nvim/autoload/plugged/editorconfig-vim/tests/core/ecvimlib.ps1	/^function global:Find-Vim$/;"	f
FindRootDirectory	nvim/autoload/plugged/vim-rooter/plugin/rooter.vim	/^function! FindRootDirectory()$/;"	f
Finding Trailing Whitespace	nvim/autoload/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/trim_trailing_whitespace.rst	/^Finding Trailing Whitespace$/;"	s	chapter:Trim Trailing Whitespace Property
Fine-tuned configuration	nvim/autoload/plugged/vim-airline/README.md	/^#### Fine-tuned configuration$/;"	t	section:Features""Configurable and extensible
FirstDiagnostic	nvim/autoload/plugged/diagnostic-nvim/plugin/diagnostic.vim	/^command! FirstDiagnostic lua require'jumpLoc'.jumpFirstLocation()$/;"	c
Fixed	nvim/autoload/plugged/sonokai/CHANGELOG.md	/^### Fixed$/;"	S	section:Changelog""[Unreleased]
FloatingFZF	.config/nvim/configs/fzf.vim	/^    function! FloatingFZF()$/;"	f
FloatingFZF	nvim/configs/fzf.vim	/^    function! FloatingFZF()$/;"	f
Folds	nvim/autoload/plugged/nvim-treesitter/CONTRIBUTING.md	/^### Folds$/;"	S	section:Contributing to `nvim-treesitter`""Parser configurations
Format	.config/nvim/configs/coc.vim	/^command! -nargs=0 Format :call CocAction('format')$/;"	c
Frequently Asked Questions	nvim/autoload/plugged/vim-better-whitespace/README.md	/^## Frequently Asked Questions$/;"	s	chapter:Vim Better Whitespace Plugin
Functions	nvim/autoload/plugged/nvim-treesitter/CONTRIBUTING.md	/^#### Functions$/;"	t	subsection:Contributing to `nvim-treesitter`""Parser configurations""Highlights
Future ideas and examples	nvim/autoload/plugged/vim-snippets/README.md	/^Future ideas and examples$/;"	s	chapter:snipMate & UltiSnip Snippets
Generating docs	nvim/autoload/plugged/nvim-lspconfig/CONTRIBUTING.md	/^## Generating docs$/;"	s	chapter:Contributing to nvim-lspconfig
Getting help	nvim/autoload/plugged/vim-snippets/README.md	/^Getting help$/;"	s	chapter:snipMate & UltiSnip Snippets
Global options	nvim/autoload/plugged/fzf.vim/README.md	/^### Global options$/;"	S	section:fzf :heart: vim""Customization
Gutentags	nvim/autoload/plugged/vim-gutentags/README.md	/^# Gutentags$/;"	c
GutentagsClearCache	.config/nvim/configs/gutentags.vim	/^command! -nargs=0 GutentagsClearCache call system('rm ' . g:gutentags_cache_dir . '\/*')$/;"	c
GutentagsToggleEnabled	nvim/autoload/plugged/vim-gutentags/plugin/gutentags.vim	/^    command! GutentagsToggleEnabled :let g:gutentags_enabled=!g:gutentags_enabled$/;"	c
GutentagsToggleFake	nvim/autoload/plugged/vim-gutentags/plugin/gutentags.vim	/^    command! GutentagsToggleFake    :call gutentags#fake()$/;"	c
GutentagsToggleTrace	nvim/autoload/plugged/vim-gutentags/plugin/gutentags.vim	/^    command! GutentagsToggleTrace   :call gutentags#toggletrace()$/;"	c
GutentagsUpdate	nvim/autoload/plugged/vim-gutentags/autoload/gutentags.vim	/^    command! -buffer -bang GutentagsUpdate :call s:manual_update_tags(<bang>0)$/;"	c
Hide statusline	nvim/autoload/plugged/fzf.vim/README.md	/^### Hide statusline$/;"	S	section:fzf :heart: vim""Status line of terminal buffer
Highlight	nvim/autoload/plugged/nvim-treesitter/README.md	/^## Highlight$/;"	s	chapter:Available modules
Highlight and scroll are not working properly.	nvim/autoload/plugged/minimap.vim/README.md	/^#### Highlight and scroll are not working properly.$/;"	t	subsection:💬 F.A.Q
Highlight coloring	nvim/autoload/plugged/vim-highlightedyank/README.md	/^## Highlight coloring$/;"	s	chapter:vim-highlightedyank
HighlightedyankOff	nvim/autoload/plugged/vim-highlightedyank/plugin/highlightedyank.vim	/^  command! -nargs=0 -bar HighlightedyankOff    call highlightedyank#obsolete#highlightedyank#off/;"	c
HighlightedyankOff	nvim/autoload/plugged/vim-highlightedyank/plugin/highlightedyank.vim	/^  command! -nargs=0 -bar HighlightedyankOff    call highlightedyank#off()$/;"	c
HighlightedyankOn	nvim/autoload/plugged/vim-highlightedyank/plugin/highlightedyank.vim	/^  command! -nargs=0 -bar HighlightedyankOn     call highlightedyank#obsolete#highlightedyank#on(/;"	c
HighlightedyankOn	nvim/autoload/plugged/vim-highlightedyank/plugin/highlightedyank.vim	/^  command! -nargs=0 -bar HighlightedyankOn     call highlightedyank#on()$/;"	c
HighlightedyankToggle	nvim/autoload/plugged/vim-highlightedyank/plugin/highlightedyank.vim	/^  command! -nargs=0 -bar HighlightedyankToggle call highlightedyank#obsolete#highlightedyank#tog/;"	c
HighlightedyankToggle	nvim/autoload/plugged/vim-highlightedyank/plugin/highlightedyank.vim	/^  command! -nargs=0 -bar HighlightedyankToggle call highlightedyank#toggle()$/;"	c
Highlights	nvim/autoload/plugged/nvim-treesitter/CONTRIBUTING.md	/^### Highlights$/;"	S	section:Contributing to `nvim-treesitter`""Parser configurations
Historical notes	nvim/autoload/plugged/vim-snippets/README.md	/^Historical notes$/;"	s	chapter:snipMate & UltiSnip Snippets
How should this be manually tested?	nvim/autoload/plugged/vim-devicons/.github/PULL_REQUEST_TEMPLATE.md	/^#### How should this be manually tested?$/;"	t
How to contribute	nvim/autoload/plugged/vim-devicons/CONTRIBUTING.md	/^## How to contribute$/;"	s	chapter:Contributing Guide
How to reproduce the problem from neovim startup	nvim/autoload/plugged/nvim-lspconfig/.github/ISSUE_TEMPLATE/bug_report.md	/^### How to reproduce the problem from neovim startup$/;"	S
How to use a custom highlight group?	nvim/autoload/plugged/minimap.vim/README.md	/^#### How to use a custom highlight group?$/;"	t	subsection:💬 F.A.Q
How?	nvim/autoload/plugged/vim-gutentags/README.md	/^## How?$/;"	s	chapter:Gutentags
I experience bugs when using `nvim-treesitter`'s `foldexpr` similar to [#194](https://github.com/nvim-treesitter/nvim-treesitter/issues/194)	nvim/autoload/plugged/nvim-treesitter/README.md	/^## I experience bugs when using `nvim-treesitter`'s `foldexpr` similar to [#194](https:\/\/githu/;"	s	chapter:Troubleshooting
I experience weird highlighting issues similar to [#78](https://github.com/nvim-treesitter/nvim-treesitter/issues/78)	nvim/autoload/plugged/nvim-treesitter/README.md	/^## I experience weird highlighting issues similar to [#78](https:\/\/github.com\/nvim-treesitter/;"	s	chapter:Troubleshooting
I get `Error detected while processing .../plugin/nvim-treesitter.vim` every time I open Neovim	nvim/autoload/plugged/nvim-treesitter/README.md	/^## I get `Error detected while processing ...\/plugin\/nvim-treesitter.vim` every time I open Ne/;"	s	chapter:Troubleshooting
I get `module 'vim.treesitter.query' not found`	nvim/autoload/plugged/nvim-treesitter/README.md	/^## I get `module 'vim.treesitter.query' not found`$/;"	s	chapter:Troubleshooting
INDEX_WHOLE_PROJECT	nvim/autoload/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        set INDEX_WHOLE_PROJECT=0$/;"	v
INDEX_WHOLE_PROJECT	nvim/autoload/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set INDEX_WHOLE_PROJECT=1$/;"	v
If you are using Neovim or Vim 8.0.1394 (or later version),	nvim/autoload/plugged/vim-highlightedyank/README.md	/^### If you are using Neovim or Vim 8.0.1394 (or later version),$/;"	S	section:vim-highlightedyank""Usage
If you are using older Vim,	nvim/autoload/plugged/vim-highlightedyank/README.md	/^### If you are using older Vim,$/;"	S	section:vim-highlightedyank""Usage
IncSearchMap	nvim/autoload/plugged/incsearch.vim/plugin/incsearch.vim	/^command! -nargs=* IncSearchMap$/;"	c
IncSearchNoreMap	nvim/autoload/plugged/incsearch.vim/plugin/incsearch.vim	/^command! -nargs=* IncSearchNoreMap$/;"	c
Incremental regular expression editing	nvim/autoload/plugged/incsearch.vim/README.md	/^#### Incremental regular expression editing$/;"	t	subsection:Concepts""3. Useful
Incremental selection	nvim/autoload/plugged/nvim-treesitter/README.md	/^## Incremental selection$/;"	s	chapter:Available modules
Indentation	nvim/autoload/plugged/nvim-treesitter/README.md	/^## Indentation$/;"	s	chapter:Available modules
Insert Final Newline Property	nvim/autoload/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/insert_final_newline.rst	/^Insert Final Newline Property$/;"	c
Inspiration	nvim/autoload/plugged/sonokai/README.md	/^## Inspiration$/;"	s
Inspired by	nvim/autoload/plugged/vim-highlightedyank/README.md	/^## Inspired by$/;"	s	chapter:vim-highlightedyank
Install	nvim/autoload/plugged/completion-nvim/README.md	/^## Install$/;"	s	chapter:completion-nvim
Install	nvim/autoload/plugged/diagnostic-nvim/README.md	/^## Install$/;"	s	chapter:diagnostic-nvim
Install	nvim/autoload/plugged/formatter.nvim/README.md	/^## Install$/;"	s	chapter:formatter.nvim
Install	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## Install$/;"	s	chapter:nvim-lspconfig
Install	nvim/autoload/plugged/nvim-lspconfig/scripts/README_template.md	/^## Install$/;"	s	chapter:nvim-lspconfig
Install as Vim8 plugin	nvim/autoload/plugged/editorconfig-vim/README.md	/^### Install as Vim8 plugin$/;"	S	section:EditorConfig Vim Plugin""Installation
Install with [Vundle][]	nvim/autoload/plugged/editorconfig-vim/README.md	/^### Install with [Vundle][]$/;"	S	section:EditorConfig Vim Plugin""Installation
Install with [pathogen][]	nvim/autoload/plugged/editorconfig-vim/README.md	/^### Install with [pathogen][]$/;"	S	section:EditorConfig Vim Plugin""Installation
Install with [vim-plug][]	nvim/autoload/plugged/editorconfig-vim/README.md	/^### Install with [vim-plug][]$/;"	S	section:EditorConfig Vim Plugin""Installation
Install with the archive	nvim/autoload/plugged/editorconfig-vim/README.md	/^### Install with the archive$/;"	S	section:EditorConfig Vim Plugin""Installation
Installation	nvim/autoload/plugged/editorconfig-vim/README.md	/^## Installation$/;"	s	chapter:EditorConfig Vim Plugin
Installation	nvim/autoload/plugged/fzf.vim/README.md	/^Installation$/;"	s	chapter:fzf :heart: vim
Installation	nvim/autoload/plugged/incsearch.vim/README.md	/^### Installation$/;"	S	section:Usage
Installation	nvim/autoload/plugged/neosnippet.vim/README.md	/^Installation$/;"	s	chapter:Neosnippet
Installation	nvim/autoload/plugged/nvim-treesitter/README.md	/^## Installation$/;"	s	chapter:Quickstart
Installation	nvim/autoload/plugged/sonokai/README.md	/^## Installation$/;"	s
Installation	nvim/autoload/plugged/sonokai/alacritty/README.md	/^# Installation$/;"	c
Installation	nvim/autoload/plugged/vim-airline/README.md	/^# Installation$/;"	c
Installation	nvim/autoload/plugged/vim-better-whitespace/README.md	/^## Installation$/;"	s	chapter:Vim Better Whitespace Plugin
Installation	nvim/autoload/plugged/vim-carbon-now-sh/README.md	/^## Installation$/;"	s	chapter:vim-carbon-now-sh
Installation	nvim/autoload/plugged/vim-commentary/README.markdown	/^## Installation$/;"	s	chapter:commentary.vim
Installation	nvim/autoload/plugged/vim-devicons/README.md	/^Installation$/;"	s
Installation	nvim/autoload/plugged/vim-markdown-preview/README.md	/^Installation$/;"	s	chapter:Vim Markdown Preview
Installation	nvim/autoload/plugged/vim-snippets/README.md	/^Installation$/;"	s	chapter:snipMate & UltiSnip Snippets
Installing a language server	nvim/autoload/plugged/nvim-lspconfig/README.md	/^### Installing a language server$/;"	S	section:nvim-lspconfig""Usage
Installing a language server	nvim/autoload/plugged/nvim-lspconfig/scripts/README_template.md	/^### Installing a language server$/;"	S	section:nvim-lspconfig""Usage
Integrated with diagnostics or git status plugins?	nvim/autoload/plugged/minimap.vim/README.md	/^#### Integrated with diagnostics or git status plugins?$/;"	t	subsection:💬 F.A.Q
Integrating with powerline fonts	nvim/autoload/plugged/vim-airline/README.md	/^# Integrating with powerline fonts$/;"	c
Integration with other plugins	nvim/autoload/plugged/vim-devicons/DEVELOPER.md	/^#### Integration with other plugins$/;"	t	subsection:API
Intro	nvim/autoload/plugged/vim-markdown-preview/README.md	/^Intro$/;"	s	chapter:Vim Markdown Preview
Introduction	nvim/autoload/plugged/incsearch.vim/README.md	/^Introduction$/;"	s
K	.config/nvim/configs/coc.vim	/^nnoremap <silent> K :call <SID>show_documentation()<CR>$/;"	m
Keywords	nvim/autoload/plugged/nvim-treesitter/CONTRIBUTING.md	/^#### Keywords$/;"	t	subsection:Contributing to `nvim-treesitter`""Parser configurations""Highlights
L	nvim/autoload/plug.vim	/^    nnoremap <silent> <buffer> L :call <SID>status_load(line('.'))<cr>$/;"	m
L	nvim/autoload/plug.vim	/^    xnoremap <silent> <buffer> L :call <SID>status_load(line('.'))<cr>$/;"	m
L	nvim/autoload/plugged/editorconfig-vim/tests/core/tests/meta/CMakeLists.txt	/^set(L "[ \\t\\n\\r]+")$/;"	v
LOG_FILE	nvim/autoload/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set LOG_FILE=%~2$/;"	v
LOG_FILE	nvim/autoload/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^if [%LOG_FILE%]==[] set LOG_FILE=CON$/;"	v
LOG_FILE	nvim/autoload/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set LOG_FILE=$/;"	v
LOG_FILE	nvim/autoload/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set LOG_FILE=%~2$/;"	v
LOG_FILE	nvim/autoload/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^if [%LOG_FILE%]==[] set LOG_FILE=CON$/;"	v
LOG_FILE	nvim/autoload/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set LOG_FILE=$/;"	v
LSP Based Snippet parsing	nvim/autoload/plugged/completion-nvim/README.md	/^### LSP Based Snippet parsing$/;"	S	section:completion-nvim""Configuration
Language maintainers	nvim/autoload/plugged/vim-snippets/README.md	/^Language maintainers$/;"	s	chapter:Versions / dialects / ..
LanguageTree._on_line	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/languagetree.lua	/^function LanguageTree._on_line(_, _win, buf, line)$/;"	f
LanguageTree.new	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/languagetree.lua	/^function LanguageTree.new(bufnr, lang, not_root)$/;"	f
LanguageTree:add_child	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/languagetree.lua	/^function LanguageTree:add_child(lang, child)$/;"	f
LanguageTree:contains	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/languagetree.lua	/^function LanguageTree:contains(range)$/;"	f
LanguageTree:node_for_range	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/languagetree.lua	/^function LanguageTree:node_for_range(range)$/;"	f
LanguageTree:remove_child	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/languagetree.lua	/^function LanguageTree:remove_child(lang)$/;"	f
LanguageTree:update	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/languagetree.lua	/^function LanguageTree:update()$/;"	f
LastDiagnostic	nvim/autoload/plugged/diagnostic-nvim/plugin/diagnostic.vim	/^command! LastDiagnostic lua require'jumpLoc'.jumpLastLocation()$/;"	c
Latin1 Character Set	nvim/autoload/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/charset.rst	/^Latin1 Character Set$/;"	s	chapter:Tests for Newlines
Latin1 Character Set with Unicode	nvim/autoload/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/charset.rst	/^Latin1 Character Set with Unicode$/;"	s	chapter:Tests for Newlines
License	nvim/autoload/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/README.rst	/^License$/;"	s	chapter:Tests for EditorConfig Plugins
License	nvim/autoload/plugged/fzf.vim/README.md	/^License$/;"	s	chapter:fzf :heart: vim
License	nvim/autoload/plugged/sonokai/README.md	/^## License$/;"	s
License	nvim/autoload/plugged/undotree/README.md	/^### License$/;"	S
License	nvim/autoload/plugged/vim-airline/README.md	/^# License$/;"	c
License	nvim/autoload/plugged/vim-commentary/README.markdown	/^## License$/;"	s	chapter:commentary.vim
License	nvim/autoload/plugged/vim-devicons/README.md	/^License$/;"	s
License	nvim/autoload/plugged/vim-snippets/README.md	/^License$/;"	s	chapter:Versions / dialects / ..
Links	nvim/autoload/plugged/incsearch.vim/README.md	/^Links$/;"	s
Lint	nvim/autoload/plugged/nvim-lspconfig/CONTRIBUTING.md	/^## Lint$/;"	s	chapter:Contributing to nvim-lspconfig
LinterStatus	.config/nvim/themes/statusline.vim	/^function! LinterStatus() abort$/;"	f
Locals	nvim/autoload/plugged/nvim-treesitter/CONTRIBUTING.md	/^### Locals$/;"	S	section:Contributing to `nvim-treesitter`""Parser configurations
Log	nvim/autoload/plugged/vim-rooter/test/runner.vim	/^function Log(msg)$/;"	f
LoopParseArgs	nvim/autoload/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^:LoopParseArgs$/;"	l
LoopParseArgs	nvim/autoload/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^:LoopParseArgs$/;"	l
M._root._setup	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp.lua	/^function M._root._setup()$/;"	f
M._setup_buffer	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/configs.lua	/^  function M._setup_buffer(client_id)$/;"	f
M.addCompleteItems	nvim/autoload/plugged/completion-nvim/lua/completion/source.lua	/^function M.addCompleteItems(key, complete_item)$/;"	f
M.addCompletionItems	nvim/autoload/plugged/completion-nvim/lua/completion/util.lua	/^function M.addCompletionItems(item_table, item)$/;"	f
M.addCompletionSource	nvim/autoload/plugged/completion-nvim/lua/completion.lua	/^M.addCompletionSource = function(key, completed_item)$/;"	f
M.add_hook_after	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/util.lua	/^function M.add_hook_after(func, new_fn)$/;"	f
M.add_hook_before	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/util.lua	/^function M.add_hook_before(func, new_fn)$/;"	f
M.align_diagnostic_indices	nvim/autoload/plugged/diagnostic-nvim/lua/diagnostic/util.lua	/^function M.align_diagnostic_indices(diagnostics)$/;"	f
M.attach	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/highlight.lua	/^function M.attach(bufnr, lang)$/;"	f
M.attach	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/incremental_selection.lua	/^function M.attach(bufnr)$/;"	f
M.attach	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/indent.lua	/^function M.attach(bufnr)$/;"	f
M.attach_module	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^function M.attach_module(mod_name, bufnr, lang)$/;"	f
M.augroup	nvim/lua/utils.lua	/^function M.augroup(group, fn)$/;"	f
M.autoCompletion	nvim/autoload/plugged/completion-nvim/lua/completion/source.lua	/^function M.autoCompletion()$/;"	f
M.autoOpenHoverInPopup	nvim/autoload/plugged/completion-nvim/lua/completion/hover.lua	/^M.autoOpenHoverInPopup = function()$/;"	f
M.autoOpenSignatureHelp	nvim/autoload/plugged/completion-nvim/lua/completion/signature_help.lua	/^M.autoOpenSignatureHelp = function()$/;"	f
M.available_modules	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^function M.available_modules(root)$/;"	f
M.available_parsers	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/parsers.lua	/^function M.available_parsers()$/;"	f
M.available_servers	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp.lua	/^function M.available_servers()$/;"	f
M.buf_diagnostics_save_positions	nvim/autoload/plugged/diagnostic-nvim/lua/diagnostic/util.lua	/^function M.buf_diagnostics_save_positions(bufnr, diagnostics)$/;"	f
M.buf_diagnostics_signs	nvim/autoload/plugged/diagnostic-nvim/lua/diagnostic/util.lua	/^function M.buf_diagnostics_signs(bufnr, diagnostics)$/;"	f
M.buf_diagnostics_virtual_text	nvim/autoload/plugged/diagnostic-nvim/lua/diagnostic/util.lua	/^function M.buf_diagnostics_virtual_text(bufnr, diagnostics)$/;"	f
M.checkHealth	nvim/autoload/plugged/completion-nvim/lua/completion/chain_completion.lua	/^function M.checkHealth(complete_items_map)$/;"	f
M.checkHealth	nvim/autoload/plugged/completion-nvim/lua/completion/health.lua	/^function M.checkHealth()$/;"	f
M.checkHealth	nvim/autoload/plugged/completion-nvim/lua/completion/source.lua	/^function M.checkHealth()$/;"	f
M.checkHealth	nvim/autoload/plugged/completion-nvim/lua/completion/source/ins_complete.lua	/^M.checkHealth = function(mode)$/;"	f
M.checkTriggerCharacter	nvim/autoload/plugged/completion-nvim/lua/completion/util.lua	/^M.checkTriggerCharacter = function(line_to_cursor, trigger_character)$/;"	f
M.check_health	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/health.lua	/^function M.check_health()$/;"	f
M.checkhealth	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/health.lua	/^function M.checkhealth()$/;"	f
M.clearCache	nvim/autoload/plugged/completion-nvim/lua/completion/complete.lua	/^M.clearCache = function()$/;"	f
M.collect_group_results	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^function M.collect_group_results(bufnr, query_group, root)$/;"	f
M.collect_locals	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/locals.lua	/^function M.collect_locals(bufnr)$/;"	f
M.completionToggle	nvim/autoload/plugged/completion-nvim/lua/completion.lua	/^M.completionToggle = function()$/;"	f
M.confirmCompletion	nvim/autoload/plugged/completion-nvim/lua/completion.lua	/^function M.confirmCompletion(completed_item)$/;"	f
M.containing_scope	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/locals.lua	/^function M.containing_scope(node, bufnr, allow_scope)$/;"	f
M.create_buffer_cache	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/caching.lua	/^function M.create_buffer_cache()$/;"	f
M.create_module_commands	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/util.lua	/^function M.create_module_commands(module_name, commands)$/;"	f
M.define_modules	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter.lua	/^function M.define_modules(...)$/;"	f
M.define_modules	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^function M.define_modules(mod_defs)$/;"	f
M.detach	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/highlight.lua	/^function M.detach(bufnr)$/;"	f
M.detach	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/incremental_selection.lua	/^function M.detach(bufnr)$/;"	f
M.detach	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/indent.lua	/^function M.detach(bufnr)$/;"	f
M.detach_module	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^function M.detach_module(mod_name, bufnr)$/;"	f
M.diagnostics_loclist	nvim/autoload/plugged/diagnostic-nvim/lua/diagnostic.lua	/^function M.diagnostics_loclist(local_result)$/;"	f
M.find_best_match	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^function M.find_best_match(bufnr, capture_string, query_group, filter_predicate, scoring_functio/;"	f
M.find_definition	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/locals.lua	/^function M.find_definition(node, bufnr)$/;"	f
M.find_git_ancestor	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/util.lua	/^function M.find_git_ancestor(startpath)$/;"	f
M.find_node_modules_ancestor	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/util.lua	/^function M.find_node_modules_ancestor(startpath)$/;"	f
M.find_package_json_ancestor	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/util.lua	/^function M.find_package_json_ancestor(startpath)$/;"	f
M.find_usages	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/locals.lua	/^function M.find_usages(node, scope_node, bufnr)$/;"	f
M.focusable_float	nvim/autoload/plugged/completion-nvim/lua/completion/hover.lua	/^M.focusable_float = function(unique_name, fn)$/;"	f
M.format_vspackage_url	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/util.lua	/^function M.format_vspackage_url(extension_name)$/;"	f
M.ft_to_lang	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/parsers.lua	/^function M.ft_to_lang(ft)$/;"	f
M.fuzzy_score	nvim/autoload/plugged/completion-nvim/lua/completion/util.lua	/^function M.fuzzy_score(str1, str2)$/;"	f
M.generate_join	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/utils.lua	/^function M.generate_join(separator)$/;"	f
M.getCallback	nvim/autoload/plugged/completion-nvim/lua/completion/source/lsp.lua	/^M.getCallback = function()$/;"	f
M.getCallback	nvim/autoload/plugged/completion-nvim/lua/completion/source/path.lua	/^M.getCallback = function()$/;"	f
M.getChainCompleteList	nvim/autoload/plugged/completion-nvim/lua/completion/chain_completion.lua	/^function M.getChainCompleteList(filetype)$/;"	f
M.getCompletionItems	nvim/autoload/plugged/completion-nvim/lua/completion/source/lsp.lua	/^M.getCompletionItems = function(_, _)$/;"	f
M.getCompletionItems	nvim/autoload/plugged/completion-nvim/lua/completion/source/path.lua	/^M.getCompletionItems = function(prefix)$/;"	f
M.getCompletionItems	nvim/autoload/plugged/completion-nvim/lua/completion/source/snippet.lua	/^M.getCompletionItems = function(prefix)$/;"	f
M.getDiagnosticCount	nvim/autoload/plugged/diagnostic-nvim/lua/diagnostic.lua	/^function M.getDiagnosticCount(level, bufnr)$/;"	f
M.getNeosnippetItems	nvim/autoload/plugged/completion-nvim/lua/completion/source/snippet.lua	/^M.getNeosnippetItems = function(prefix)$/;"	f
M.getSnippetsNvimItems	nvim/autoload/plugged/completion-nvim/lua/completion/source/snippet.lua	/^M.getSnippetsNvimItems = function(prefix)$/;"	f
M.getUltisnipItems	nvim/autoload/plugged/completion-nvim/lua/completion/source/snippet.lua	/^M.getUltisnipItems = function(prefix)$/;"	f
M.getVsnipItems	nvim/autoload/plugged/completion-nvim/lua/completion/source/snippet.lua	/^M.getVsnipItems = function(prefix)$/;"	f
M.get_at_path	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/utils.lua	/^function M.get_at_path(tbl, path)$/;"	f
M.get_buf_lang	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/parsers.lua	/^function M.get_buf_lang(bufnr)$/;"	f
M.get_cache_dir	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/utils.lua	/^function M.get_cache_dir()$/;"	f
M.get_capture_matches	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^function M.get_capture_matches(bufnr, capture_string, query_group)$/;"	f
M.get_color	nvim/lua/utils.lua	/^function M.get_color(synID, what, mode)$/;"	f
M.get_definition_id	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/locals.lua	/^function M.get_definition_id(scope, node_text)$/;"	f
M.get_definition_scopes	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/locals.lua	/^function M.get_definition_scopes(node, bufnr, scope_type)$/;"	f
M.get_definitions	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/locals.lua	/^function M.get_definitions(bufnr)$/;"	f
M.get_definitions_lookup_table	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/locals.lua	/^M.get_definitions_lookup_table = ts_utils.memoize_by_buf_tick(function(bufnr)$/;"	f
M.get_fold_indic	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/fold.lua	/^function M.get_fold_indic(lnum)$/;"	f
M.get_indent	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/indent.lua	/^function M.get_indent(lnum)$/;"	f
M.get_local_nodes	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/locals.lua	/^function M.get_local_nodes(local_def)$/;"	f
M.get_locals	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/locals.lua	/^function M.get_locals(bufnr)$/;"	f
M.get_matches	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^function M.get_matches(bufnr, query_group)$/;"	f
M.get_module	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^function M.get_module(mod_path)$/;"	f
M.get_named_children	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/ts_utils.lua	/^function M.get_named_children(node)$/;"	f
M.get_next_loc	nvim/autoload/plugged/diagnostic-nvim/lua/jumpLoc.lua	/^function M.get_next_loc()$/;"	f
M.get_next_node	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/ts_utils.lua	/^function M.get_next_node(node, allow_switch_parents, allow_next_parent)$/;"	f
M.get_node_at_cursor	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/ts_utils.lua	/^function M.get_node_at_cursor(winnr)$/;"	f
M.get_node_range	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/ts_utils.lua	/^function M.get_node_range(node_or_range)$/;"	f
M.get_node_text	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/ts_utils.lua	/^function M.get_node_text(node, bufnr)$/;"	f
M.get_option	nvim/autoload/plugged/completion-nvim/lua/completion/option.lua	/^M.get_option = function(opt)$/;"	f
M.get_package_path	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/utils.lua	/^function M.get_package_path()$/;"	f
M.get_parser	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/parsers.lua	/^function M.get_parser(bufnr, lang)$/;"	f
M.get_parser_configs	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/parsers.lua	/^function M.get_parser_configs()$/;"	f
M.get_parser_install_dir	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/utils.lua	/^function M.get_parser_install_dir()$/;"	f
M.get_path_sep	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/utils.lua	/^function M.get_path_sep()$/;"	f
M.get_prev_loc	nvim/autoload/plugged/diagnostic-nvim/lua/jumpLoc.lua	/^function M.get_prev_loc()$/;"	f
M.get_previous_node	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/ts_utils.lua	/^function M.get_previous_node(node, allow_switch_parents, allow_previous_parent)$/;"	f
M.get_query	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^function M.get_query(lang, query_name)$/;"	f
M.get_references	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/locals.lua	/^function M.get_references(bufnr)$/;"	f
M.get_scope_tree	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/locals.lua	/^function M.get_scope_tree(node, bufnr)$/;"	f
M.get_scopes	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/locals.lua	/^function M.get_scopes(bufnr)$/;"	f
M.get_site_dir	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/utils.lua	/^function M.get_site_dir()$/;"	f
M.get_tree_root	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/parsers.lua	/^function M.get_tree_root(bufnr)$/;"	f
M.get_update_strategy	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^function M.get_update_strategy()$/;"	f
M.goto_node	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/ts_utils.lua	/^function M.goto_node(node, goto_end, avoid_set_jump)$/;"	f
M.has_bins	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/util.lua	/^function M.has_bins(...)$/;"	f
M.has_parser	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/parsers.lua	/^function M.has_parser(lang)$/;"	f
M.has_query_files	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^function M.has_query_files(lang, query_name)$/;"	f
M.highlight_node	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/ts_utils.lua	/^function M.highlight_node(node, buf, hl_namespace, hl_group)$/;"	f
M.highlight_range	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/ts_utils.lua	/^function M.highlight_range(range, buf, hl_namespace, hl_group)$/;"	f
M.index_of	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/utils.lua	/^function M.index_of(tbl, obj)$/;"	f
M.init	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^function M.init()$/;"	f
M.init_selection	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/incremental_selection.lua	/^function M.init_selection()$/;"	f
M.insertCompletionItems	nvim/autoload/plugged/completion-nvim/lua/completion.lua	/^M.insertCompletionItems = function(completed_items, prefix, item)$/;"	f
M.installable_servers	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp.lua	/^function M.installable_servers()$/;"	f
M.installed_parsers	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/info.lua	/^function M.installed_parsers()$/;"	f
M.is_enabled	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^function M.is_enabled(mod, lang)$/;"	f
M.is_in_node_range	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/ts_utils.lua	/^function M.is_in_node_range(node, line, col)$/;"	f
M.is_list	nvim/autoload/plugged/completion-nvim/lua/completion/util.lua	/^function M.is_list(thing)$/;"	f
M.is_module	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^function M.is_module(mod)$/;"	f
M.is_parent	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/ts_utils.lua	/^function M.is_parent(dest, source)$/;"	f
M.iter_cmd	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/install.lua	/^function M.iter_cmd(cmd_list, i, lang, success_message)$/;"	f
M.iter_group_results	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^function M.iter_group_results(bufnr, query_group, root)$/;"	f
M.iter_locals	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/locals.lua	/^function M.iter_locals(bufnr, root)$/;"	f
M.iter_prepared_matches	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^function M.iter_prepared_matches(query, qnode, bufnr, start_row, end_row)$/;"	f
M.iter_scope_tree	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/locals.lua	/^function M.iter_scope_tree(node, bufnr)$/;"	f
M.jumpFirstLocation	nvim/autoload/plugged/diagnostic-nvim/lua/jumpLoc.lua	/^function M.jumpFirstLocation()$/;"	f
M.jumpLastLocation	nvim/autoload/plugged/diagnostic-nvim/lua/jumpLoc.lua	/^function M.jumpLastLocation()$/;"	f
M.jumpNextLocation	nvim/autoload/plugged/diagnostic-nvim/lua/jumpLoc.lua	/^function M.jumpNextLocation()$/;"	f
M.jumpNextLocationCycle	nvim/autoload/plugged/diagnostic-nvim/lua/jumpLoc.lua	/^function M.jumpNextLocationCycle()$/;"	f
M.jumpPrevLocation	nvim/autoload/plugged/diagnostic-nvim/lua/jumpLoc.lua	/^function M.jumpPrevLocation()$/;"	f
M.jumpPrevLocationCycle	nvim/autoload/plugged/diagnostic-nvim/lua/jumpLoc.lua	/^function M.jumpPrevLocationCycle()$/;"	f
M.lang_match_ft	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/parsers.lua	/^function M.lang_match_ft(lang, ft)$/;"	f
M.lang_to_ft	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/parsers.lua	/^function M.lang_to_ft(lang)$/;"	f
M.location	nvim/autoload/plugged/diagnostic-nvim/lua/jumpLoc.lua	/^  M.location = api.nvim_call_function('getloclist', {0})$/;"	f
M.locations_to_items	nvim/autoload/plugged/diagnostic-nvim/lua/diagnostic/util.lua	/^function M.locations_to_items(locations)$/;"	f
M.lookup_section	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/util.lua	/^function M.lookup_section(settings, section)$/;"	f
M.maintained_parsers	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/parsers.lua	/^function M.maintained_parsers()$/;"	f
M.map	nvim/lua/utils.lua	/^function M.map(mode, key, result, opts)$/;"	f
M.matching	nvim/autoload/plugged/completion-nvim/lua/completion/matching.lua	/^M.matching = function(complete_items, prefix, item)$/;"	f
M.memoize_by_buf_tick	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/ts_utils.lua	/^function M.memoize_by_buf_tick(fn)$/;"	f
M.modifyCallback	nvim/autoload/plugged/diagnostic-nvim/lua/diagnostic.lua	/^function M.modifyCallback()$/;"	f
M.nested_scope	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/locals.lua	/^function M.nested_scope(node, cursor_pos)$/;"	f
M.nextCompletion	nvim/autoload/plugged/completion-nvim/lua/completion/source.lua	/^function M.nextCompletion()$/;"	f
M.nextSource	nvim/autoload/plugged/completion-nvim/lua/completion.lua	/^M.nextSource = function()$/;"	f
M.next_scope	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/locals.lua	/^function M.next_scope(node)$/;"	f
M.node_decremental	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/incremental_selection.lua	/^function M.node_decremental()$/;"	f
M.node_incremental	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/incremental_selection.lua	/^M.node_incremental = select_incremental(function(node)$/;"	f
M.node_length	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/ts_utils.lua	/^function M.node_length(node)$/;"	f
M.node_to_lsp_range	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/ts_utils.lua	/^function M.node_to_lsp_range(node)$/;"	f
M.npm_installer	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/util.lua	/^function M.npm_installer(config)$/;"	f
M.nvim_multiline_command	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/util.lua	/^function M.nvim_multiline_command(command)$/;"	f
M.on_BufEnter	nvim/autoload/plugged/diagnostic-nvim/lua/diagnostic.lua	/^function M.on_BufEnter()$/;"	f
M.on_CompleteDone	nvim/autoload/plugged/completion-nvim/lua/completion.lua	/^function M.on_CompleteDone()$/;"	f
M.on_InsertCharPre	nvim/autoload/plugged/completion-nvim/lua/completion.lua	/^function M.on_InsertCharPre()$/;"	f
M.on_InsertEnter	nvim/autoload/plugged/completion-nvim/lua/completion.lua	/^function M.on_InsertEnter()$/;"	f
M.on_InsertLeave	nvim/autoload/plugged/completion-nvim/lua/completion.lua	/^function M.on_InsertLeave()$/;"	f
M.on_InsertLeave	nvim/autoload/plugged/diagnostic-nvim/lua/diagnostic.lua	/^function M.on_InsertLeave()$/;"	f
M.on_attach	nvim/autoload/plugged/completion-nvim/lua/completion.lua	/^M.on_attach = function(option)$/;"	f
M.on_attach	nvim/autoload/plugged/diagnostic-nvim/lua/diagnostic.lua	/^M.on_attach = function(_, _)$/;"	f
M.openDiagnostics	nvim/autoload/plugged/diagnostic-nvim/lua/jumpLoc.lua	/^function M.openDiagnostics()$/;"	f
M.openLineDiagnostics	nvim/autoload/plugged/diagnostic-nvim/lua/jumpLoc.lua	/^function M.openLineDiagnostics()$/;"	f
M.path	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/util.lua	/^M.path = (function()$/;"	f
M.performComplete	nvim/autoload/plugged/completion-nvim/lua/completion/complete.lua	/^M.performComplete = function(complete_source, complete_items_map, params)$/;"	f
M.prevCompletion	nvim/autoload/plugged/completion-nvim/lua/completion/source.lua	/^function M.prevCompletion()$/;"	f
M.prevSource	nvim/autoload/plugged/completion-nvim/lua/completion.lua	/^M.prevSource = function()$/;"	f
M.previous_scope	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/locals.lua	/^function M.previous_scope(node)$/;"	f
M.print_warning	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/utils.lua	/^function M.print_warning(text)$/;"	f
M.publish_diagnostics	nvim/autoload/plugged/diagnostic-nvim/lua/diagnostic.lua	/^function M.publish_diagnostics(bufnr)$/;"	f
M.recurse_local_nodes	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/locals.lua	/^function M.recurse_local_nodes(local_def, accumulator, full_match, last_match)$/;"	f
M.refresh_diagnostics	nvim/autoload/plugged/diagnostic-nvim/lua/diagnostic.lua	/^function M.refresh_diagnostics()$/;"	f
M.reset_cache	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/parsers.lua	/^function M.reset_cache()$/;"	f
M.root_pattern	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/util.lua	/^function M.root_pattern(...)$/;"	f
M.scope_incremental	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/incremental_selection.lua	/^M.scope_incremental = select_incremental(function(node)$/;"	f
M.search_ancestors	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/util.lua	/^function M.search_ancestors(startpath, func)$/;"	f
M.select_compiler_args	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/shell_command_selectors.lua	/^function M.select_compiler_args(repo)$/;"	f
M.select_download_commands	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/shell_command_selectors.lua	/^function M.select_download_commands(repo, project_name, cache_folder, revision)$/;"	f
M.select_executable	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/shell_command_selectors.lua	/^function M.select_executable(executables)$/;"	f
M.select_install_rm_cmd	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/shell_command_selectors.lua	/^function M.select_install_rm_cmd(cache_folder, project_name)$/;"	f
M.select_mkdir_cmd	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/shell_command_selectors.lua	/^function M.select_mkdir_cmd(directory, cwd, info_msg)$/;"	f
M.select_mv_cmd	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/shell_command_selectors.lua	/^function M.select_mv_cmd(from, to, cwd)$/;"	f
M.select_rm_file_cmd	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/shell_command_selectors.lua	/^function M.select_rm_file_cmd(file, info_msg)$/;"	f
M.server_per_root_dir_manager	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/util.lua	/^function M.server_per_root_dir_manager(_make_config)$/;"	f
M.set_jump	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/utils.lua	/^function M.set_jump()$/;"	f
M.set_option_table	nvim/autoload/plugged/completion-nvim/lua/completion/option.lua	/^M.set_option_table = function(opt)$/;"	f
M.setup	nvim/autoload/plugged/formatter.nvim/lua/format/init.lua	/^function M.setup(o)$/;"	f
M.setup	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/configs.lua	/^  function M.setup(config)$/;"	f
M.setup	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter.lua	/^function M.setup()$/;"	f
M.setup	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^function M.setup(user_data)$/;"	f
M.setup_commands	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/utils.lua	/^function M.setup_commands(mod, commands)$/;"	f
M.sh	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/util.lua	/^function M.sh(script, cwd)$/;"	f
M.smart_s_tab	nvim/autoload/plugged/completion-nvim/lua/completion.lua	/^function M.smart_s_tab()$/;"	f
M.smart_tab	nvim/autoload/plugged/completion-nvim/lua/completion.lua	/^function M.smart_tab()$/;"	f
M.sort_completion_items	nvim/autoload/plugged/completion-nvim/lua/completion/util.lua	/^function M.sort_completion_items(items)$/;"	f
M.statusline	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter.lua	/^function M.statusline(opts)$/;"	f
M.swap_nodes	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/ts_utils.lua	/^function M.swap_nodes(node_or_range1, node_or_range2, bufnr, cursor_to_second)$/;"	f
M.tbl_deep_extend	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/util.lua	/^function M.tbl_deep_extend(behavior, ...)$/;"	f
M.triggerCompletion	nvim/autoload/plugged/completion-nvim/lua/completion.lua	/^M.triggerCompletion = function()$/;"	f
M.triggerCompletion	nvim/autoload/plugged/completion-nvim/lua/completion/source.lua	/^function M.triggerCompletion(force)$/;"	f
M.triggerCompletion	nvim/autoload/plugged/completion-nvim/lua/completion/source/ins_complete.lua	/^M.triggerCompletion = function(mode)$/;"	f
M.triggerFunction	nvim/autoload/plugged/completion-nvim/lua/completion/source/lsp.lua	/^M.triggerFunction = function(_, params)$/;"	f
M.triggerFunction	nvim/autoload/plugged/completion-nvim/lua/completion/source/path.lua	/^M.triggerFunction = function(_, opt)$/;"	f
M.trigger_diagnostics_changed	nvim/autoload/plugged/diagnostic-nvim/lua/diagnostic.lua	/^M.trigger_diagnostics_changed = vim.schedule_wrap(function()$/;"	f
M.uninstall	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/install.lua	/^function M.uninstall(lang)$/;"	f
M.update	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/install.lua	/^function M.update(lang)$/;"	f
M.update_selection	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/ts_utils.lua	/^function M.update_selection(buf, node)$/;"	f
M.utf8_config	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/util.lua	/^function M.utf8_config(config)$/;"	f
M.validate_bufnr	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/util.lua	/^function M.validate_bufnr(bufnr)$/;"	f
M.write_lockfile	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/install.lua	/^function M.write_lockfile(verbose)$/;"	f
Mac OS X:	nvim/autoload/plugged/vim-markdown-preview/README.md	/^### Mac OS X:$/;"	S	section:Vim Markdown Preview""Requirements
Maintainers	nvim/autoload/plugged/vim-airline/README.md	/^# Maintainers$/;"	c
Maintenance	nvim/autoload/plugged/vim-airline/CONTRIBUTING.md	/^# Maintenance$/;"	c
Manually	nvim/autoload/plugged/sonokai/README.md	/^### Manually$/;"	S	section:Installation
Mappings	nvim/autoload/plugged/fzf.vim/README.md	/^Mappings$/;"	s	chapter:fzf :heart: vim
Matching Strategy	nvim/autoload/plugged/completion-nvim/README.md	/^### Matching Strategy$/;"	S	section:completion-nvim""Configuration
Minimal vimrc that can reproduce this bug	nvim/autoload/plugged/sonokai/.github/ISSUE_TEMPLATE/bug_report.md	/^### Minimal vimrc that can reproduce this bug$/;"	S
Minimap	nvim/autoload/plugged/minimap.vim/plugin/minimap.vim	/^command! Minimap                call minimap#vim#MinimapOpen()$/;"	c
Minimap shows up as a jumble of characters?	nvim/autoload/plugged/minimap.vim/README.md	/^#### Minimap shows up as a jumble of characters?$/;"	t	subsection:💬 F.A.Q
Minimap window is too wide for me, how to use it as a simple scrollbar?	nvim/autoload/plugged/minimap.vim/README.md	/^#### Minimap window is too wide for me, how to use it as a simple scrollbar?$/;"	t	subsection:💬 F.A.Q
MinimapAutoCmds	nvim/autoload/plugged/minimap.vim/autoload/minimap/vim.vim	/^    augroup MinimapAutoCmds$/;"	a
MinimapAutoStart	nvim/autoload/plugged/minimap.vim/plugin/minimap.vim	/^    augroup MinimapAutoStart$/;"	a
MinimapClose	nvim/autoload/plugged/minimap.vim/plugin/minimap.vim	/^command! MinimapClose           call minimap#vim#MinimapClose()$/;"	c
MinimapRefresh	nvim/autoload/plugged/minimap.vim/plugin/minimap.vim	/^command! MinimapRefresh         call minimap#vim#MinimapRefresh()$/;"	c
MinimapToggle	nvim/autoload/plugged/minimap.vim/plugin/minimap.vim	/^command! MinimapToggle          call minimap#vim#MinimapToggle()$/;"	c
MinimapUpdateHighlight	nvim/autoload/plugged/minimap.vim/plugin/minimap.vim	/^command! MinimapUpdateHighlight call minimap#vim#MinimapUpdateHighlight()$/;"	c
Misc	nvim/autoload/plugged/nvim-treesitter/CONTRIBUTING.md	/^#### Misc$/;"	t	subsection:Contributing to `nvim-treesitter`""Parser configurations""Highlights
Module extension	nvim/autoload/plugged/incsearch.vim/README.md	/^### Module extension$/;"	S	section::tada: Version 2.0 :tada:
More Color Schemes	nvim/autoload/plugged/sonokai/README.md	/^## More Color Schemes$/;"	s
MyAppend1	nvim/autoload/plugged/vim-airline/t/airline.vim	/^function! MyAppend1(...)$/;"	f
MyAppend2	nvim/autoload/plugged/vim-airline/t/airline.vim	/^function! MyAppend2(...)$/;"	f
MyFuncref	nvim/autoload/plugged/vim-airline/t/airline.vim	/^function! MyFuncref(...)$/;"	f
MyIgnoreFuncref	nvim/autoload/plugged/vim-airline/t/airline.vim	/^function! MyIgnoreFuncref(...)$/;"	f
N	nvim/autoload/plugged/incsearch.vim/test/autonohlsearch.vim	/^  map N  <Plug>(incsearch-nohl-N)$/;"	m
N	nvim/autoload/plugged/incsearch.vim/test/autonohlsearch.vim	/^  noremap N  N$/;"	m
N	nvim/autoload/plugged/incsearch.vim/test/n_and_N.vim	/^  noremap N  N$/;"	m
NERDTreeWebDevIconsRefreshListener	nvim/autoload/plugged/vim-devicons/plugin/webdevicons.vim	/^function! NERDTreeWebDevIconsRefreshListener(event)$/;"	f
NEVER	nvim/autoload/plugged/vim-snippets/pythonx/javascript_snippets.py	/^NEVER = 'never'$/;"	v
NeoSnippetClearMarkers	nvim/autoload/plugged/neosnippet.vim/plugin/neosnippet.vim	/^command! -bar NeoSnippetClearMarkers$/;"	c
NeoSnippetEdit	nvim/autoload/plugged/neosnippet.vim/plugin/neosnippet.vim	/^      \\ NeoSnippetEdit$/;"	c
NeoSnippetMakeCache	nvim/autoload/plugged/neosnippet.vim/plugin/neosnippet.vim	/^      \\ NeoSnippetMakeCache$/;"	c
NeoSnippetSource	nvim/autoload/plugged/neosnippet.vim/plugin/neosnippet.vim	/^      \\ NeoSnippetSource$/;"	c
Neosnippet	nvim/autoload/plugged/neosnippet.vim/README.md	/^Neosnippet$/;"	c
NeosnippetSnippets_Goiferr	nvim/autoload/plugged/neosnippet-snippets/neosnippets/go.vim	/^function! g:NeosnippetSnippets_Goiferr() abort$/;"	f
NextDiagnostic	nvim/autoload/plugged/diagnostic-nvim/plugin/diagnostic.vim	/^command! NextDiagnostic lua require'jumpLoc'.jumpNextLocation()$/;"	c
NextDiagnosticCycle	nvim/autoload/plugged/diagnostic-nvim/plugin/diagnostic.vim	/^command! NextDiagnosticCycle lua require'jumpLoc'.jumpNextLocationCycle()$/;"	c
NextTrailingWhitespace	nvim/autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^command! -range=% NextTrailingWhitespace call <SID>GotoTrailingWhitespace(0, <line1>, <line2>)$/;"	c
No external editorconfig core library is required	nvim/autoload/plugged/editorconfig-vim/README.md	/^### No external editorconfig core library is required$/;"	S	section:EditorConfig Vim Plugin""Installation
Not Trimming Whitespace	nvim/autoload/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/trim_trailing_whitespace.rst	/^Not Trimming Whitespace$/;"	s	chapter:Trim Trailing Whitespace Property
NvimTreesitter	nvim/autoload/plugged/nvim-treesitter/plugin/nvim-treesitter.vim	/^augroup NvimTreesitter$/;"	a
OR	.config/nvim/configs/coc.vim	/^command! -nargs=0 OR   :call     CocAction('runCommand', 'editor.action.organizeImport')$/;"	c
Old Mac-style Newlines	nvim/autoload/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/end_of_line.rst	/^Old Mac-style Newlines$/;"	S	section:Tests for Newlines
OpenDiagnostic	nvim/autoload/plugged/diagnostic-nvim/plugin/diagnostic.vim	/^command! OpenDiagnostic lua require'jumpLoc'.openDiagnostics()$/;"	c
Optimizing highlight duration	nvim/autoload/plugged/vim-highlightedyank/README.md	/^## Optimizing highlight duration$/;"	s	chapter:vim-highlightedyank
Optional Info	nvim/autoload/plugged/vim-devicons/.github/ISSUE_TEMPLATE.md	/^#### Optional Info$/;"	t
Options	nvim/autoload/plugged/diagnostic-nvim/README.md	/^## Options$/;"	s	chapter:diagnostic-nvim
Options	nvim/autoload/plugged/vim-carbon-now-sh/README.md	/^### Options$/;"	S	section:vim-carbon-now-sh""Usage
Options	nvim/autoload/plugged/vim-markdown-preview/README.md	/^Options$/;"	s	chapter:Vim Markdown Preview
Our Pledge	nvim/autoload/plugged/vim-devicons/CODE_OF_CONDUCT.md	/^## Our Pledge$/;"	s	chapter:Contributor Covenant Code of Conduct
Our Responsibilities	nvim/autoload/plugged/vim-devicons/CODE_OF_CONDUCT.md	/^## Our Responsibilities$/;"	s	chapter:Contributor Covenant Code of Conduct
Our Standards	nvim/autoload/plugged/vim-devicons/CODE_OF_CONDUCT.md	/^## Our Standards$/;"	s	chapter:Contributor Covenant Code of Conduct
PATH	nvim/autoload/plugged/neosnippet.vim/Makefile	/^PATH := .\/vim-themis\/bin:$(PATH)$/;"	m
PAUSE_BEFORE_EXIT	nvim/autoload/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set PAUSE_BEFORE_EXIT=1$/;"	v
PAUSE_BEFORE_EXIT	nvim/autoload/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set PAUSE_BEFORE_EXIT=0$/;"	v
POST_PROCESS_CMD	nvim/autoload/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set POST_PROCESS_CMD=%~2$/;"	v
POST_PROCESS_CMD	nvim/autoload/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set POST_PROCESS_CMD=$/;"	v
PROJECT_ROOT	nvim/autoload/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set PROJECT_ROOT=%~2$/;"	v
PROJECT_ROOT	nvim/autoload/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set PROJECT_ROOT=$/;"	v
PROJ_ROOT	nvim/autoload/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set PROJ_ROOT=%~2$/;"	v
ParseArgs	nvim/autoload/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^:ParseArgs$/;"	l
ParseArgs	nvim/autoload/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^:ParseArgs$/;"	l
Parser configurations	nvim/autoload/plugged/nvim-treesitter/CONTRIBUTING.md	/^## Parser configurations$/;"	s	chapter:Contributing to `nvim-treesitter`
Per Server Setup	nvim/autoload/plugged/completion-nvim/README.md	/^### Per Server Setup$/;"	S	section:completion-nvim""Configuration
Performance	nvim/autoload/plugged/vim-airline/README.md	/^# Performance$/;"	c
Plug	nvim/autoload/plug.vim	/^  command! -nargs=+ -bar Plug call plug#(<args>)$/;"	c
PlugClean	nvim/autoload/plug.vim	/^  command! -nargs=0 -bar -bang PlugClean call s:clean(<bang>0)$/;"	c
PlugDiff	nvim/autoload/plug.vim	/^  command! -nargs=0 -bar PlugDiff    call s:diff()$/;"	c
PlugInstall	nvim/autoload/plug.vim	/^  command! -nargs=* -bar -bang -complete=customlist,s:names PlugInstall call s:install(<bang>0, /;"	c
PlugLOD	nvim/autoload/plug.vim	/^    augroup PlugLOD$/;"	a
PlugSnapshot	nvim/autoload/plug.vim	/^  command! -nargs=? -bar -bang -complete=file PlugSnapshot call s:snapshot(<bang>0, <f-args>)$/;"	c
PlugStatus	nvim/autoload/plug.vim	/^  command! -nargs=0 -bar PlugStatus  call s:status()$/;"	c
PlugUpdate	nvim/autoload/plug.vim	/^  command! -nargs=* -bar -bang -complete=customlist,s:names PlugUpdate  call s:update(<bang>0, [/;"	c
PlugUpgrade	nvim/autoload/plug.vim	/^  command! -nargs=0 -bar PlugUpgrade if s:upgrade() | execute 'source' s:esc(s:me) | endif$/;"	c
Prerequisites	nvim/autoload/plugged/completion-nvim/README.md	/^## Prerequisites$/;"	s	chapter:completion-nvim
Prerequisites	nvim/autoload/plugged/diagnostic-nvim/README.md	/^## Prerequisites$/;"	s	chapter:diagnostic-nvim
Prettier	.config/nvim/configs/coc.vim	/^command! -nargs=0 Prettier :CocCommand prettier.formatFile$/;"	c
PrevDiagnostic	nvim/autoload/plugged/diagnostic-nvim/plugin/diagnostic.vim	/^command! PrevDiagnostic lua require'jumpLoc'.jumpPrevLocation()$/;"	c
PrevDiagnosticCycle	nvim/autoload/plugged/diagnostic-nvim/plugin/diagnostic.vim	/^command! PrevDiagnosticCycle lua require'jumpLoc'.jumpPrevLocationCycle()$/;"	c
PrevTrailingWhitespace	nvim/autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^command! -range=% PrevTrailingWhitespace call <SID>GotoTrailingWhitespace(1, <line1>, <line2>)$/;"	c
Preview window	nvim/autoload/plugged/fzf.vim/README.md	/^#### Preview window$/;"	t	subsection:fzf :heart: vim""Customization""Global options
Problem and steps to reproduce	nvim/autoload/plugged/minimap.vim/.github/issue_template.md	/^## Problem and steps to reproduce$/;"	s
Promotion	nvim/autoload/plugged/vim-better-whitespace/README.md	/^## Promotion$/;"	s	chapter:Vim Better Whitespace Plugin
Promotion	nvim/autoload/plugged/vim-devicons/README.md	/^### Promotion$/;"	S	section:Contributing
Prompt	nvim/autoload/plugged/sonokai/zsh/README.md	/^# Prompt$/;"	c
Public Methods	nvim/autoload/plugged/vim-devicons/DEVELOPER.md	/^#### Public Methods$/;"	t	subsection:API
Pushing	nvim/autoload/plugged/vim-gutentags/CONTRIBUTING.md	/^## Pushing$/;"	s	chapter:Contributing
Quickstart	nvim/autoload/plugged/nvim-treesitter/README.md	/^# Quickstart$/;"	c
R	nvim/autoload/plug.vim	/^  nnoremap <silent> <buffer> R  :call <SID>retry()<cr>$/;"	m
Random	nvim/autoload/plugged/vim-rooter/test/runner.vim	/^function Random(min, max)$/;"	f
Rationale	nvim/autoload/plugged/fzf.vim/README.md	/^Rationale$/;"	s	chapter:fzf :heart: vim
Rationale	nvim/autoload/plugged/vim-airline/README.md	/^# Rationale$/;"	c
Recommended Setting	nvim/autoload/plugged/completion-nvim/README.md	/^### Recommended Setting$/;"	S	section:completion-nvim""Configuration
RedrawModeColors	.config/nvim/themes/statusline.vim	/^function! RedrawModeColors(mode) " {{{$/;"	f
Reducer example	nvim/autoload/plugged/fzf.vim/README.md	/^### Reducer example$/;"	S	section:fzf :heart: vim""Custom completion
Related Projects	nvim/autoload/plugged/sonokai/README.md	/^## Related Projects$/;"	s
Related Projects	nvim/autoload/plugged/vim-gutentags/README.md	/^# Related Projects$/;"	c
Related repositories	nvim/autoload/plugged/vim-snippets/README.md	/^Related repositories$/;"	s	chapter:snipMate & UltiSnip Snippets
Required Info	nvim/autoload/plugged/vim-devicons/.github/ISSUE_TEMPLATE.md	/^#### Required Info$/;"	t
Requirements	nvim/autoload/plugged/nvim-lspconfig/CONTRIBUTING.md	/^## Requirements$/;"	s	chapter:Contributing to nvim-lspconfig
Requirements	nvim/autoload/plugged/nvim-treesitter/README.md	/^## Requirements$/;"	s	chapter:Quickstart
Requirements	nvim/autoload/plugged/vim-devicons/.github/ISSUE_TEMPLATE.md	/^#### Requirements$/;"	t
Requirements	nvim/autoload/plugged/vim-markdown-preview/README.md	/^Requirements$/;"	s	chapter:Vim Markdown Preview
Requirements (please check off with 'x')	nvim/autoload/plugged/vim-devicons/.github/PULL_REQUEST_TEMPLATE.md	/^#### Requirements (please check off with 'x')$/;"	t
Requires Nvim 0.5 HEAD	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## Requires Nvim 0.5 HEAD$/;"	s	chapter:nvim-lspconfig
Requires Nvim 0.5 HEAD	nvim/autoload/plugged/nvim-lspconfig/scripts/README_template.md	/^## Requires Nvim 0.5 HEAD$/;"	s	chapter:nvim-lspconfig
Roadmap	nvim/autoload/plugged/nvim-treesitter/README.md	/^# Roadmap$/;"	c
Rooter	nvim/autoload/plugged/vim-rooter/plugin/rooter.vim	/^command! -bar Rooter call <SID>rooter()$/;"	c
RooterToggle	nvim/autoload/plugged/vim-rooter/plugin/rooter.vim	/^command! -bar RooterToggle call <SID>toggle()$/;"	c
RunTest	nvim/autoload/plugged/vim-rooter/test/runner.vim	/^function RunTest(test)$/;"	f
Running Tests	nvim/autoload/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/README.rst	/^Running Tests$/;"	s	chapter:Tests for EditorConfig Plugins
S	nvim/autoload/plug.vim	/^  nnoremap <silent> <buffer> S  :PlugStatus<cr>$/;"	m
Scope	nvim/autoload/plugged/vim-devicons/CODE_OF_CONDUCT.md	/^## Scope$/;"	s	chapter:Contributor Covenant Code of Conduct
Screenshot	nvim/autoload/plugged/undotree/README.md	/^### Screenshot$/;"	S
Screenshots	nvim/autoload/plugged/vim-airline/README.md	/^# Screenshots$/;"	c
Screenshots	nvim/autoload/plugged/vim-better-whitespace/README.md	/^## Screenshots$/;"	s	chapter:Vim Better Whitespace Plugin
Screenshots (if appropriate or helpful)	nvim/autoload/plugged/vim-devicons/.github/PULL_REQUEST_TEMPLATE.md	/^#### Screenshots (if appropriate or helpful)$/;"	t
Scroll-like feature while incremental searching	nvim/autoload/plugged/incsearch.vim/README.md	/^### Scroll-like feature while incremental searching$/;"	S	section:Usage
Seamless integration	nvim/autoload/plugged/vim-airline/README.md	/^## Seamless integration$/;"	s	chapter:Features
SectionSpec	nvim/autoload/plugged/vim-airline/t/section.vim	/^function! SectionSpec()$/;"	f
Selected Options	nvim/autoload/plugged/editorconfig-vim/README.md	/^## Selected Options$/;"	s	chapter:EditorConfig Vim Plugin
Self-Promotion	nvim/autoload/plugged/vim-commentary/README.markdown	/^## Self-Promotion$/;"	s	chapter:commentary.vim
SetUp	nvim/autoload/plugged/vim-rooter/test/test_rooter.vim	/^function SetUp()$/;"	f
Setup	nvim/autoload/plugged/completion-nvim/README.md	/^## Setup$/;"	s	chapter:completion-nvim
Setup	nvim/autoload/plugged/diagnostic-nvim/README.md	/^## Setup$/;"	s	chapter:diagnostic-nvim
Setup	nvim/autoload/plugged/nvim-treesitter/README.md	/^## Setup$/;"	s	chapter:Quickstart
SetupAutoCommands	nvim/autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! <SID>SetupAutoCommands()$/;"	f
ShowUsage	nvim/autoload/plugged/vim-gutentags/plat/unix/update_scopedb.sh	/^ShowUsage() {$/;"	f
ShowUsage	nvim/autoload/plugged/vim-gutentags/plat/unix/update_tags.sh	/^ShowUsage() {$/;"	f
Shuffle	nvim/autoload/plugged/vim-rooter/test/runner.vim	/^function Shuffle(list)$/;"	f
Simple function call	nvim/autoload/plugged/vim-devicons/DEVELOPER.md	/^##### Simple function call$/;"	T	subsubsection:API""API Examples
Smarter tab line	nvim/autoload/plugged/vim-airline/README.md	/^## Smarter tab line$/;"	s	chapter:Features
Snippet engines supporting vim-snippets	nvim/autoload/plugged/vim-snippets/README.md	/^Snippet engines supporting vim-snippets$/;"	s	chapter:snipMate & UltiSnip Snippets
SnippetsIndent	nvim/autoload/plugged/neosnippet.vim/indent/neosnippet.vim	/^function! SnippetsIndent() abort "{{{$/;"	f
Sorting completion items	nvim/autoload/plugged/completion-nvim/README.md	/^### Sorting completion items$/;"	S	section:completion-nvim""Configuration
Source	nvim/autoload/plugged/neosnippet.vim/rplugin/python3/denite/source/neosnippet.py	/^class Source(Base):$/;"	c
Source	nvim/autoload/plugged/neosnippet.vim/rplugin/python3/deoplete/sources/neosnippet.py	/^class Source(Base):$/;"	c
Space-based indentation	nvim/autoload/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/indentation.rst	/^Space-based indentation$/;"	s	chapter:Tests for Indentation Properties
Space-based indentation with no size specified	nvim/autoload/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/indentation.rst	/^Space-based indentation with no size specified$/;"	S	section:Space-based indentation
Spaces before virtual text	nvim/autoload/plugged/diagnostic-nvim/README.md	/^### Spaces before virtual text$/;"	S	section:diagnostic-nvim""Options
Special thanks	nvim/autoload/plugged/incsearch.vim/README.md	/^Special thanks$/;"	s
Start Vim with a minimal configuration	nvim/autoload/plugged/fzf.vim/.github/ISSUE_TEMPLATE.md	/^Start Vim with a minimal configuration$/;"	c
Status line	nvim/autoload/plugged/vim-devicons/DEVELOPER.md	/^##### Status line$/;"	T	subsubsection:API""API Examples
Status line of terminal buffer	nvim/autoload/plugged/fzf.vim/README.md	/^Status line of terminal buffer$/;"	s	chapter:fzf :heart: vim
Statusline indicator	nvim/autoload/plugged/nvim-treesitter/README.md	/^## Statusline indicator$/;"	s	chapter:Extra features
Steps to reproduce this bug using minimal vimrc	nvim/autoload/plugged/sonokai/.github/ISSUE_TEMPLATE/bug_report.md	/^### Steps to reproduce this bug using minimal vimrc$/;"	S
Straightforward customization	nvim/autoload/plugged/vim-airline/README.md	/^## Straightforward customization$/;"	s	chapter:Features
StripWhitespace	nvim/autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^command! -bang -range=% StripWhitespace call <SID>StripWhitespaceCommand(<line1>, <line2>, <bang/;"	c
StripWhitespaceOnChangedLines	nvim/autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^command! -bang -range=% StripWhitespaceOnChangedLines call <SID>StripWhitespaceOnChangedLinesCom/;"	c
Style Checks and Tests	nvim/autoload/plugged/nvim-treesitter/CONTRIBUTING.md	/^## Style Checks and Tests$/;"	s	chapter:Contributing to `nvim-treesitter`
Supported Completion Source	nvim/autoload/plugged/completion-nvim/README.md	/^## Supported Completion Source$/;"	s	chapter:completion-nvim
Supported Languages	nvim/autoload/plugged/nvim-treesitter/README.md	/^# Supported Languages$/;"	c
Supported Whitespace Characters	nvim/autoload/plugged/vim-better-whitespace/README.md	/^## Supported Whitespace Characters$/;"	s	chapter:Vim Better Whitespace Plugin
Supported properties	nvim/autoload/plugged/editorconfig-vim/README.md	/^## Supported properties$/;"	s	chapter:EditorConfig Vim Plugin
Syntax Highlighting	nvim/autoload/plugged/sonokai/zsh/README.md	/^# Syntax Highlighting$/;"	c
Syntax based code folding	nvim/autoload/plugged/nvim-treesitter/README.md	/^## Syntax based code folding$/;"	s	chapter:Extra features
TAGS_FILE	nvim/autoload/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set TAGS_FILE=%~2$/;"	v
TAGS_FILE	nvim/autoload/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set TAGS_FILE=tags$/;"	v
THEMIS_ARGS	nvim/autoload/plugged/neosnippet.vim/Makefile	/^export THEMIS_ARGS := -e -s --headless$/;"	m
THEMIS_HOME	nvim/autoload/plugged/neosnippet.vim/Makefile	/^export THEMIS_HOME := .\/vim-themis$/;"	m
THEMIS_VIM	nvim/autoload/plugged/neosnippet.vim/Makefile	/^export THEMIS_VIM  := nvim$/;"	m
TSRange.from_nodes	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange.from_nodes(buf, start_node, end_node)$/;"	f
TSRange.from_table	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange.from_table(buf, range)$/;"	f
TSRange.new	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange.new(buf, start_row, start_col, end_row, end_col)$/;"	f
TSRange:child	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange:child(index)$/;"	f
TSRange:child_count	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange:child_count()$/;"	f
TSRange:collect_children	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange:collect_children(filter_fun)$/;"	f
TSRange:end_	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange:end_()$/;"	f
TSRange:field	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange:field()$/;"	f
TSRange:has_error	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange:has_error()$/;"	f
TSRange:iter_children	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange:iter_children()$/;"	f
TSRange:missing	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange:missing()$/;"	f
TSRange:named	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange:named()$/;"	f
TSRange:named_child	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange:named_child(index)$/;"	f
TSRange:named_child_count	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange:named_child_count()$/;"	f
TSRange:parent	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange:parent(range)$/;"	f
TSRange:range	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange:range()$/;"	f
TSRange:sexpr	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange:sexpr()$/;"	f
TSRange:start	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange:start()$/;"	f
TSRange:symbol	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange:symbol()$/;"	f
TSRange:type	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^function TSRange:type()$/;"	f
Tab-based indentation	nvim/autoload/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/indentation.rst	/^Tab-based indentation$/;"	s	chapter:Tests for Indentation Properties
Tab-based indentation with no size specified	nvim/autoload/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/indentation.rst	/^Tab-based indentation with no size specified$/;"	S	section:Tab-based indentation
Tab-based indentation with size of 4	nvim/autoload/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/indentation.rst	/^Tab-based indentation with size of 4$/;"	S	section:Tab-based indentation
Tab-based indentation with size of 4 and tab width of 8	nvim/autoload/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/indentation.rst	/^Tab-based indentation with size of 4 and tab width of 8$/;"	S	section:Tab-based indentation
Tags	nvim/autoload/plugged/nvim-treesitter/CONTRIBUTING.md	/^#### Tags$/;"	t	subsection:Contributing to `nvim-treesitter`""Parser configurations""Highlights
TearDown	nvim/autoload/plugged/vim-rooter/test/test_rooter.vim	/^function TearDown()$/;"	f
Test environment	nvim/autoload/plugged/minimap.vim/.github/pull_request_template.md	/^## Test environment$/;"	s
Test for Newline	nvim/autoload/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/insert_final_newline.rst	/^Test for Newline$/;"	S	section:Tests for Newline at end of File
Test for No Newline	nvim/autoload/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/insert_final_newline.rst	/^Test for No Newline$/;"	S	section:Tests for Newline at end of File
Test_dir_in_project	nvim/autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_dir_in_project()$/;"	f
Test_directory_is_ancestor	nvim/autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_directory_is_ancestor()$/;"	f
Test_directory_is_subdirectory	nvim/autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_directory_is_subdirectory()$/;"	f
Test_exclude	nvim/autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_exclude()$/;"	f
Test_file_in_project	nvim/autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_file_in_project()$/;"	f
Test_file_in_project_subdir	nvim/autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_file_in_project_subdir()$/;"	f
Test_glob	nvim/autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_glob()$/;"	f
Test_has_file_in_subdirectory	nvim/autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_has_file_in_subdirectory()$/;"	f
Test_ignores_suffixesadd	nvim/autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_ignores_suffixesadd()$/;"	f
Test_non_project_file_change_to_home	nvim/autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_non_project_file_change_to_home()$/;"	f
Test_non_project_file_change_to_parent	nvim/autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_non_project_file_change_to_parent()$/;"	f
Test_non_project_file_default	nvim/autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_non_project_file_default()$/;"	f
Test_project_dir	nvim/autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_project_dir()$/;"	f
Test_resolve_symlinks	nvim/autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_resolve_symlinks()$/;"	f
Test_target_directories_only	nvim/autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_target_directories_only()$/;"	f
Test_target_some_files_only	nvim/autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_target_some_files_only()$/;"	f
Test_toggle	nvim/autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_toggle()$/;"	f
Test_user_autocmd	nvim/autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_user_autocmd()$/;"	f
Test_write_file_to_different_name	nvim/autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_write_file_to_different_name()$/;"	f
Test_write_new_file	nvim/autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_write_new_file()$/;"	f
Testing	nvim/autoload/plugged/vim-gutentags/CONTRIBUTING.md	/^## Testing$/;"	s	chapter:Contributing
Testing	nvim/autoload/plugged/vim-rooter/test/README.markdown	/^# Testing$/;"	c
Tests for EditorConfig Plugins	nvim/autoload/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/README.rst	/^Tests for EditorConfig Plugins$/;"	c
Tests for End of Line Property	nvim/autoload/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/end_of_line.rst	/^Tests for End of Line Property$/;"	c
Tests for Indentation Properties	nvim/autoload/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/indentation.rst	/^Tests for Indentation Properties$/;"	c
Tests for Newline at end of File	nvim/autoload/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/insert_final_newline.rst	/^Tests for Newline at end of File$/;"	s	chapter:Insert Final Newline Property
Tests for Newlines	nvim/autoload/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/charset.rst	/^Tests for Newlines$/;"	c
Tests for Newlines	nvim/autoload/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/end_of_line.rst	/^Tests for Newlines$/;"	s	chapter:Tests for End of Line Property
Text	nvim/autoload/plugged/nvim-treesitter/CONTRIBUTING.md	/^#### Text$/;"	t	subsection:Contributing to `nvim-treesitter`""Parser configurations""Highlights
The `vim_markdown_preview_browser` option	nvim/autoload/plugged/vim-markdown-preview/README.md	/^### The `vim_markdown_preview_browser` option$/;"	S	section:Vim Markdown Preview""Options
The `vim_markdown_preview_github` option	nvim/autoload/plugged/vim-markdown-preview/README.md	/^### The `vim_markdown_preview_github` option$/;"	S	section:Vim Markdown Preview""Options
The `vim_markdown_preview_hotkey` option	nvim/autoload/plugged/vim-markdown-preview/README.md	/^### The `vim_markdown_preview_hotkey` option$/;"	S	section:Vim Markdown Preview""Options
The `vim_markdown_preview_pandoc` option	nvim/autoload/plugged/vim-markdown-preview/README.md	/^### The `vim_markdown_preview_pandoc` option$/;"	S	section:Vim Markdown Preview""Options
The `vim_markdown_preview_perl` option	nvim/autoload/plugged/vim-markdown-preview/README.md	/^### The `vim_markdown_preview_perl` option$/;"	S	section:Vim Markdown Preview""Options
The `vim_markdown_preview_temp_file` option	nvim/autoload/plugged/vim-markdown-preview/README.md	/^### The `vim_markdown_preview_temp_file` option$/;"	S	section:Vim Markdown Preview""Options
The `vim_markdown_preview_toggle` option	nvim/autoload/plugged/vim-markdown-preview/README.md	/^### The `vim_markdown_preview_toggle` option$/;"	S	section:Vim Markdown Preview""Options
The `vim_markdown_preview_use_xdg_open` option	nvim/autoload/plugged/vim-markdown-preview/README.md	/^### The `vim_markdown_preview_use_xdg_open` option$/;"	S	section:Vim Markdown Preview""Options
Themes	nvim/autoload/plugged/vim-airline/CONTRIBUTING.md	/^# Themes$/;"	c
Themes	nvim/autoload/plugged/vim-airline/README.md	/^## Themes$/;"	s	chapter:Features
Things to consider when contributing	nvim/autoload/plugged/vim-snippets/README.md	/^Things to consider when contributing$/;"	s	chapter:snipMate & UltiSnip Snippets
Things to keep in mind	nvim/autoload/plugged/vim-devicons/CONTRIBUTING.md	/^## Things to keep in mind$/;"	s	chapter:Contributing Guide
Timer Adjustment	nvim/autoload/plugged/completion-nvim/README.md	/^### Timer Adjustment$/;"	S	section:completion-nvim""Configuration
ToggleStripWhitespaceOnSave	nvim/autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^command! ToggleStripWhitespaceOnSave call <SID>ToggleStripWhitespaceOnSave()$/;"	c
ToggleWhitespace	nvim/autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^command! ToggleWhitespace call <SID>ToggleWhitespace()$/;"	c
Trigger Characters	nvim/autoload/plugged/completion-nvim/README.md	/^### Trigger Characters$/;"	S	section:completion-nvim""Configuration
Trigger keyword length	nvim/autoload/plugged/completion-nvim/README.md	/^### Trigger keyword length$/;"	S	section:completion-nvim""Configuration
Trigger on delete	nvim/autoload/plugged/completion-nvim/README.md	/^### Trigger on delete$/;"	S	section:completion-nvim""Configuration
Trim Trailing Whitespace Property	nvim/autoload/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/trim_trailing_whitespace.rst	/^Trim Trailing Whitespace Property$/;"	c
Trimming Whitespace	nvim/autoload/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/trim_trailing_whitespace.rst	/^Trimming Whitespace$/;"	s	chapter:Trim Trailing Whitespace Property
Trimming virtual text	nvim/autoload/plugged/diagnostic-nvim/README.md	/^### Trimming virtual text$/;"	S	section:diagnostic-nvim""Options
Trouble Shooting	nvim/autoload/plugged/completion-nvim/README.md	/^## Trouble Shooting$/;"	s	chapter:completion-nvim
Troubleshooting	nvim/autoload/plugged/nvim-treesitter/README.md	/^# Troubleshooting$/;"	c
Troubleshooting	nvim/autoload/plugged/vim-devicons/README.md	/^Troubleshooting$/;"	s
Type of change	nvim/autoload/plugged/minimap.vim/.github/pull_request_template.md	/^## Type of change$/;"	s
U	nvim/autoload/plug.vim	/^  nnoremap <silent> <buffer> U  :call <SID>status_update()<cr>$/;"	m
U	nvim/autoload/plug.vim	/^  xnoremap <silent> <buffer> U  :call <SID>status_update()<cr>$/;"	m
UPDATED_SOURCE	nvim/autoload/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set UPDATED_SOURCE=%~2$/;"	v
UPDATED_SOURCE	nvim/autoload/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set UPDATED_SOURCE=$/;"	v
UTF-16BE Character Set	nvim/autoload/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/charset.rst	/^UTF-16BE Character Set$/;"	s	chapter:Tests for Newlines
UTF-16LE Character Set	nvim/autoload/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/charset.rst	/^UTF-16LE Character Set$/;"	s	chapter:Tests for Newlines
UTF-8 Character Set	nvim/autoload/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/charset.rst	/^UTF-8 Character Set$/;"	s	chapter:Tests for Newlines
UTF-8 with BOM Character Set	nvim/autoload/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/charset.rst	/^UTF-8 with BOM Character Set$/;"	s	chapter:Tests for Newlines
Undotree	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^        augroup Undotree$/;"	a
UndotreeFocus	nvim/autoload/plugged/undotree/plugin/undotree.vim	/^command! -n=0 -bar UndotreeFocus    :call undotree#UndotreeFocus()$/;"	c
UndotreeHide	nvim/autoload/plugged/undotree/plugin/undotree.vim	/^command! -n=0 -bar UndotreeHide     :call undotree#UndotreeHide()$/;"	c
UndotreeShow	nvim/autoload/plugged/undotree/plugin/undotree.vim	/^command! -n=0 -bar UndotreeShow     :call undotree#UndotreeShow()$/;"	c
UndotreeToggle	nvim/autoload/plugged/undotree/plugin/undotree.vim	/^    command! -n=0 -bar UndotreeToggle :echoerr "undotree.vim needs Vim version >= 7.3"$/;"	c
UndotreeToggle	nvim/autoload/plugged/undotree/plugin/undotree.vim	/^    command! -n=0 -bar UndotreeToggle :echoerr "undotree.vim needs vim7.3 with patch005 applied./;"	c
UndotreeToggle	nvim/autoload/plugged/undotree/plugin/undotree.vim	/^command! -n=0 -bar UndotreeToggle   :call undotree#UndotreeToggle()$/;"	c
Undotree_Diff	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^    augroup Undotree_Diff$/;"	a
Undotree_Main	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^    augroup Undotree_Main$/;"	a
Unix-style Newlines	nvim/autoload/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/end_of_line.rst	/^Unix-style Newlines$/;"	S	section:Tests for Newlines
Unix:	nvim/autoload/plugged/vim-markdown-preview/README.md	/^### Unix:$/;"	S	section:Vim Markdown Preview""Requirements
Unlock	nvim/autoload/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^:Unlock$/;"	l
Usage	nvim/autoload/plugged/incsearch.vim/README.md	/^Usage$/;"	s
Usage	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## Usage$/;"	s	chapter:nvim-lspconfig
Usage	nvim/autoload/plugged/nvim-lspconfig/scripts/README_template.md	/^## Usage$/;"	s	chapter:nvim-lspconfig
Usage	nvim/autoload/plugged/sonokai/README.md	/^## Usage$/;"	s
Usage	nvim/autoload/plugged/undotree/README.md	/^### Usage$/;"	S
Usage	nvim/autoload/plugged/vim-better-whitespace/README.md	/^## Usage$/;"	s	chapter:Vim Better Whitespace Plugin
Usage	nvim/autoload/plugged/vim-carbon-now-sh/README.md	/^## Usage$/;"	s	chapter:vim-carbon-now-sh
Usage	nvim/autoload/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^:Usage$/;"	l
Usage	nvim/autoload/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^:Usage$/;"	l
Usage	nvim/autoload/plugged/vim-highlightedyank/README.md	/^## Usage$/;"	s	chapter:vim-highlightedyank
Usage	nvim/autoload/plugged/vim-markdown-preview/README.md	/^Usage$/;"	s	chapter:Vim Markdown Preview
Use editorconfig-core-test in your project as a git submodule	nvim/autoload/plugged/editorconfig-vim/tests/core/tests/README.md	/^### Use editorconfig-core-test in your project as a git submodule$/;"	S
Use editorconfig-core-test independently	nvim/autoload/plugged/editorconfig-vim/tests/core/tests/README.md	/^### Use editorconfig-core-test independently$/;"	S
User Query Extensions	nvim/autoload/plugged/nvim-treesitter/README.md	/^# User Query Extensions$/;"	c
Using Neovim `pack` feature	nvim/autoload/plugged/nvim-treesitter/README.md	/^### Using Neovim `pack` feature$/;"	S	section:Quickstart""Installation
Using [vim-plug](https://github.com/junegunn/vim-plug)	nvim/autoload/plugged/fzf.vim/README.md	/^### Using [vim-plug](https:\/\/github.com\/junegunn\/vim-plug)$/;"	S	section:fzf :heart: vim""Installation
Using a package manager	nvim/autoload/plugged/nvim-treesitter/README.md	/^### Using a package manager$/;"	S	section:Quickstart""Installation
Util1	nvim/autoload/plugged/vim-airline/t/util.vim	/^function! Util1()$/;"	f
Util2	nvim/autoload/plugged/vim-airline/t/util.vim	/^function! Util2()$/;"	f
Util3	nvim/autoload/plugged/vim-airline/t/util.vim	/^function! Util3(...)$/;"	f
Utils	nvim/autoload/plugged/nvim-treesitter/README.md	/^# Utils$/;"	c
VIM	nvim/autoload/plugged/editorconfig-vim/tests/core/ecvimlib.ps1	/^$global:VIM = Find-Vim$/;"	v
VIM	nvim/autoload/plugged/vim-highlightedyank/test/test-highlightedyank.bat	/^if defined THEMIS_VIM set VIM=%THEMIS_VIM%$/;"	v
VIM	nvim/autoload/plugged/vim-highlightedyank/test/test-highlightedyank.bat	/^set VIM=vim$/;"	v
Variables	nvim/autoload/plugged/nvim-treesitter/CONTRIBUTING.md	/^#### Variables$/;"	t	subsection:Contributing to `nvim-treesitter`""Parser configurations""Highlights
Vendor Snippets	nvim/autoload/plugged/vim-snippets/README.md	/^Vendor Snippets$/;"	s	chapter:snipMate & UltiSnip Snippets
Verifying Character Set	nvim/autoload/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/charset.rst	/^Verifying Character Set$/;"	c
Verifying Newline Style	nvim/autoload/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/end_of_line.rst	/^Verifying Newline Style$/;"	s	chapter:Tests for End of Line Property
Version info	nvim/autoload/plugged/minimap.vim/.github/issue_template.md	/^## Version info$/;"	s
Versions / dialects / ..	nvim/autoload/plugged/vim-snippets/README.md	/^Versions \/ dialects \/ ..$/;"	c
Via Plugin Manager	nvim/autoload/plugged/sonokai/README.md	/^### Via Plugin Manager$/;"	S	section:Installation
Vim Better Whitespace Plugin	nvim/autoload/plugged/vim-better-whitespace/README.md	/^# Vim Better Whitespace Plugin$/;"	c
Vim Markdown Preview	nvim/autoload/plugged/vim-markdown-preview/README.md	/^Vim Markdown Preview$/;"	c
Vim functions	nvim/autoload/plugged/fzf.vim/README.md	/^#### Vim functions$/;"	t	subsection:fzf :heart: vim""Customization""Advanced customization
VimConf2014	nvim/autoload/plugged/incsearch.vim/README.md	/^### VimConf2014$/;"	S	section:Links
Vim_Markdown_Preview	nvim/autoload/plugged/vim-markdown-preview/plugin/vim-markdown-preview.vim	/^function! Vim_Markdown_Preview()$/;"	f
Vim_Markdown_Preview_Local	nvim/autoload/plugged/vim-markdown-preview/plugin/vim-markdown-preview.vim	/^function! Vim_Markdown_Preview_Local()$/;"	f
Vundle	nvim/autoload/plugged/neosnippet.vim/README.md	/^### Vundle$/;"	S	section:Neosnippet""Installation
Vundle	nvim/autoload/plugged/vim-carbon-now-sh/README.md	/^### Vundle$/;"	S	section:vim-carbon-now-sh""Installation
WARNING	nvim/autoload/plugged/diagnostic-nvim/README.md	/^## WARNING$/;"	s	chapter:diagnostic-nvim
WebDevIconsGetFileFormatSymbol	nvim/autoload/plugged/vim-devicons/plugin/webdevicons.vim	/^function! WebDevIconsGetFileFormatSymbol(...)$/;"	f
WebDevIconsGetFileTypeSymbol	nvim/autoload/plugged/vim-devicons/plugin/webdevicons.vim	/^function! WebDevIconsGetFileTypeSymbol(...)$/;"	f
WebDevIconsNERDTreeChangeRootHandler	nvim/autoload/plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeChangeRootHandler(node)$/;"	f
WebDevIconsNERDTreeDirClose	nvim/autoload/plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeDirClose(node)$/;"	f
WebDevIconsNERDTreeDirCloseChildren	nvim/autoload/plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeDirCloseChildren(node)$/;"	f
WebDevIconsNERDTreeDirCloseRecursively	nvim/autoload/plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeDirCloseRecursively(node)$/;"	f
WebDevIconsNERDTreeDirOpen	nvim/autoload/plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeDirOpen(node)$/;"	f
WebDevIconsNERDTreeDirOpenRecursively	nvim/autoload/plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeDirOpenRecursively(node)$/;"	f
WebDevIconsNERDTreeDirUpdateFlags	nvim/autoload/plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeDirUpdateFlags(node, glyph)$/;"	f
WebDevIconsNERDTreeMapActivateNode	nvim/autoload/plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeMapActivateNode(node)$/;"	f
WebDevIconsNERDTreeMapActivateNodeSingleMode	nvim/autoload/plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeMapActivateNodeSingleMode(node)$/;"	f
WebDevIconsNERDTreeMapCloseChildren	nvim/autoload/plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeMapCloseChildren(node)$/;"	f
WebDevIconsNERDTreeMapCloseDir	nvim/autoload/plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeMapCloseDir(node)$/;"	f
WebDevIconsNERDTreeMapOpenRecursively	nvim/autoload/plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeMapOpenRecursively(node)$/;"	f
WebDevIconsNERDTreeMapUpdirKeepOpen	nvim/autoload/plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeMapUpdirKeepOpen()$/;"	f
WebDevIconsNERDTreeUpDirCurrentRootClosedHandler	nvim/autoload/plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeUpDirCurrentRootClosedHandler()$/;"	f
What are the relevant tickets (if any)?	nvim/autoload/plugged/vim-devicons/.github/PULL_REQUEST_TEMPLATE.md	/^#### What are the relevant tickets (if any)?$/;"	t
What does this Pull Request (PR) do?	nvim/autoload/plugged/vim-devicons/.github/PULL_REQUEST_TEMPLATE.md	/^#### What does this Pull Request (PR) do?$/;"	t
What?	nvim/autoload/plugged/vim-gutentags/README.md	/^## What?$/;"	s	chapter:Gutentags
Where did the name come from?	nvim/autoload/plugged/vim-airline/README.md	/^# Where did the name come from?$/;"	c
Why this and not Vim tabs?	nvim/autoload/plugged/vim-buftabline/README.md	/^Why this and not Vim tabs?$/;"	s
Why you should use fzf on Vim	nvim/autoload/plugged/fzf.vim/README.md	/^Why you should use fzf on Vim$/;"	s	chapter:fzf :heart: vim
Why?	nvim/autoload/plugged/vim-gutentags/README.md	/^## Why?$/;"	s	chapter:Gutentags
Windows-style Newlines	nvim/autoload/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/end_of_line.rst	/^Windows-style Newlines$/;"	S	section:Tests for Newlines
Writing	nvim/autoload/plugged/vim-gutentags/CONTRIBUTING.md	/^## Writing$/;"	s	chapter:Contributing
X	nvim/autoload/plug.vim	/^    nnoremap <silent> <buffer> X :call <SID>revert()<cr>$/;"	m
X.configure	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/als.lua	/^  function X.configure(config)$/;"	f
X.configure	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/elixirls.lua	/^    function X.configure(config)$/;"	f
X.configure	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/jdtls.lua	/^  function X.configure(config)$/;"	f
X.configure	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/metals.lua	/^  function X.configure(config)$/;"	f
X.configure	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/omnisharp.lua	/^  function X.configure(config)$/;"	f
X.configure	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/pyls_ms.lua	/^  function X.configure(config)$/;"	f
X.configure	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/rnix.lua	/^  function X.configure(config)$/;"	f
X.configure	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/sumneko_lua.lua	/^  function X.configure(config)$/;"	f
X.get_launcher	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/jdtls.lua	/^  function X.get_launcher()$/;"	f
X.get_os_config	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/jdtls.lua	/^  function X.get_os_config()$/;"	f
X.info	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/als.lua	/^  function X.info()$/;"	f
X.info	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/elixirls.lua	/^    function X.info()$/;"	f
X.info	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/jdtls.lua	/^  function X.info()$/;"	f
X.info	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/metals.lua	/^  function X.info()$/;"	f
X.info	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/omnisharp.lua	/^  function X.info()$/;"	f
X.info	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/pyls_ms.lua	/^  function X.info()$/;"	f
X.info	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/rnix.lua	/^  function X.info()$/;"	f
X.info	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/sumneko_lua.lua	/^  function X.info()$/;"	f
X.install	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/als.lua	/^  function X.install()$/;"	f
X.install	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/elixirls.lua	/^    function X.install()$/;"	f
X.install	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/jdtls.lua	/^  function X.install()$/;"	f
X.install	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/metals.lua	/^  function X.install()$/;"	f
X.install	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/omnisharp.lua	/^  function X.install()$/;"	f
X.install	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/pyls_ms.lua	/^  function X.install()$/;"	f
X.install	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/rnix.lua	/^  function X.install()$/;"	f
X.install	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/sumneko_lua.lua	/^  function X.install()$/;"	f
XTabReopen	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    com! XTabReopen call airline#extensions#tabline#xtabline#reopen_last_tab()$/;"	c
['textDocument/codeAction']	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/jdtls.lua	/^      ['textDocument\/codeAction'] = function(a, b, actions)$/;"	f
[0.1.0] - 2020-02-19	nvim/autoload/plugged/sonokai/CHANGELOG.md	/^## [0.1.0] - 2020-02-19$/;"	s	chapter:Changelog
[0.1.1] - 2020-04-04	nvim/autoload/plugged/sonokai/CHANGELOG.md	/^## [0.1.1] - 2020-04-04$/;"	s	chapter:Changelog
[0.10] - 2018-12-15	nvim/autoload/plugged/vim-airline/CHANGELOG.md	/^## [0.10] - 2018-12-15$/;"	s	chapter:Change Log
[0.11] - 2019-11-10	nvim/autoload/plugged/vim-airline/CHANGELOG.md	/^## [0.11] - 2019-11-10$/;"	s	chapter:Change Log
[0.12] - Unreleased	nvim/autoload/plugged/vim-airline/CHANGELOG.md	/^## [0.12] - Unreleased$/;"	s	chapter:Change Log
[0.1] - 2013-07-17	nvim/autoload/plugged/vim-airline/CHANGELOG.md	/^## [0.1] - 2013-07-17$/;"	s	chapter:Change Log
[0.2.0] - 2020-07-20	nvim/autoload/plugged/sonokai/CHANGELOG.md	/^## [0.2.0] - 2020-07-20$/;"	s	chapter:Changelog
[0.2] - 2013-07-28	nvim/autoload/plugged/vim-airline/CHANGELOG.md	/^## [0.2] - 2013-07-28$/;"	s	chapter:Change Log
[0.3] - 2013-08-12	nvim/autoload/plugged/vim-airline/CHANGELOG.md	/^## [0.3] - 2013-08-12$/;"	s	chapter:Change Log
[0.4] - 2013-08-26	nvim/autoload/plugged/vim-airline/CHANGELOG.md	/^## [0.4] - 2013-08-26$/;"	s	chapter:Change Log
[0.5] - 2013-09-13	nvim/autoload/plugged/vim-airline/CHANGELOG.md	/^## [0.5] - 2013-09-13$/;"	s	chapter:Change Log
[0.6] - 2013-10-08	nvim/autoload/plugged/vim-airline/CHANGELOG.md	/^## [0.6] - 2013-10-08$/;"	s	chapter:Change Log
[0.7] - 2014-12-10	nvim/autoload/plugged/vim-airline/CHANGELOG.md	/^## [0.7] - 2014-12-10$/;"	s	chapter:Change Log
[0.8] - 2016-03-09	nvim/autoload/plugged/vim-airline/CHANGELOG.md	/^## [0.8] - 2016-03-09$/;"	s	chapter:Change Log
[0.9] - 2018-01-15	nvim/autoload/plugged/vim-airline/CHANGELOG.md	/^## [0.9] - 2018-01-15$/;"	s	chapter:Change Log
[Code of Conduct](CODE_OF_CONDUCT.md)	nvim/autoload/plugged/vim-devicons/README.md	/^### [Code of Conduct](CODE_OF_CONDUCT.md)$/;"	S	section:Contributing
[Contributing Guide](CONTRIBUTING.md)	nvim/autoload/plugged/vim-devicons/README.md	/^### [Contributing Guide](CONTRIBUTING.md)$/;"	S	section:Contributing
[LanguageClient][57]	nvim/autoload/plugged/vim-airline/README.md	/^#### [LanguageClient][57]$/;"	t	section:Features""Seamless integration
[Project on Vim.org](http://www.vim.org/scripts/script.php?script_id=4177)	nvim/autoload/plugged/undotree/README.md	/^### [Project on Vim.org](http:\/\/www.vim.org\/scripts\/script.php?script_id=4177)$/;"	S
[Unreleased]	nvim/autoload/plugged/sonokai/CHANGELOG.md	/^## [Unreleased]$/;"	s	chapter:Changelog
[Vim-CMake][60]	nvim/autoload/plugged/vim-airline/README.md	/^#### [Vim-CMake][60]$/;"	t	section:Features""Seamless integration
[[	nvim/autoload/plug.vim	/^  nnoremap <silent> <buffer> [[ :silent! call <SID>section('b')<cr>$/;"	m
[csv.vim][28]	nvim/autoload/plugged/vim-airline/README.md	/^#### [csv.vim][28]$/;"	t	section:Features""Seamless integration
[ctrlp.vim][10]	nvim/autoload/plugged/vim-airline/README.md	/^#### [ctrlp.vim][10]$/;"	t	section:Features""Seamless integration
[ctrlspace][38]	nvim/autoload/plugged/vim-airline/README.md	/^#### [ctrlspace][38]$/;"	t	section:Features""Seamless integration
[denite.nvim][51]	nvim/autoload/plugged/vim-airline/README.md	/^#### [denite.nvim][51]$/;"	t	section:Features""Seamless integration
[localsearch][54]	nvim/autoload/plugged/vim-airline/README.md	/^#### [localsearch][54]$/;"	t	section:Features""Seamless integration
[promptline][36]	nvim/autoload/plugged/vim-airline/README.md	/^#### [promptline][36]$/;"	t	section:Features""Seamless integration
[syntastic][5]	nvim/autoload/plugged/vim-airline/README.md	/^#### [syntastic][5]$/;"	t	section:Features""Seamless integration
[tagbar][19]	nvim/autoload/plugged/vim-airline/README.md	/^#### [tagbar][19]$/;"	t	section:Features""Seamless integration
[tmuxline][35]	nvim/autoload/plugged/vim-airline/README.md	/^#### [tmuxline][35]$/;"	t	section:Features""Seamless integration
[unite.vim][9]	nvim/autoload/plugged/vim-airline/README.md	/^#### [unite.vim][9]$/;"	t	section:Features""Seamless integration
[vim.battery][61]	nvim/autoload/plugged/vim-airline/README.md	/^#### [vim.battery][61]$/;"	t	section:Features""Seamless integration
[vimagit][50]	nvim/autoload/plugged/vim-airline/README.md	/^#### [vimagit][50]$/;"	t	section:Features""Seamless integration
[vimtex][53]	nvim/autoload/plugged/vim-airline/README.md	/^#### [vimtex][53]$/;"	t	section:Features""Seamless integration
[virtualenv][31]	nvim/autoload/plugged/vim-airline/README.md	/^#### [virtualenv][31]$/;"	t	section:Features""Seamless integration
[xkb-switch][48]/[xkb-layout][49]	nvim/autoload/plugged/vim-airline/README.md	/^#### [xkb-switch][48]\/[xkb-layout][49]$/;"	t	section:Features""Seamless integration
]]	nvim/autoload/plug.vim	/^  nnoremap <silent> <buffer> ]] :silent! call <SID>section('')<cr>$/;"	m
_	nvim/autoload/plugged/completion-nvim/lua/completion/signature_help.lua	/^      local bufnr, _ = vim.lsp.util.focusable_preview(method, function()$/;"	f
__index	nvim/autoload/plugged/completion-nvim/lua/completion/option.lua	/^  __index = function(_, key)$/;"	f
__index	nvim/autoload/plugged/diagnostic-nvim/lua/diagnostic/util.lua	/^    __index = function(t, k)$/;"	f
__index	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/caching.lua	/^    __index = function(tbl, key)$/;"	f
__index	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/parsers.lua	/^    __index = function(tbl, key)$/;"	f
__init__	nvim/autoload/plugged/neosnippet.vim/rplugin/python3/denite/source/neosnippet.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	nvim/autoload/plugged/neosnippet.vim/rplugin/python3/deoplete/sources/neosnippet.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	nvim/autoload/plugged/vim-devicons/rplugin/python3/denite/filter/devicons_denite_converter.py	/^	def __init__(self, vim):$/;"	m	class:Filter
_fzf_statusline	nvim/autoload/plugged/fzf.vim/plugin/fzf.vim	/^  augroup _fzf_statusline$/;"	a
_fzf_statusline	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/fzf.vim	/^  augroup _fzf_statusline$/;"	a
_lightline	.config/nvim/themes/lightline.vim	/^augroup _lightline$/;"	a
_parse_comments	nvim/autoload/plugged/vim-snippets/pythonx/vimsnippets.py	/^def _parse_comments(s):$/;"	f
_usage	.bin/rofr	/^_usage() {$/;"	f
_usage	.bin/rofr.sh	/^_usage() {$/;"	f
_usage	.bin/toggle.sh	/^_usage() {$/;"	f
`default`	nvim/autoload/plugged/vim-airline/README.md	/^#### `default`$/;"	t	section:Features""Smarter tab line
`jsformatter`	nvim/autoload/plugged/vim-airline/README.md	/^#### `jsformatter`$/;"	t	section:Features""Smarter tab line
`unique_tail_improved`	nvim/autoload/plugged/vim-airline/README.md	/^#### `unique_tail_improved`$/;"	t	section:Features""Smarter tab line
`unique_tail`	nvim/autoload/plugged/vim-airline/README.md	/^#### `unique_tail`$/;"	t	section:Features""Smarter tab line
a	nvim/autoload/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^    $a = $argv[$idx]$/;"	v
actual behavior	nvim/autoload/plugged/vim-airline/.github/ISSUE_TEMPLATE.md	/^#### actual behavior$/;"	t
add_callbacks	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/configs.lua	/^  local function add_callbacks(config)$/;"	f
af	.config/nvim/configs/coc.vim	/^omap af <Plug>(coc-funcobj-a)$/;"	m
af	.config/nvim/configs/coc.vim	/^xmap af <Plug>(coc-funcobj-a)$/;"	m
airline	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^augroup airline#extensions#cursormode$/;"	a
airline	nvim/autoload/plugged/vim-airline/plugin/airline.vim	/^    augroup airline$/;"	a
airline#add_inactive_statusline_func	nvim/autoload/plugged/vim-airline/autoload/airline.vim	/^function! airline#add_inactive_statusline_func(name)$/;"	f
airline#add_statusline_func	nvim/autoload/plugged/vim-airline/autoload/airline.vim	/^function! airline#add_statusline_func(name)$/;"	f
airline#add_statusline_funcref	nvim/autoload/plugged/vim-airline/autoload/airline.vim	/^function! airline#add_statusline_funcref(function)$/;"	f
airline#async#get_mq_async	nvim/autoload/plugged/vim-airline/autoload/airline/async.vim	/^  function! airline#async#get_mq_async(cmd, file)$/;"	f
airline#async#get_msgfmt_stat	nvim/autoload/plugged/vim-airline/autoload/airline/async.vim	/^  function! airline#async#get_msgfmt_stat(cmd, file)$/;"	f
airline#async#mq_output	nvim/autoload/plugged/vim-airline/autoload/airline/async.vim	/^function! airline#async#mq_output(buf, file)$/;"	f
airline#async#nvim_get_mq_async	nvim/autoload/plugged/vim-airline/autoload/airline/async.vim	/^  function! airline#async#nvim_get_mq_async(cmd, file)$/;"	f
airline#async#nvim_get_msgfmt_stat	nvim/autoload/plugged/vim-airline/autoload/airline/async.vim	/^  function! airline#async#nvim_get_msgfmt_stat(cmd, file)$/;"	f
airline#async#nvim_vcs_clean	nvim/autoload/plugged/vim-airline/autoload/airline/async.vim	/^  function! airline#async#nvim_vcs_clean(cmd, file, vcs)$/;"	f
airline#async#nvim_vcs_untracked	nvim/autoload/plugged/vim-airline/autoload/airline/async.vim	/^function! airline#async#nvim_vcs_untracked(cfg, file, vcs)$/;"	f
airline#async#vcs_clean	nvim/autoload/plugged/vim-airline/autoload/airline/async.vim	/^function! airline#async#vcs_clean(cmd, file, vcs)$/;"	f
airline#async#vcs_untracked	nvim/autoload/plugged/vim-airline/autoload/airline/async.vim	/^function! airline#async#vcs_untracked(config, file, vcs)$/;"	f
airline#async#vim7_vcs_clean	nvim/autoload/plugged/vim-airline/autoload/airline/async.vim	/^function! airline#async#vim7_vcs_clean(cmd, file, vcs)$/;"	f
airline#async#vim_vcs_clean	nvim/autoload/plugged/vim-airline/autoload/airline/async.vim	/^  function! airline#async#vim_vcs_clean(cmd, file, vcs)$/;"	f
airline#async#vim_vcs_untracked	nvim/autoload/plugged/vim-airline/autoload/airline/async.vim	/^  function! airline#async#vim_vcs_untracked(config, file)$/;"	f
airline#builder#get_next_group	nvim/autoload/plugged/vim-airline/autoload/airline/builder.vim	/^function! airline#builder#get_next_group(sections, i)$/;"	f
airline#builder#get_prev_group	nvim/autoload/plugged/vim-airline/autoload/airline/builder.vim	/^function! airline#builder#get_prev_group(sections, i)$/;"	f
airline#builder#new	nvim/autoload/plugged/vim-airline/autoload/airline/builder.vim	/^function! airline#builder#new(context)$/;"	f
airline#builder#should_change_group	nvim/autoload/plugged/vim-airline/autoload/airline/builder.vim	/^function! airline#builder#should_change_group(group1, group2)$/;"	f
airline#check_mode	nvim/autoload/plugged/vim-airline/autoload/airline.vim	/^function! airline#check_mode(winnr)$/;"	f
airline#cmdwinenter	nvim/autoload/plugged/vim-airline/plugin/airline.vim	/^function! airline#cmdwinenter(...)$/;"	f
airline#debug#profile1	nvim/autoload/plugged/vim-airline/autoload/airline/debug.vim	/^function! airline#debug#profile1()$/;"	f
airline#debug#profile2	nvim/autoload/plugged/vim-airline/autoload/airline/debug.vim	/^function! airline#debug#profile2()$/;"	f
airline#debug#profile3	nvim/autoload/plugged/vim-airline/autoload/airline/debug.vim	/^function! airline#debug#profile3()$/;"	f
airline#extensions#ale#get	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! airline#extensions#ale#get(type)$/;"	f
airline#extensions#ale#get_error	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! airline#extensions#ale#get_error()$/;"	f
airline#extensions#ale#get_warning	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! airline#extensions#ale#get_warning()$/;"	f
airline#extensions#ale#init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! airline#extensions#ale#init(ext)$/;"	f
airline#extensions#append_to_section	nvim/autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#append_to_section(name, value)$/;"	f
airline#extensions#apply	nvim/autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#apply(...)$/;"	f
airline#extensions#apply_left_override	nvim/autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#apply_left_override(section1, section2)$/;"	f
airline#extensions#battery#init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/battery.vim	/^function! airline#extensions#battery#init(ext) abort$/;"	f
airline#extensions#battery#status	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/battery.vim	/^function! airline#extensions#battery#status(...) abort$/;"	f
airline#extensions#bookmark#currentbookmark	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/bookmark.vim	/^function! airline#extensions#bookmark#currentbookmark()$/;"	f
airline#extensions#bookmark#init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/bookmark.vim	/^function! airline#extensions#bookmark#init(ext)$/;"	f
airline#extensions#branch#get_head	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! airline#extensions#branch#get_head()$/;"	f
airline#extensions#branch#head	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! airline#extensions#branch#head()$/;"	f
airline#extensions#branch#init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! airline#extensions#branch#init(ext)$/;"	f
airline#extensions#branch#update_untracked_config	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! airline#extensions#branch#update_untracked_config(file, vcs)$/;"	f
airline#extensions#bufferline#init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/bufferline.vim	/^function! airline#extensions#bufferline#init(ext)$/;"	f
airline#extensions#capslock#init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/capslock.vim	/^function! airline#extensions#capslock#init(ext)$/;"	f
airline#extensions#capslock#status	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/capslock.vim	/^function! airline#extensions#capslock#status()$/;"	f
airline#extensions#coc#get	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/coc.vim	/^function! airline#extensions#coc#get(type) abort$/;"	f
airline#extensions#coc#get_error	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/coc.vim	/^function! airline#extensions#coc#get_error() abort$/;"	f
airline#extensions#coc#get_status	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/coc.vim	/^function! airline#extensions#coc#get_status() abort$/;"	f
airline#extensions#coc#get_warning	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/coc.vim	/^function! airline#extensions#coc#get_warning() abort$/;"	f
airline#extensions#coc#init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/coc.vim	/^function! airline#extensions#coc#init(ext) abort$/;"	f
airline#extensions#commandt#apply	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/commandt.vim	/^function! airline#extensions#commandt#apply(...)$/;"	f
airline#extensions#commandt#init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/commandt.vim	/^function! airline#extensions#commandt#init(ext)$/;"	f
airline#extensions#csv#apply	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/csv.vim	/^function! airline#extensions#csv#apply(...)$/;"	f
airline#extensions#csv#get_column	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/csv.vim	/^function! airline#extensions#csv#get_column()$/;"	f
airline#extensions#csv#init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/csv.vim	/^function! airline#extensions#csv#init(ext)$/;"	f
airline#extensions#ctrlp#apply	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#apply(...)$/;"	f
airline#extensions#ctrlp#ctrlp_airline	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#ctrlp_airline(...)$/;"	f
airline#extensions#ctrlp#ctrlp_airline_status	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#ctrlp_airline_status(...)$/;"	f
airline#extensions#ctrlp#generate_color_map	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#generate_color_map(dark, light, white)$/;"	f
airline#extensions#ctrlp#init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#init(ext)$/;"	f
airline#extensions#ctrlp#load_theme	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#load_theme(palette)$/;"	f
airline#extensions#ctrlspace#init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/ctrlspace.vim	/^function! airline#extensions#ctrlspace#init(ext) abort$/;"	f
airline#extensions#ctrlspace#statusline	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/ctrlspace.vim	/^function! airline#extensions#ctrlspace#statusline(...) abort$/;"	f
airline#extensions#cursormode#activate	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! airline#extensions#cursormode#activate()$/;"	f
airline#extensions#cursormode#apply	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! airline#extensions#cursormode#apply(...)$/;"	f
airline#extensions#cursormode#init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! airline#extensions#cursormode#init(ext)$/;"	f
airline#extensions#cursormode#set	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! airline#extensions#cursormode#set(...)$/;"	f
airline#extensions#cursormode#tmux_escape	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! airline#extensions#cursormode#tmux_escape(escape)$/;"	f
airline#extensions#default#apply	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/default.vim	/^function! airline#extensions#default#apply(builder, context)$/;"	f
airline#extensions#denite#apply	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/denite.vim	/^function! airline#extensions#denite#apply(...) abort$/;"	f
airline#extensions#denite#check_denite_mode	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/denite.vim	/^function! airline#extensions#denite#check_denite_mode(bufnr) abort$/;"	f
airline#extensions#denite#init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/denite.vim	/^function! airline#extensions#denite#init(ext) abort$/;"	f
airline#extensions#dirvish#apply	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/dirvish.vim	/^function! airline#extensions#dirvish#apply(...) abort$/;"	f
airline#extensions#dirvish#init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/dirvish.vim	/^function! airline#extensions#dirvish#init(ext) abort$/;"	f
airline#extensions#eclim#creat_line	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/eclim.vim	/^function! airline#extensions#eclim#creat_line(...)$/;"	f
airline#extensions#eclim#get_warnings	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/eclim.vim	/^function! airline#extensions#eclim#get_warnings()$/;"	f
airline#extensions#eclim#init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/eclim.vim	/^function! airline#extensions#eclim#init(ext)$/;"	f
airline#extensions#example#apply	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/example.vim	/^function! airline#extensions#example#apply(...)$/;"	f
airline#extensions#example#get_cats	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/example.vim	/^function! airline#extensions#example#get_cats()$/;"	f
airline#extensions#example#init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/example.vim	/^function! airline#extensions#example#init(ext)$/;"	f
airline#extensions#fern#apply	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/fern.vim	/^function! airline#extensions#fern#apply(...) abort$/;"	f
airline#extensions#fern#init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/fern.vim	/^function! airline#extensions#fern#init(ext) abort$/;"	f
airline#extensions#fugitiveline#bufname	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/fugitiveline.vim	/^function! airline#extensions#fugitiveline#bufname()$/;"	f
airline#extensions#fugitiveline#init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/fugitiveline.vim	/^function! airline#extensions#fugitiveline#init(ext)$/;"	f
airline#extensions#fzf#apply	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/fzf.vim	/^function! airline#extensions#fzf#apply(...) abort$/;"	f
airline#extensions#fzf#inactive_apply	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/fzf.vim	/^function! airline#extensions#fzf#inactive_apply(...) abort$/;"	f
airline#extensions#fzf#init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/fzf.vim	/^function! airline#extensions#fzf#init(ext) abort$/;"	f
airline#extensions#fzf#statusline	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/fzf.vim	/^function! airline#extensions#fzf#statusline(...) abort$/;"	f
airline#extensions#get_loaded_extensions	nvim/autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#get_loaded_extensions()$/;"	f
airline#extensions#gina#apply	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/gina.vim	/^function! airline#extensions#gina#apply(...) abort$/;"	f
airline#extensions#gina#init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/gina.vim	/^function! airline#extensions#gina#init(ext) abort$/;"	f
airline#extensions#grepper#init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/grepper.vim	/^function! airline#extensions#grepper#init(ext)$/;"	f
airline#extensions#grepper#status	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/grepper.vim	/^function! airline#extensions#grepper#status()$/;"	f
airline#extensions#gutentags#init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/gutentags.vim	/^function! airline#extensions#gutentags#init(ext)$/;"	f
airline#extensions#gutentags#status	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/gutentags.vim	/^function! airline#extensions#gutentags#status()$/;"	f
airline#extensions#hunks#get_hunks	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! airline#extensions#hunks#get_hunks() abort$/;"	f
airline#extensions#hunks#get_raw_hunks	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! airline#extensions#hunks#get_raw_hunks() abort$/;"	f
airline#extensions#hunks#init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! airline#extensions#hunks#init(ext) abort$/;"	f
airline#extensions#keymap#init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/keymap.vim	/^function! airline#extensions#keymap#init(ext)$/;"	f
airline#extensions#keymap#status	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/keymap.vim	/^function! airline#extensions#keymap#status()$/;"	f
airline#extensions#languageclient#get	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! airline#extensions#languageclient#get(type)$/;"	f
airline#extensions#languageclient#get_error	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! airline#extensions#languageclient#get_error()$/;"	f
airline#extensions#languageclient#get_warning	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! airline#extensions#languageclient#get_warning()$/;"	f
airline#extensions#languageclient#init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! airline#extensions#languageclient#init(ext)$/;"	f
airline#extensions#load	nvim/autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#load()$/;"	f
airline#extensions#load_theme	nvim/autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#load_theme()$/;"	f
airline#extensions#localsearch#apply	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/localsearch.vim	/^function! airline#extensions#localsearch#apply(...) abort$/;"	f
airline#extensions#localsearch#init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/localsearch.vim	/^function! airline#extensions#localsearch#init(ext) abort$/;"	f
airline#extensions#localsearch#load_theme	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/localsearch.vim	/^function! airline#extensions#localsearch#load_theme(palette) abort$/;"	f
airline#extensions#lsp#get	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/lsp.vim	/^function! airline#extensions#lsp#get(type) abort$/;"	f
airline#extensions#lsp#get_error	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/lsp.vim	/^function! airline#extensions#lsp#get_error() abort$/;"	f
airline#extensions#lsp#get_warning	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/lsp.vim	/^function! airline#extensions#lsp#get_warning() abort$/;"	f
airline#extensions#lsp#init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/lsp.vim	/^function! airline#extensions#lsp#init(ext) abort$/;"	f
airline#extensions#neomake#get_errors	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/neomake.vim	/^function! airline#extensions#neomake#get_errors()$/;"	f
airline#extensions#neomake#get_warnings	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/neomake.vim	/^function! airline#extensions#neomake#get_warnings()$/;"	f
airline#extensions#neomake#init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/neomake.vim	/^function! airline#extensions#neomake#init(ext)$/;"	f
airline#extensions#netrw#apply	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/netrw.vim	/^function! airline#extensions#netrw#apply(...)$/;"	f
airline#extensions#netrw#init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/netrw.vim	/^function! airline#extensions#netrw#init(ext)$/;"	f
airline#extensions#netrw#sortstring	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/netrw.vim	/^function! airline#extensions#netrw#sortstring()$/;"	f
airline#extensions#nrrwrgn#apply	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/nrrwrgn.vim	/^function! airline#extensions#nrrwrgn#apply(...)$/;"	f
airline#extensions#nrrwrgn#init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/nrrwrgn.vim	/^function! airline#extensions#nrrwrgn#init(ext)$/;"	f
airline#extensions#nvimlsp#get	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/nvimlsp.vim	/^function! airline#extensions#nvimlsp#get(type) abort$/;"	f
airline#extensions#nvimlsp#get_error	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/nvimlsp.vim	/^function! airline#extensions#nvimlsp#get_error() abort$/;"	f
airline#extensions#nvimlsp#get_warning	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/nvimlsp.vim	/^function! airline#extensions#nvimlsp#get_warning() abort$/;"	f
airline#extensions#nvimlsp#init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/nvimlsp.vim	/^function! airline#extensions#nvimlsp#init(ext) abort$/;"	f
airline#extensions#obsession#get_status	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/obsession.vim	/^function! airline#extensions#obsession#get_status()$/;"	f
airline#extensions#obsession#init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/obsession.vim	/^function! airline#extensions#obsession#init(ext)$/;"	f
airline#extensions#omnisharp#init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/omnisharp.vim	/^function! airline#extensions#omnisharp#init(ext) abort$/;"	f
airline#extensions#omnisharp#server_status	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/omnisharp.vim	/^function! airline#extensions#omnisharp#server_status(...) abort$/;"	f
airline#extensions#po#apply	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/po.vim	/^function! airline#extensions#po#apply(...)$/;"	f
airline#extensions#po#init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/po.vim	/^function! airline#extensions#po#init(ext)$/;"	f
airline#extensions#po#on_winenter	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/po.vim	/^function! airline#extensions#po#on_winenter()$/;"	f
airline#extensions#po#shorten	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/po.vim	/^function! airline#extensions#po#shorten()$/;"	f
airline#extensions#po#stats	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/po.vim	/^function! airline#extensions#po#stats()$/;"	f
airline#extensions#poetv#apply	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/poetv.vim	/^function! airline#extensions#poetv#apply(...)$/;"	f
airline#extensions#poetv#init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/poetv.vim	/^function! airline#extensions#poetv#init(ext)$/;"	f
airline#extensions#poetv#update	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/poetv.vim	/^function! airline#extensions#poetv#update()$/;"	f
airline#extensions#prepend_to_section	nvim/autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#prepend_to_section(name, value)$/;"	f
airline#extensions#promptline#init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/promptline.vim	/^function! airline#extensions#promptline#init(ext)$/;"	f
airline#extensions#promptline#set_prompt_colors	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/promptline.vim	/^function! airline#extensions#promptline#set_prompt_colors(palette)$/;"	f
airline#extensions#quickfix#apply	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/quickfix.vim	/^function! airline#extensions#quickfix#apply(...)$/;"	f
airline#extensions#quickfix#get_type	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/quickfix.vim	/^function! airline#extensions#quickfix#get_type()$/;"	f
airline#extensions#quickfix#inactive_qf_window	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/quickfix.vim	/^function! airline#extensions#quickfix#inactive_qf_window(...)$/;"	f
airline#extensions#quickfix#init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/quickfix.vim	/^function! airline#extensions#quickfix#init(ext)$/;"	f
airline#extensions#searchcount#apply	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/searchcount.vim	/^function! airline#extensions#searchcount#apply(...) abort$/;"	f
airline#extensions#searchcount#init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/searchcount.vim	/^function! airline#extensions#searchcount#init(ext) abort$/;"	f
airline#extensions#searchcount#status	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/searchcount.vim	/^function! airline#extensions#searchcount#status() abort$/;"	f
airline#extensions#syntastic#get	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^function! airline#extensions#syntastic#get(type)$/;"	f
airline#extensions#syntastic#get_error	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^function! airline#extensions#syntastic#get_error()$/;"	f
airline#extensions#syntastic#get_warning	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^function! airline#extensions#syntastic#get_warning()$/;"	f
airline#extensions#syntastic#init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^function! airline#extensions#syntastic#init(ext)$/;"	f
airline#extensions#tabline#add_label	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#add_label(dict, type, right)$/;"	f
airline#extensions#tabline#add_tab_label	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#add_tab_label(dict)$/;"	f
airline#extensions#tabline#autoshow#off	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^function! airline#extensions#tabline#autoshow#off()$/;"	f
airline#extensions#tabline#autoshow#on	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^function! airline#extensions#tabline#autoshow#on()$/;"	f
airline#extensions#tabline#buffers#clickbuf	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! airline#extensions#tabline#buffers#clickbuf(minwid, clicks, button, modifiers) abort$/;"	f
airline#extensions#tabline#buffers#get	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! airline#extensions#tabline#buffers#get()$/;"	f
airline#extensions#tabline#buffers#invalidate	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! airline#extensions#tabline#buffers#invalidate()$/;"	f
airline#extensions#tabline#buffers#off	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! airline#extensions#tabline#buffers#off()$/;"	f
airline#extensions#tabline#buffers#on	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! airline#extensions#tabline#buffers#on()$/;"	f
airline#extensions#tabline#buflist#clean	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buflist.vim	/^function! airline#extensions#tabline#buflist#clean()$/;"	f
airline#extensions#tabline#buflist#invalidate	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buflist.vim	/^function! airline#extensions#tabline#buflist#invalidate()$/;"	f
airline#extensions#tabline#buflist#list	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buflist.vim	/^function! airline#extensions#tabline#buflist#list()$/;"	f
airline#extensions#tabline#builder#new	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! airline#extensions#tabline#builder#new(context)$/;"	f
airline#extensions#tabline#ctrlspace#add_buffer_section	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#add_buffer_section(builder, cur_tab, cur_buf, pul/;"	f
airline#extensions#tabline#ctrlspace#add_tab_section	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#add_tab_section(builder, pull_right)$/;"	f
airline#extensions#tabline#ctrlspace#get	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#get()$/;"	f
airline#extensions#tabline#ctrlspace#invalidate	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#invalidate()$/;"	f
airline#extensions#tabline#ctrlspace#off	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#off()$/;"	f
airline#extensions#tabline#ctrlspace#on	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#on()$/;"	f
airline#extensions#tabline#enable	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#enable()$/;"	f
airline#extensions#tabline#formatters#default#format	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^function! airline#extensions#tabline#formatters#default#format(bufnr, buffers)$/;"	f
airline#extensions#tabline#formatters#default#wrap_name	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^function! airline#extensions#tabline#formatters#default#wrap_name(bufnr, buffer_name)$/;"	f
airline#extensions#tabline#formatters#jsformatter#format	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/formatters/jsformatter.vim	/^function! airline#extensions#tabline#formatters#jsformatter#format(bufnr, buffers)$/;"	f
airline#extensions#tabline#formatters#short_path#format	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/formatters/short_path.vim	/^function! airline#extensions#tabline#formatters#short_path#format(bufnr, buffers)$/;"	f
airline#extensions#tabline#formatters#tabnr#format	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/formatters/tabnr.vim	/^function! airline#extensions#tabline#formatters#tabnr#format(tab_nr_type, nr)$/;"	f
airline#extensions#tabline#formatters#unique_tail#format	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/formatters/unique_tail.vim	/^function! airline#extensions#tabline#formatters#unique_tail#format(bufnr, buffers)$/;"	f
airline#extensions#tabline#formatters#unique_tail_improved#format	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/formatters/unique_tail_improved.vim	/^function! airline#extensions#tabline#formatters#unique_tail_improved#format(bufnr, buffers)$/;"	f
airline#extensions#tabline#formatters#webdevicons#format	nvim/autoload/plugged/vim-devicons/autoload/airline/extensions/tabline/formatters/webdevicons.vim	/^function! airline#extensions#tabline#formatters#webdevicons#format(bufnr, buffers) abort$/;"	f
airline#extensions#tabline#get	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#get()$/;"	f
airline#extensions#tabline#get_buffer_name	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#get_buffer_name(nr, ...)$/;"	f
airline#extensions#tabline#group_of_bufnr	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#group_of_bufnr(tab_bufs, bufnr)$/;"	f
airline#extensions#tabline#init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#init(ext)$/;"	f
airline#extensions#tabline#load_theme	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#load_theme(palette)$/;"	f
airline#extensions#tabline#new_builder	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#new_builder()$/;"	f
airline#extensions#tabline#redraw	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#redraw()$/;"	f
airline#extensions#tabline#tabs#get	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#get()$/;"	f
airline#extensions#tabline#tabs#invalidate	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#invalidate()$/;"	f
airline#extensions#tabline#tabs#map_keys	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#map_keys()$/;"	f
airline#extensions#tabline#tabs#off	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#off()$/;"	f
airline#extensions#tabline#tabs#on	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#on()$/;"	f
airline#extensions#tabline#tabs#tabnr_formatter	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#tabnr_formatter(nr, i) abort$/;"	f
airline#extensions#tabline#tabws#add_buffer_section	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^function! airline#extensions#tabline#tabws#add_buffer_section(builder, cur_tab, cur_buf, pull_ri/;"	f
airline#extensions#tabline#tabws#add_tab_section	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^function! airline#extensions#tabline#tabws#add_tab_section(builder, pull_right)$/;"	f
airline#extensions#tabline#tabws#get	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^function! airline#extensions#tabline#tabws#get()$/;"	f
airline#extensions#tabline#tabws#invalidate	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^function! airline#extensions#tabline#tabws#invalidate()$/;"	f
airline#extensions#tabline#tabws#off	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^function! airline#extensions#tabline#tabws#off()$/;"	f
airline#extensions#tabline#tabws#on	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^function! airline#extensions#tabline#tabws#on()$/;"	f
airline#extensions#tabline#title	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#title(n)$/;"	f
airline#extensions#tabline#xtabline#filter_buffers	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#filter_buffers()$/;"	f
airline#extensions#tabline#xtabline#init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#init()$/;"	f
airline#extensions#tabline#xtabline#maps	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#maps()$/;"	f
airline#extensions#tabline#xtabline#next_buffer	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#next_buffer(nr)$/;"	f
airline#extensions#tabline#xtabline#prev_buffer	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#prev_buffer(nr)$/;"	f
airline#extensions#tabline#xtabline#reopen_last_tab	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#reopen_last_tab()$/;"	f
airline#extensions#tabline#xtabline#select_buffer	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#select_buffer(nr)$/;"	f
airline#extensions#tabline#xtabline#toggle_buffers	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#toggle_buffers()$/;"	f
airline#extensions#tabline#xtabline#toggle_tabs	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#toggle_tabs()$/;"	f
airline#extensions#tabline#xtabline#update_obsession	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#update_obsession()$/;"	f
airline#extensions#tagbar#currenttag	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^function! airline#extensions#tagbar#currenttag()$/;"	f
airline#extensions#tagbar#get_status	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^function! airline#extensions#tagbar#get_status(...)$/;"	f
airline#extensions#tagbar#inactive_apply	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^function! airline#extensions#tagbar#inactive_apply(...)$/;"	f
airline#extensions#tagbar#init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^function! airline#extensions#tagbar#init(ext)$/;"	f
airline#extensions#term#apply	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/term.vim	/^function! airline#extensions#term#apply(...) abort$/;"	f
airline#extensions#term#inactive_apply	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/term.vim	/^function! airline#extensions#term#inactive_apply(...) abort$/;"	f
airline#extensions#term#init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/term.vim	/^function! airline#extensions#term#init(ext) abort$/;"	f
airline#extensions#term#termmode	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/term.vim	/^function! airline#extensions#term#termmode() abort$/;"	f
airline#extensions#tmuxline#init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tmuxline.vim	/^function! airline#extensions#tmuxline#init(ext)$/;"	f
airline#extensions#tmuxline#set_tmux_colors	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tmuxline.vim	/^function! airline#extensions#tmuxline#set_tmux_colors(palette)$/;"	f
airline#extensions#undotree#apply	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/undotree.vim	/^function! airline#extensions#undotree#apply(...)$/;"	f
airline#extensions#undotree#init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/undotree.vim	/^function! airline#extensions#undotree#init(ext)$/;"	f
airline#extensions#unicode#apply	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/unicode.vim	/^function! airline#extensions#unicode#apply(...)$/;"	f
airline#extensions#unicode#init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/unicode.vim	/^function! airline#extensions#unicode#init(ext)$/;"	f
airline#extensions#unite#apply	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/unite.vim	/^function! airline#extensions#unite#apply(...)$/;"	f
airline#extensions#unite#init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/unite.vim	/^function! airline#extensions#unite#init(ext)$/;"	f
airline#extensions#vimagit#apply	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/vimagit.vim	/^function! airline#extensions#vimagit#apply(...) abort$/;"	f
airline#extensions#vimagit#get_mode	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/vimagit.vim	/^function! airline#extensions#vimagit#get_mode() abort$/;"	f
airline#extensions#vimagit#init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/vimagit.vim	/^function! airline#extensions#vimagit#init(ext) abort$/;"	f
airline#extensions#vimcmake#apply	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/vimcmake.vim	/^function! airline#extensions#vimcmake#apply(...) abort$/;"	f
airline#extensions#vimcmake#inactive_apply	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/vimcmake.vim	/^function! airline#extensions#vimcmake#inactive_apply(...) abort$/;"	f
airline#extensions#vimcmake#init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/vimcmake.vim	/^function! airline#extensions#vimcmake#init(ext) abort$/;"	f
airline#extensions#vimtex#apply	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/vimtex.vim	/^function! airline#extensions#vimtex#apply(...)$/;"	f
airline#extensions#vimtex#get_scope	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/vimtex.vim	/^function! airline#extensions#vimtex#get_scope()$/;"	f
airline#extensions#vimtex#init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/vimtex.vim	/^function! airline#extensions#vimtex#init(ext)$/;"	f
airline#extensions#virtualenv#apply	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/virtualenv.vim	/^function! airline#extensions#virtualenv#apply(...)$/;"	f
airline#extensions#virtualenv#init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/virtualenv.vim	/^function! airline#extensions#virtualenv#init(ext)$/;"	f
airline#extensions#virtualenv#update	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/virtualenv.vim	/^function! airline#extensions#virtualenv#update()$/;"	f
airline#extensions#vista#currenttag	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/vista.vim	/^function! airline#extensions#vista#currenttag() abort$/;"	f
airline#extensions#vista#init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/vista.vim	/^function! airline#extensions#vista#init(ext) abort$/;"	f
airline#extensions#whitespace#check	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! airline#extensions#whitespace#check()$/;"	f
airline#extensions#whitespace#disable	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! airline#extensions#whitespace#disable()$/;"	f
airline#extensions#whitespace#init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! airline#extensions#whitespace#init(...)$/;"	f
airline#extensions#whitespace#toggle	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! airline#extensions#whitespace#toggle()$/;"	f
airline#extensions#windowswap#get_status	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/windowswap.vim	/^function! airline#extensions#windowswap#get_status()$/;"	f
airline#extensions#windowswap#init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/windowswap.vim	/^function! airline#extensions#windowswap#init(ext)$/;"	f
airline#extensions#wordcount#apply	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^function! airline#extensions#wordcount#apply(...)$/;"	f
airline#extensions#wordcount#formatters#default#to_string	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/default.vim	/^function! airline#extensions#wordcount#formatters#default#to_string(wordcount)$/;"	f
airline#extensions#wordcount#formatters#default#update_fmt	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/default.vim	/^function! airline#extensions#wordcount#formatters#default#update_fmt(...)$/;"	f
airline#extensions#wordcount#formatters#readingtime#to_string	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/readingtime.vim	/^function! airline#extensions#wordcount#formatters#readingtime#to_string(wordcount) abort$/;"	f
airline#extensions#wordcount#formatters#readingtime#update_fmt	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/readingtime.vim	/^function! airline#extensions#wordcount#formatters#readingtime#update_fmt(...) abort$/;"	f
airline#extensions#wordcount#get	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^function airline#extensions#wordcount#get()$/;"	f
airline#extensions#wordcount#init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^function! airline#extensions#wordcount#init(ext)$/;"	f
airline#extensions#xkblayout#init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/xkblayout.vim	/^function! airline#extensions#xkblayout#init(ext)$/;"	f
airline#extensions#xkblayout#status	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/xkblayout.vim	/^function! airline#extensions#xkblayout#status()$/;"	f
airline#extensions#ycm#get_error_count	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/ycm.vim	/^function! airline#extensions#ycm#get_error_count() abort$/;"	f
airline#extensions#ycm#get_warning_count	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/ycm.vim	/^function! airline#extensions#ycm#get_warning_count()$/;"	f
airline#extensions#ycm#init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/ycm.vim	/^function! airline#extensions#ycm#init(ext)$/;"	f
airline#extensions#zoomwintab#apply	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/zoomwintab.vim	/^function! airline#extensions#zoomwintab#apply(...) abort$/;"	f
airline#extensions#zoomwintab#init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/zoomwintab.vim	/^function! airline#extensions#zoomwintab#init(ext) abort$/;"	f
airline#formatter#short_path#format	nvim/autoload/plugged/vim-airline/autoload/airline/formatter/short_path.vim	/^function! airline#formatter#short_path#format(val) abort$/;"	f
airline#highlighter#add_accent	nvim/autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#add_accent(accent)$/;"	f
airline#highlighter#add_separator	nvim/autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#add_separator(from, to, inverse)$/;"	f
airline#highlighter#exec	nvim/autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#exec(group, colors)$/;"	f
airline#highlighter#get_highlight	nvim/autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#get_highlight(group, ...)$/;"	f
airline#highlighter#get_highlight2	nvim/autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#get_highlight2(fg, bg, ...)$/;"	f
airline#highlighter#highlight	nvim/autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#highlight(modes, ...)$/;"	f
airline#highlighter#highlight_modified_inactive	nvim/autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#highlight_modified_inactive(bufnr)$/;"	f
airline#highlighter#load_theme	nvim/autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#load_theme()$/;"	f
airline#highlighter#reset_hlcache	nvim/autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#reset_hlcache()$/;"	f
airline#init#bootstrap	nvim/autoload/plugged/vim-airline/autoload/airline/init.vim	/^function! airline#init#bootstrap()$/;"	f
airline#init#gui_mode	nvim/autoload/plugged/vim-airline/autoload/airline/init.vim	/^function! airline#init#gui_mode()$/;"	f
airline#init#sections	nvim/autoload/plugged/vim-airline/autoload/airline/init.vim	/^function! airline#init#sections()$/;"	f
airline#load_theme	nvim/autoload/plugged/vim-airline/autoload/airline.vim	/^function! airline#load_theme()$/;"	f
airline#mode_changed	nvim/autoload/plugged/vim-airline/autoload/airline.vim	/^function! airline#mode_changed()$/;"	f
airline#msdos#round_msdos_colors	nvim/autoload/plugged/vim-airline/autoload/airline/msdos.vim	/^function! airline#msdos#round_msdos_colors(rgblist)$/;"	f
airline#parts#crypt	nvim/autoload/plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#crypt()$/;"	f
airline#parts#define	nvim/autoload/plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define(key, config)$/;"	f
airline#parts#define_accent	nvim/autoload/plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_accent(key, accent)$/;"	f
airline#parts#define_condition	nvim/autoload/plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_condition(key, predicate)$/;"	f
airline#parts#define_empty	nvim/autoload/plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_empty(keys)$/;"	f
airline#parts#define_function	nvim/autoload/plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_function(key, name)$/;"	f
airline#parts#define_minwidth	nvim/autoload/plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_minwidth(key, width)$/;"	f
airline#parts#define_raw	nvim/autoload/plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_raw(key, raw)$/;"	f
airline#parts#define_text	nvim/autoload/plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_text(key, text)$/;"	f
airline#parts#ffenc	nvim/autoload/plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#ffenc()$/;"	f
airline#parts#filetype	nvim/autoload/plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#filetype()$/;"	f
airline#parts#get	nvim/autoload/plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#get(key)$/;"	f
airline#parts#iminsert	nvim/autoload/plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#iminsert()$/;"	f
airline#parts#mode	nvim/autoload/plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#mode()$/;"	f
airline#parts#paste	nvim/autoload/plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#paste()$/;"	f
airline#parts#readonly	nvim/autoload/plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#readonly()$/;"	f
airline#parts#spell	nvim/autoload/plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#spell()$/;"	f
airline#remove_statusline_func	nvim/autoload/plugged/vim-airline/autoload/airline.vim	/^function! airline#remove_statusline_func(name)$/;"	f
airline#section#create	nvim/autoload/plugged/vim-airline/autoload/airline/section.vim	/^function! airline#section#create(parts)$/;"	f
airline#section#create_left	nvim/autoload/plugged/vim-airline/autoload/airline/section.vim	/^function! airline#section#create_left(parts)$/;"	f
airline#section#create_right	nvim/autoload/plugged/vim-airline/autoload/airline/section.vim	/^function! airline#section#create_right(parts)$/;"	f
airline#statusline	nvim/autoload/plugged/vim-airline/autoload/airline.vim	/^function! airline#statusline(winnr)$/;"	f
airline#switch_matching_theme	nvim/autoload/plugged/vim-airline/autoload/airline.vim	/^function! airline#switch_matching_theme()$/;"	f
airline#switch_theme	nvim/autoload/plugged/vim-airline/autoload/airline.vim	/^function! airline#switch_theme(name, ...)$/;"	f
airline#themes#generate_color_map	nvim/autoload/plugged/vim-airline/autoload/airline/themes.vim	/^function! airline#themes#generate_color_map(sect1, sect2, sect3, ...)$/;"	f
airline#themes#get_highlight	nvim/autoload/plugged/vim-airline/autoload/airline/themes.vim	/^function! airline#themes#get_highlight(group, ...)$/;"	f
airline#themes#get_highlight2	nvim/autoload/plugged/vim-airline/autoload/airline/themes.vim	/^function! airline#themes#get_highlight2(fg, bg, ...)$/;"	f
airline#themes#patch	nvim/autoload/plugged/vim-airline/autoload/airline/themes.vim	/^function! airline#themes#patch(palette)$/;"	f
airline#update_statusline	nvim/autoload/plugged/vim-airline/autoload/airline.vim	/^function! airline#update_statusline()$/;"	f
airline#update_statusline_focuslost	nvim/autoload/plugged/vim-airline/autoload/airline.vim	/^function! airline#update_statusline_focuslost()$/;"	f
airline#update_statusline_inactive	nvim/autoload/plugged/vim-airline/autoload/airline.vim	/^function! airline#update_statusline_inactive(range)$/;"	f
airline#update_tabline	nvim/autoload/plugged/vim-airline/autoload/airline.vim	/^function! airline#update_tabline()$/;"	f
airline#util#append	nvim/autoload/plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#append(text, minwidth)$/;"	f
airline#util#doautocmd	nvim/autoload/plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#doautocmd(event)$/;"	f
airline#util#exec_funcrefs	nvim/autoload/plugged/vim-airline/autoload/airline/util.vim	/^  function! airline#util#exec_funcrefs(list, ...)$/;"	f
airline#util#getbufvar	nvim/autoload/plugged/vim-airline/autoload/airline/util.vim	/^  function! airline#util#getbufvar(bufnr, key, def)$/;"	f
airline#util#getwinvar	nvim/autoload/plugged/vim-airline/autoload/airline/util.vim	/^  function! airline#util#getwinvar(winnr, key, def)$/;"	f
airline#util#has_custom_scm	nvim/autoload/plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#has_custom_scm()$/;"	f
airline#util#has_fugitive	nvim/autoload/plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#has_fugitive()$/;"	f
airline#util#has_gina	nvim/autoload/plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#has_gina()$/;"	f
airline#util#has_lawrencium	nvim/autoload/plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#has_lawrencium()$/;"	f
airline#util#has_vcscommand	nvim/autoload/plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#has_vcscommand()$/;"	f
airline#util#ignore_buf	nvim/autoload/plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#ignore_buf(name)$/;"	f
airline#util#ignore_next_focusgain	nvim/autoload/plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#ignore_next_focusgain()$/;"	f
airline#util#prepend	nvim/autoload/plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#prepend(text, minwidth)$/;"	f
airline#util#shorten	nvim/autoload/plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#shorten(text, winwidth, minwidth, ...)$/;"	f
airline#util#stl_disabled	nvim/autoload/plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#stl_disabled(winnr)$/;"	f
airline#util#strcharpart	nvim/autoload/plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#strcharpart(...)$/;"	f
airline#util#strchars	nvim/autoload/plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#strchars(str)$/;"	f
airline#util#themes	nvim/autoload/plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#themes(match)$/;"	f
airline#util#try_focusgained	nvim/autoload/plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#try_focusgained()$/;"	f
airline#util#warning	nvim/autoload/plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#warning(msg)$/;"	f
airline#util#winwidth	nvim/autoload/plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#winwidth(...)$/;"	f
airline#util#wrap	nvim/autoload/plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#wrap(text, minwidth)$/;"	f
airline_ale	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/ale.vim	/^  augroup airline_ale$/;"	a
airline_languageclient	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^  augroup airline_languageclient$/;"	a
airline_omnisharp	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/omnisharp.vim	/^  augroup airline_omnisharp$/;"	a
airline_tabline_autoshow	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^  augroup airline_tabline_autoshow$/;"	a
airline_tabline_buffers	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^  augroup airline_tabline_buffers$/;"	a
airline_tabline_ctrlspace	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^  augroup airline_tabline_ctrlspace$/;"	a
airline_tabline_tabs	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^  augroup airline_tabline_tabs$/;"	a
airline_tabline_tabws	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^  augroup airline_tabline_tabws$/;"	a
airline_whitespace	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^    augroup airline_whitespace$/;"	a
airline_whitespace	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^  augroup airline_whitespace$/;"	a
all_match	nvim/autoload/plugged/completion-nvim/lua/completion/matching.lua	/^local function all_match()$/;"	f
als	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## als$/;"	s	chapter:Configurations
alt	.config/polybar/modules.ini	/^date-alt = %d\/%m\/%Y$/;"	k	section:module/date
alt	polybar/modules.ini	/^date-alt = %d\/%m\/%Y$/;"	k	section:module/date
analysis_server_snapshot_path	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/dartls.lua	/^local analysis_server_snapshot_path = function()$/;"	f
andromeda	nvim/autoload/plugged/sonokai/alacritty/README.md	/^## andromeda$/;"	s	chapter:Installation
applyAddtionalTextEdits	nvim/autoload/plugged/completion-nvim/lua/completion.lua	/^local function applyAddtionalTextEdits(completed_item)$/;"	f
argesc	nvim/autoload/plugged/editorconfig-vim/tests/core/ecvimlib.ps1	/^function global:argesc($arg) {$/;"	f
argv	nvim/autoload/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^$argv = @(de64_args($args))$/;"	v
atlantis	nvim/autoload/plugged/sonokai/alacritty/README.md	/^## atlantis$/;"	s	chapter:Installation
author	nvim/autoload/plugged/vim-snippets/addon-info.json	/^  "author" : "community",$/;"	s
autoAddParens	nvim/autoload/plugged/completion-nvim/lua/completion.lua	/^local function autoAddParens(completed_item)$/;"	f
auto_spellcheck	.config/nvim/general/functions.vim	/^augroup auto_spellcheck$/;"	a
b.get_group	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^  function! b.get_group(i) dict$/;"	f
b.get_group	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^  function! b.get_group(i) dict$/;"	f
b.get_posttitle	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^    function! b.get_posttitle(i) dict$/;"	f
b.get_pretitle	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^    function! b.get_pretitle(i) dict$/;"	f
b.get_title	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^  function! b.get_title(i) dict$/;"	f
b.get_title	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^  function! b.get_title(i) dict$/;"	f
b:current_syntax	nvim/autoload/plugged/neosnippet.vim/syntax/neosnippet.vim	/^let b:current_syntax = 'snippet'$/;"	v
b:did_indent	nvim/autoload/plugged/neosnippet.vim/indent/neosnippet.vim	/^let b:did_indent = 1$/;"	v
b:done_vimsnippets	nvim/autoload/plugged/vim-snippets/plugin/vimsnippets.vim	/^let b:done_vimsnippets = 1$/;"	v
b:undo_ftplugin	nvim/autoload/plugged/neosnippet.vim/ftplugin/neosnippet.vim	/^    let b:undo_ftplugin = ''$/;"	v
b:undo_ftplugin	nvim/autoload/plugged/neosnippet.vim/ftplugin/neosnippet.vim	/^    let b:undo_ftplugin = '|'$/;"	v
b:undo_ftplugin	nvim/autoload/plugged/neosnippet.vim/ftplugin/neosnippet.vim	/^let b:undo_ftplugin .= '$/;"	v
b:undo_indent	nvim/autoload/plugged/neosnippet.vim/indent/neosnippet.vim	/^  let b:undo_indent .= '|'$/;"	v
b:undo_indent	nvim/autoload/plugged/neosnippet.vim/indent/neosnippet.vim	/^  let b:undo_indent = ''$/;"	v
b:undo_indent	nvim/autoload/plugged/neosnippet.vim/indent/neosnippet.vim	/^let b:undo_indent .= 'setlocal$/;"	v
backend	.config/picom.conf	/^backend = "glx";$/;"	k
backend	.config/picom/picom_rounded_corners.conf	/^backend = "glx";$/;"	k
background	.config/polybar/bars.ini	/^tray-background = ${colors.background}$/;"	k	section:bar/right
background	.config/polybar/base.ini	/^background= ${colors.background}$/;"	k	section:section/base
background	.config/polybar/colors.ini	/^background = ${xrdb:background}$/;"	k	section:colors
background	.config/polybar/modules.ini	/^format-background = ${colors.background}$/;"	k	section:module/cpu
background	.config/polybar/modules.ini	/^format-background = ${colors.background}$/;"	k	section:module/memory
background	polybar/bars.ini	/^tray-background = ${colors.background}$/;"	k	section:bar/right
background	polybar/base.ini	/^background= ${colors.background}$/;"	k	section:section/base
background	polybar/colors.ini	/^background = ${xrdb:background}$/;"	k	section:colors
background	polybar/modules.ini	/^format-background = ${colors.background}$/;"	k	section:module/cpu
background	polybar/modules.ini	/^format-background = ${colors.background}$/;"	k	section:module/memory
bar/left	.config/polybar/bars.ini	/^[bar\/left]$/;"	s
bar/left	polybar/bars.ini	/^[bar\/left]$/;"	s
bar/main	.config/polybar/bars.ini	/^[bar\/main]$/;"	s
bar/main	polybar/bars.ini	/^[bar\/main]$/;"	s
bar/right	.config/polybar/bars.ini	/^[bar\/right]$/;"	s
bar/right	polybar/bars.ini	/^[bar\/right]$/;"	s
bash	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	o
bashls	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## bashls$/;"	s	chapter:Configurations
basic_args	nvim/autoload/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^$basic_args = '-nNes','-i','NONE','-u','NONE','-U','NONE'   #, '-V1'$/;"	v
before_init	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/codeqlls.lua	/^        before_init = function(initialize_params, config)$/;"	f
better_whitespace	nvim/autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^    augroup better_whitespace$/;"	a
bin_path	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/util.lua	/^  local function bin_path(name)$/;"	f
blur	.config/picom/picom_rounded_corners.conf	/^blur: {$/;"	k
bold	nvim/autoload/plugged/nvim-lspconfig/scripts/docgen.lua	/^                    local function bold(s) return string.format("**%s**", s) end$/;"	f
bookmark.sign	.config/nvim/coc-settings.json	/^  "bookmark.sign": " ",$/;"	s
bottom	.config/polybar/base.ini	/^bottom = false$/;"	k	section:section/base
bottom	polybar/base.ini	/^bottom = false$/;"	k	section:section/base
buf_build	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/texlab.lua	/^local function buf_build(bufnr)$/;"	f
buftabline#render	nvim/autoload/plugged/vim-buftabline/plugin/buftabline.vim	/^function! buftabline#render()$/;"	f
buftabline#update	nvim/autoload/plugged/vim-buftabline/plugin/buftabline.vim	/^function! buftabline#update(zombie)$/;"	f
buftabline#user_buffers	nvim/autoload/plugged/vim-buftabline/plugin/buftabline.vim	/^function! buftabline#user_buffers() " help buffers are always unlisted, but quickfix buffers are/;"	f
c	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	o
c	nvim/autoload/plugged/vim-airline/t/airline.vim	/^    let c = len(g:airline_statusline_funcrefs)$/;"	v
c_sharp	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	o
cache.get	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/caching.lua	/^  function cache.get(type_name, bufnr)$/;"	f
cache.has	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/caching.lua	/^  function cache.has(type_name, bufnr)$/;"	f
cache.remove	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/caching.lua	/^  function cache.remove(type_name, bufnr)$/;"	f
cache.set	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/caching.lua	/^  function cache.set(type_name, bufnr, value)$/;"	f
callback_function	nvim/autoload/plugged/completion-nvim/lua/completion/hover.lua	/^local function callback_function(_, method, result)$/;"	f
cb	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/util.lua	/^    local function cb(dir, _)$/;"	f
ccls	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## ccls$/;"	s	chapter:Configurations
center	.config/polybar/bars.ini	/^modules-center = bspwm$/;"	k	section:bar/left
center	.config/polybar/bars.ini	/^modules-center = bspwm$/;"	k	section:bar/main
center	.config/polybar/bars.ini	/^modules-center = bspwm$/;"	k	section:bar/right
center	.config/polybar/base.ini	/^fixed-center = true$/;"	k	section:section/base
center	polybar/bars.ini	/^modules-center = bspwm$/;"	k	section:bar/left
center	polybar/bars.ini	/^modules-center = bspwm$/;"	k	section:bar/main
center	polybar/bars.ini	/^modules-center = bspwm$/;"	k	section:bar/right
center	polybar/base.ini	/^fixed-center = true$/;"	k	section:section/base
cgc	nvim/autoload/plugged/vim-commentary/plugin/commentary.vim	/^    nmap cgc <Plug>ChangeCommentary$/;"	m
chain_list_to_tree	nvim/autoload/plugged/completion-nvim/lua/completion/chain_completion.lua	/^local function chain_list_to_tree(complete_list)$/;"	f
chars	nvim/autoload/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^        $chars = ''$/;"	v
checkCallback	nvim/autoload/plugged/completion-nvim/lua/completion/complete.lua	/^local function checkCallback(callback_array)$/;"	f
checkCompletionSource	nvim/autoload/plugged/completion-nvim/lua/completion/health.lua	/^local checkCompletionSource = function()$/;"	f
checkEmptyCompletion	nvim/autoload/plugged/completion-nvim/lua/completion/source/ins_complete.lua	/^local checkEmptyCompletion = function()$/;"	f
checkSnippetSource	nvim/autoload/plugged/completion-nvim/lua/completion/health.lua	/^local checkSnippetSource = function()$/;"	f
clangd	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## clangd$/;"	s	chapter:Configurations
click	.config/polybar/modules.ini	/^enable-click = true$/;"	k	section:module/bspwm
click	polybar/modules.ini	/^enable-click = true$/;"	k	section:module/bspwm
client.config.callbacks['textDocument/hover']	nvim/autoload/plugged/completion-nvim/lua/completion/hover.lua	/^      client.config.callbacks['textDocument\/hover'] = callback_function$/;"	f
client.workspace_did_change_configuration	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/configs.lua	/^        function client.workspace_did_change_configuration(settings)$/;"	f
clojure_lsp	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## clojure_lsp$/;"	s	chapter:Configurations
cmake	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## cmake$/;"	s	chapter:Configurations
cmd	nvim/autoload/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^$cmd = ''$/;"	v
cmdline.__update	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/AsyncUpdate.vim	/^	function! a:cmdline.__update()$/;"	f
cmdline.backward_word	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/modules/module_management.vim	/^        function! a:cmdline.backward_word(...) abort$/;"	f
cmdline.backward_word	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/IgnoreRegexpBackwardWord.vim	/^	function! a:cmdline.backward_word(...)$/;"	f
coc.preferences.hoverTarget	.config/nvim/coc-settings.json	/^  "coc.preferences.hoverTarget": "float",$/;"	s
coc.source.around.enable	.config/nvim/coc-settings.json	/^  "coc.source.around.enable": true,$/;"	b
codeqlls	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## codeqlls$/;"	s	chapter:Configurations
color0	.config/polybar/colors.ini	/^color0 = ${xrdb:color0}$/;"	k	section:colors
color0	polybar/colors.ini	/^color0 = ${xrdb:color0}$/;"	k	section:colors
color1	.config/polybar/colors.ini	/^color1 = ${xrdb:color1}$/;"	k	section:colors
color1	polybar/colors.ini	/^color1 = ${xrdb:color1}$/;"	k	section:colors
color10	.config/polybar/colors.ini	/^color10 = ${xrdb:color10}$/;"	k	section:colors
color10	polybar/colors.ini	/^color10 = ${xrdb:color10}$/;"	k	section:colors
color11	.config/polybar/colors.ini	/^color11 = ${xrdb:color11}$/;"	k	section:colors
color11	polybar/colors.ini	/^color11 = ${xrdb:color11}$/;"	k	section:colors
color12	.config/polybar/colors.ini	/^color12 = ${xrdb:color12}$/;"	k	section:colors
color12	polybar/colors.ini	/^color12 = ${xrdb:color12}$/;"	k	section:colors
color13	.config/polybar/colors.ini	/^color13 = ${xrdb:color13}$/;"	k	section:colors
color13	polybar/colors.ini	/^color13 = ${xrdb:color13}$/;"	k	section:colors
color14	.config/polybar/colors.ini	/^color14 = ${xrdb:color14}$/;"	k	section:colors
color14	polybar/colors.ini	/^color14 = ${xrdb:color14}$/;"	k	section:colors
color15	.config/polybar/colors.ini	/^color15 = ${xrdb:color15}$/;"	k	section:colors
color15	polybar/colors.ini	/^color15 = ${xrdb:color15}$/;"	k	section:colors
color2	.config/polybar/colors.ini	/^color2 = ${xrdb:color2}$/;"	k	section:colors
color2	polybar/colors.ini	/^color2 = ${xrdb:color2}$/;"	k	section:colors
color3	.config/polybar/colors.ini	/^color3 = ${xrdb:color3}$/;"	k	section:colors
color3	polybar/colors.ini	/^color3 = ${xrdb:color3}$/;"	k	section:colors
color4	.config/polybar/colors.ini	/^color4 = ${xrdb:color4}$/;"	k	section:colors
color4	polybar/colors.ini	/^color4 = ${xrdb:color4}$/;"	k	section:colors
color5	.config/polybar/colors.ini	/^color5 = ${xrdb:color5}$/;"	k	section:colors
color5	polybar/colors.ini	/^color5 = ${xrdb:color5}$/;"	k	section:colors
color6	.config/polybar/colors.ini	/^color6 = ${xrdb:color6}$/;"	k	section:colors
color6	polybar/colors.ini	/^color6 = ${xrdb:color6}$/;"	k	section:colors
color7	.config/polybar/colors.ini	/^color7 = ${xrdb:color7}$/;"	k	section:colors
color7	polybar/colors.ini	/^color7 = ${xrdb:color7}$/;"	k	section:colors
color8	.config/polybar/colors.ini	/^color8 = ${xrdb:color8}$/;"	k	section:colors
color8	polybar/colors.ini	/^color8 = ${xrdb:color8}$/;"	k	section:colors
color9	.config/polybar/colors.ini	/^color9 = ${xrdb:color9}$/;"	k	section:colors
color9	polybar/colors.ini	/^color9 = ${xrdb:color9}$/;"	k	section:colors
colors	.config/polybar/colors.ini	/^[colors]$/;"	s
colors	nvim/autoload/plugged/vim-airline/t/themes.vim	/^    let colors = airline#themes#get_highlight('Foo')$/;"	v
colors	polybar/colors.ini	/^[colors]$/;"	s
commentary.vim	nvim/autoload/plugged/vim-commentary/README.markdown	/^# commentary.vim$/;"	c
complete	nvim/autoload/plugged/vim-snippets/pythonx/vimsnippets.py	/^def complete(tab, opts):$/;"	f
completion#completion_confirm	nvim/autoload/plugged/completion-nvim/autoload/completion.vim	/^function! completion#completion_confirm() abort$/;"	f
completion#completion_wrapper	nvim/autoload/plugged/completion-nvim/autoload/completion.vim	/^function! completion#completion_wrapper()$/;"	f
completion#enable_in_comment	nvim/autoload/plugged/completion-nvim/autoload/completion.vim	/^function! completion#enable_in_comment()$/;"	f
completion#get_buffer_variable	nvim/autoload/plugged/completion-nvim/autoload/completion.vim	/^function! completion#get_buffer_variable(str)$/;"	f
completion#trigger_completion	nvim/autoload/plugged/completion-nvim/autoload/completion.vim	/^function! completion#trigger_completion()$/;"	f
completion#wrap_completion	nvim/autoload/plugged/completion-nvim/autoload/completion.vim	/^function! completion#wrap_completion() abort$/;"	f
completion-nvim	nvim/autoload/plugged/completion-nvim/README.md	/^# completion-nvim$/;"	c
config.callbacks["window/logMessage"]	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/configs.lua	/^    config.callbacks["window\/logMessage"] = function(err, method, params, client_id)$/;"	f
config.callbacks["window/showMessage"]	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/configs.lua	/^    config.callbacks["window\/showMessage"] = function(err, method, params, client_id)$/;"	f
config.callbacks["workspace/configuration"]	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/configs.lua	/^    config.callbacks["workspace\/configuration"] = function(err, method, params, client_id)$/;"	f
config.on_init	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/util.lua	/^  function config.on_init(client, result)$/;"	f
config.set_defaults	nvim/autoload/plugged/formatter.nvim/lua/format/config.lua	/^function config.set_defaults(defaults)$/;"	f
config_info	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^local function config_info(process_function)$/;"	f
config_name	nvim/autoload/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^                $config_name = $argv[$idx]$/;"	v
config_name	nvim/autoload/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^$config_name = '.editorconfig'$/;"	v
configs.__newindex	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/configs.lua	/^function configs.__newindex(t, config_name, config_def)$/;"	f
configs.julials.install	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/julials.lua	/^configs.julials.install = function()$/;"	f
configs.julials.install_info	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/julials.lua	/^configs.julials.install_info = function()$/;"	f
configs.nimls.install	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/nimls.lua	/^configs.nimls.install = function()$/;"	f
configs.nimls.install_info	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/nimls.lua	/^configs.nimls.install_info = function()$/;"	f
corners	.config/picom.conf	/^detect-rounded-corners = true;$/;"	k
corners	.config/picom/picom_rounded_corners.conf	/^detect-rounded-corners = true;$/;"	k
cpp	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	o
create_vim	nvim/autoload/plugged/editorconfig-vim/tests/plugin/spec/editorconfig_spec.rb	/^def create_vim(*initial_commands)$/;"	f
css	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	o
cssls	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## cssls$/;"	s	chapter:Configurations
cterm_normal	nvim/autoload/plugged/nvim-treesitter/plugin/nvim-treesitter.vim	/^let cterm_normal = s:has_attr('fg', 'cterm') ? 'fg' : 'NONE'$/;"	v
cur_col	nvim/autoload/plugged/diagnostic-nvim/lua/jumpLoc.lua	/^  local cur_col = api.nvim_call_function('col', {"."})$/;"	f
cur_row	nvim/autoload/plugged/diagnostic-nvim/lua/jumpLoc.lua	/^  local cur_row = api.nvim_call_function('line', {"."})$/;"	f
current_score	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^        local current_score = scoring_function(match)$/;"	f
d	nvim/autoload/plug.vim	/^      nnoremap <silent> <buffer> d :set opfunc=<sid>delete_op<cr>g@$/;"	m
d	nvim/autoload/plug.vim	/^      xnoremap <silent> <buffer> d :<c-u>call <sid>delete_op(visualmode(), 1)<cr>$/;"	m
dart	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	o
dartls	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## dartls$/;"	s	chapter:Configurations
day	.config/redshift.conf	/^brightness-day=0.9$/;"	k	section:redshift
day	.config/redshift.conf	/^temp-day=5700$/;"	k	section:redshift
dbe	.config/picom.conf	/^dbe = false;$/;"	k
dd	nvim/autoload/plug.vim	/^      nmap     <silent> <buffer> dd d_$/;"	m
de64_args	nvim/autoload/plugged/editorconfig-vim/tests/core/ecvimlib.ps1	/^function de64_args($argv) {$/;"	f
debug	nvim/autoload/plugged/editorconfig-vim/tests/core/ecvimlib.ps1	/^    $global:debug="${DIR}\/${global:debug}"$/;"	v
debug	nvim/autoload/plugged/editorconfig-vim/tests/core/ecvimlib.ps1	/^$global:debug=$env:EDITORCONFIG_DEBUG  # Debug filename$/;"	v
default	nvim/autoload/plugged/sonokai/alacritty/README.md	/^## default$/;"	s	chapter:Installation
default_nettype_value	nvim/autoload/plugged/nvim-treesitter/queries/verilog/highlights.scm	/^ (default_nettype_value) @string)$/;"	f
dein.vim	nvim/autoload/plugged/neosnippet.vim/README.md	/^### dein.vim$/;"	S	section:Neosnippet""Installation
delay	.bin/rofr	/^delay() {$/;"	f
delay	.bin/rofr.sh	/^delay() {$/;"	f
delta	.config/picom.conf	/^fade-delta = 3;$/;"	k
dependencies	nvim/autoload/plugged/vim-snippets/addon-info.json	/^  "dependencies" : {$/;"	o
description	nvim/autoload/plugged/vim-snippets/addon-info.json	/^  "description" : "community driven set of snippets for snipmate"$/;"	s
devicons#plugins#ctrlp#init	nvim/autoload/plugged/vim-devicons/autoload/devicons/plugins/ctrlp.vim	/^function! devicons#plugins#ctrlp#init() abort$/;"	f
devicons#plugins#denite#init	nvim/autoload/plugged/vim-devicons/autoload/devicons/plugins/denite.vim	/^function! devicons#plugins#denite#init() abort$/;"	f
devicons#plugins#flagship#init	nvim/autoload/plugged/vim-devicons/autoload/devicons/plugins/flagship.vim	/^function! devicons#plugins#flagship#init() abort$/;"	f
devicons#plugins#startify#init	nvim/autoload/plugged/vim-devicons/autoload/devicons/plugins/startify.vim	/^function! devicons#plugins#startify#init() abort$/;"	f
devicons#plugins#unite#init	nvim/autoload/plugged/vim-devicons/autoload/devicons/plugins/unite.vim	/^function! devicons#plugins#unite#init() abort$/;"	f
devicons#plugins#vimfiler#init	nvim/autoload/plugged/vim-devicons/autoload/devicons/plugins/vimfiler.vim	/^function! devicons#plugins#vimfiler#init() abort$/;"	f
diagnostic-nvim	nvim/autoload/plugged/diagnostic-nvim/README.md	/^# diagnostic-nvim$/;"	c
diagnostic.enableHighlightLineNumber	.config/nvim/coc-settings.json	/^  "diagnostic.enableHighlightLineNumber": true,$/;"	b
diagnostic.errorSign	.config/nvim/coc-settings.json	/^  "diagnostic.errorSign": "✗ ",$/;"	s
diagnostic.format	.config/nvim/coc-settings.json	/^  "diagnostic.format": "[%severity] %message [%source%code] ",$/;"	s
diagnostic.hintSign	.config/nvim/coc-settings.json	/^  "diagnostic.hintSign": " ",$/;"	s
diagnostic.infoSign	.config/nvim/coc-settings.json	/^  "diagnostic.infoSign": " ",$/;"	s
diagnostic.refreshOnInsertMode	.config/nvim/coc-settings.json	/^  "diagnostic.refreshOnInsertMode": true,$/;"	b
diagnostic.virtualText	.config/nvim/coc-settings.json	/^  "diagnostic.virtualText": true, \/\/ this won't work with codelens when error on same line$/;"	b
diagnostic.warningSign	.config/nvim/coc-settings.json	/^  "diagnostic.warningSign": "▲ ",$/;"	s
diagnosticls	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## diagnosticls$/;"	s	chapter:Configurations
dirname	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/util.lua	/^    dirname = function(path)$/;"	f
disable_all	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^local function disable_all(mod)$/;"	f
disable_mod_conf_autocmd	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^local function disable_mod_conf_autocmd(mod)$/;"	f
disable_module	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^local function disable_module(mod, bufnr)$/;"	f
display_width	nvim/autoload/plugged/vim-snippets/pythonx/vimsnippets.py	/^def display_width(str):$/;"	f
do_check	nvim/autoload/plugged/nvim-treesitter/scripts/check-queries.lua	/^local function do_check()$/;"	f
dockerls	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## dockerls$/;"	s	chapter:Configurations
dots	README.md	/^# dots$/;"	c
editorconfig	nvim/autoload/plugged/editorconfig-vim/plugin/editorconfig.vim	/^    augroup editorconfig$/;"	a
editorconfig#AddNewHook	nvim/autoload/plugged/editorconfig-vim/autoload/editorconfig.vim	/^function! editorconfig#AddNewHook(func) " {{{1$/;"	f
editorconfig#ApplyHooks	nvim/autoload/plugged/editorconfig-vim/autoload/editorconfig.vim	/^function! editorconfig#ApplyHooks(config) abort " {{{1$/;"	f
editorconfig-core-test	nvim/autoload/plugged/editorconfig-vim/tests/core/tests/CMakeLists.txt	/^project(editorconfig-core-test NONE)$/;"	p
editorconfig-core-vimscript	nvim/autoload/plugged/editorconfig-vim/tests/core/CMakeLists.txt	/^project(editorconfig-core-vimscript NONE)$/;"	p
editorconfig_core#currbuf_cli	nvim/autoload/plugged/editorconfig-vim/autoload/editorconfig_core.vim	/^function! editorconfig_core#currbuf_cli(names, job) " out_name, in_name, ...$/;"	f
editorconfig_core#fnmatch#fnmatch	nvim/autoload/plugged/editorconfig-vim/autoload/editorconfig_core/fnmatch.vim	/^function! editorconfig_core#fnmatch#fnmatch(name, path, pattern)$/;"	f
editorconfig_core#fnmatch#fnmatchcase	nvim/autoload/plugged/editorconfig-vim/autoload/editorconfig_core/fnmatch.vim	/^function! editorconfig_core#fnmatch#fnmatchcase(name, path, pattern)$/;"	f
editorconfig_core#fnmatch#translate	nvim/autoload/plugged/editorconfig-vim/autoload/editorconfig_core/fnmatch.vim	/^function! editorconfig_core#fnmatch#translate(pat, ...)$/;"	f
editorconfig_core#handler#get_configurations	nvim/autoload/plugged/editorconfig-vim/autoload/editorconfig_core/handler.vim	/^function! editorconfig_core#handler#get_configurations(job)$/;"	f
editorconfig_core#ini#read_ini_file	nvim/autoload/plugged/editorconfig-vim/autoload/editorconfig_core/ini.vim	/^function! editorconfig_core#ini#read_ini_file(config_filename, target_filename)$/;"	f
editorconfig_core#util#Separator	nvim/autoload/plugged/editorconfig-vim/autoload/editorconfig_core/util.vim	/^function! editorconfig_core#util#Separator()$/;"	f
editorconfig_core#util#is_win	nvim/autoload/plugged/editorconfig-vim/autoload/editorconfig_core/util.vim	/^function! editorconfig_core#util#is_win()$/;"	f
editorconfig_core#util#path_join	nvim/autoload/plugged/editorconfig-vim/autoload/editorconfig_core/util.vim	/^function! editorconfig_core#util#path_join(a, b)$/;"	f
editorconfig_core#util#strip	nvim/autoload/plugged/editorconfig-vim/autoload/editorconfig_core/util.vim	/^function! editorconfig_core#util#strip(s)$/;"	f
editorconfig_core#version	nvim/autoload/plugged/editorconfig-vim/autoload/editorconfig_core.vim	/^function! editorconfig_core#version()$/;"	f
editorconfig_dosini	nvim/autoload/plugged/editorconfig-vim/plugin/editorconfig.vim	/^augroup editorconfig_dosini$/;"	a
editorconfig_trim_trailing_whitespace	nvim/autoload/plugged/editorconfig-vim/plugin/editorconfig.vim	/^    augroup editorconfig_trim_trailing_whitespace$/;"	a
efm	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## efm$/;"	s	chapter:Configurations
elixirls	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## elixirls$/;"	s	chapter:Configurations
elm	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	o
elmls	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## elmls$/;"	s	chapter:Configurations
enable_all	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^local function enable_all(mod)$/;"	f
enable_mod_conf_autocmd	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^local function enable_mod_conf_autocmd(mod)$/;"	f
enable_module	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^local function enable_module(mod, bufnr, lang)$/;"	f
environment	nvim/autoload/plugged/vim-airline/.github/ISSUE_TEMPLATE.md	/^#### environment$/;"	t
ep_out	nvim/autoload/plugged/editorconfig-vim/tests/core/tests/cmake/runandsort.cmake	/^        set(ep_out "${ep_stderr}")$/;"	v	function:run_and_sort
ep_out	nvim/autoload/plugged/editorconfig-vim/tests/core/tests/cmake/runandsort.cmake	/^        set(ep_out "${ep_stdout}")$/;"	v	function:run_and_sort
error	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/query_predicates.lua	/^local function error(str)$/;"	f
eslint	nvim/lua/_formatter.lua	/^  eslint = function()$/;"	f
eslint.autoFixOnSave	.config/nvim/coc-settings.json	/^  "eslint.autoFixOnSave": true,$/;"	b
eslint.filetypes	.config/nvim/coc-settings.json	/^  "eslint.filetypes": [$/;"	a
exact_match	nvim/autoload/plugged/completion-nvim/lua/completion/matching.lua	/^local function exact_match(prefix, word)$/;"	f
excape_markdown_punctuations	nvim/autoload/plugged/nvim-lspconfig/scripts/docgen.lua	/^                    local function excape_markdown_punctuations(str)$/;"	f
exclude	.config/picom.conf	/^blur-background-exclude = [$/;"	k
exclude	.config/picom.conf	/^fade-exclude = [ ];$/;"	k
exclude	.config/picom.conf	/^focus-exclude = [ ];$/;"	k
exclude	.config/picom.conf	/^shadow-exclude = [$/;"	k
exclude	.config/picom/picom.conf	/^shadow-exclude = [$/;"	k
exclude	.config/picom/picom_rounded_corners.conf	/^rounded-corners-exclude = [$/;"	k
exclude	.config/picom/picom_rounded_corners.conf	/^shadow-exclude = ["window_type = 'dock'", "name = 'GLava'", "name = 'Kotatogram'", "name = 'Fire/;"	k
exists	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/util.lua	/^  local function exists(filename)$/;"	f
exit	nvim/autoload/plugged/minimap.vim/bin/minimap_generator.bat	/^:exit$/;"	l
expected behavior	nvim/autoload/plugged/vim-airline/.github/ISSUE_TEMPLATE.md	/^#### expected behavior$/;"	t
extra_info	nvim/autoload/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^                $extra_info = $argv[$idx]$/;"	v
extra_info	nvim/autoload/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^$extra_info = ''$/;"	v
extract_captures	nvim/autoload/plugged/nvim-treesitter/scripts/check-queries.lua	/^local function extract_captures()$/;"	f
fading	.config/picom.conf	/^fading = true;$/;"	k
fading	.config/picom/picom_rounded_corners.conf	/^fading = false;$/;"	k
fallback	.config/polybar/bars.ini	/^monitor-fallback = HDMI-0$/;"	k	section:bar/main
fallback	polybar/bars.ini	/^monitor-fallback =HDMI-0$/;"	k	section:bar/main
fancy_floating_markdown	nvim/autoload/plugged/completion-nvim/lua/completion/hover.lua	/^local fancy_floating_markdown = function(contents, opts)$/;"	f
fence	.config/picom.conf	/^xrender-sync-fence = true;$/;"	k
fennel	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	o
file	nvim/autoload/plugged/minimap.vim/bin/minimap_generator.bat	/^set file=%4$/;"	v
files	nvim/autoload/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^$files=@()$/;"	v
filetypedetect	nvim/autoload/plug.vim	/^        augroup filetypedetect$/;"	a
filter	nvim/autoload/plugged/vim-devicons/rplugin/python3/denite/filter/devicons_denite_converter.py	/^	def filter(self, context):$/;"	m	class:Filter
find_dart_sdk_root_path	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/dartls.lua	/^local find_dart_sdk_root_path = function()$/;"	f
find_window_by_var	nvim/autoload/plugged/completion-nvim/lua/completion/hover.lua	/^local function find_window_by_var(name, value)$/;"	f
fixed	.config/picom.conf	/^blur-background-fixed = false;$/;"	k
flow	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## flow$/;"	s	chapter:Configurations
fn	nvim/autoload/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^$fn=[System.IO.Path]::GetTempFileName();$/;"	v
focused	.config/picom.conf	/^mark-ovredir-focused = true;$/;"	k
focused	.config/picom.conf	/^mark-wmwin-focused = true;$/;"	k
foldmarker	nvim/autoload/plugged/vim-snippets/pythonx/vimsnippets.py	/^def foldmarker():$/;"	f
folds_levels	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/fold.lua	/^local folds_levels = utils.memoize_by_buf_tick(function(bufnr)$/;"	f
foreground	.config/polybar/base.ini	/^foreground = ${colors.foreground}$/;"	k	section:section/base
foreground	.config/polybar/colors.ini	/^foreground = ${xrdb:foreground}$/;"	k	section:colors
foreground	.config/polybar/modules.ini	/^format-foreground = ${colors.color5}$/;"	k	section:module/cpu
foreground	.config/polybar/modules.ini	/^format-foreground = ${colors.color5}$/;"	k	section:module/memory
foreground	.config/polybar/modules.ini	/^format-foreground = ${colors.foreground}$/;"	k	section:module/date
foreground	.config/polybar/modules.ini	/^label-dimmed-foreground = ${colors.color0}$/;"	k	section:module/bspwm
foreground	.config/polybar/modules.ini	/^label-focused-foreground = ${colors.color14}$/;"	k	section:module/bspwm
foreground	.config/polybar/modules.ini	/^label-foreground = ${colors.color14}$/;"	k	section:module/date
foreground	.config/polybar/modules.ini	/^label-foreground = ${colors.foreground}$/;"	k	section:module/cpu
foreground	.config/polybar/modules.ini	/^label-foreground = ${colors.foreground}$/;"	k	section:module/memory
foreground	.config/polybar/modules.ini	/^label-foreground = ${colors.foreground}$/;"	k	section:module/mic
foreground	.config/polybar/modules.ini	/^label-muted-foreground = #666$/;"	k	section:module/mic
foreground	.config/polybar/modules.ini	/^label-urgent-foreground = ${colors.color1}$/;"	k	section:module/bspwm
foreground	.config/polybar/modules.ini	/^label-volume-foreground = ${colors.color14}$/;"	k	section:module/mic
foreground	polybar/base.ini	/^foreground = ${colors.foreground}$/;"	k	section:section/base
foreground	polybar/colors.ini	/^foreground = ${xrdb:foreground}$/;"	k	section:colors
foreground	polybar/modules.ini	/^format-foreground = ${colors.color5}$/;"	k	section:module/cpu
foreground	polybar/modules.ini	/^format-foreground = ${colors.color5}$/;"	k	section:module/memory
foreground	polybar/modules.ini	/^format-foreground = ${colors.foreground}$/;"	k	section:module/date
foreground	polybar/modules.ini	/^label-dimmed-foreground = ${colors.color0}$/;"	k	section:module/bspwm
foreground	polybar/modules.ini	/^label-focused-foreground = ${colors.color14}$/;"	k	section:module/bspwm
foreground	polybar/modules.ini	/^label-foreground = ${colors.color14}$/;"	k	section:module/date
foreground	polybar/modules.ini	/^label-foreground = ${colors.foreground}$/;"	k	section:module/cpu
foreground	polybar/modules.ini	/^label-foreground = ${colors.foreground}$/;"	k	section:module/memory
foreground	polybar/modules.ini	/^label-urgent-foreground = ${colors.color1}$/;"	k	section:module/bspwm
format	.config/polybar/modules.ini	/^format = <label-state> <label-mode>$/;"	k	section:module/bspwm
format	.config/polybar/modules.ini	/^format =  <label>$/;"	k	section:module/date
format	.config/polybar/modules.ini	/^format =  <label>$/;"	k	section:module/cpu
format	.config/polybar/modules.ini	/^format =  <label>$/;"	k	section:module/memory
format	polybar/modules.ini	/^format = <label-state> <label-mode>$/;"	k	section:module/bspwm
format	polybar/modules.ini	/^format =  <label>$/;"	k	section:module/date
format	polybar/modules.ini	/^format =  <label>$/;"	k	section:module/cpu
format	polybar/modules.ini	/^format =  <label>$/;"	k	section:module/memory
formatter.format	nvim/autoload/plugged/formatter.nvim/lua/format/formatter.lua	/^function formatter.format(args, startLine, endLine)$/;"	f
formatter.internalFormatter	nvim/autoload/plugged/formatter.nvim/lua/format/formatter.lua	/^function formatter.internalFormatter(userFmtTable, startLine, endLine)$/;"	f
formatter.nvim	nvim/autoload/plugged/formatter.nvim/README.md	/^# formatter.nvim$/;"	c
formatter.startTask	nvim/autoload/plugged/formatter.nvim/lua/format/formatter.lua	/^function formatter.startTask(name, conf, startLine, endLine)$/;"	f
fortls	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## fortls$/;"	s	chapter:Configurations
friendly_name	nvim/autoload/plugged/vim-rooter/test/runner.vim	/^  let friendly_name = substitute(test[5:-3], '_', ' ', 'g')$/;"	v
front	.config/picom.conf	/^glx-copy-from-front = false;$/;"	k
front	.config/picom/picom_rounded_corners.conf	/^glx-copy-from-front = false;$/;"	k
fuzzy_match	nvim/autoload/plugged/completion-nvim/lua/completion/matching.lua	/^local function fuzzy_match(prefix, word)$/;"	f
fzf :heart: vim	nvim/autoload/plugged/fzf.vim/README.md	/^fzf :heart: vim$/;"	c
fzf#complete	nvim/autoload/plugged/fzf.vim/plugin/fzf.vim	/^function! fzf#complete(...)$/;"	f
fzf#vim#_buflisted_sorted	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#_buflisted_sorted()$/;"	f
fzf#vim#_format_buffer	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#_format_buffer(b)$/;"	f
fzf#vim#_lines	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#_lines(all)$/;"	f
fzf#vim#_recent_files	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#_recent_files()$/;"	f
fzf#vim#_uniq	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#_uniq(list)$/;"	f
fzf#vim#ag	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#ag(query, ...)$/;"	f
fzf#vim#ag_raw	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#ag_raw(command_suffix, ...)$/;"	f
fzf#vim#buffer_commits	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#buffer_commits(...)$/;"	f
fzf#vim#buffer_lines	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#buffer_lines(...)$/;"	f
fzf#vim#buffer_tags	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#buffer_tags(query, ...)$/;"	f
fzf#vim#buffers	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#buffers(...)$/;"	f
fzf#vim#colors	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#colors(...)$/;"	f
fzf#vim#command_history	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#command_history(...)$/;"	f
fzf#vim#commands	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#commands(...)$/;"	f
fzf#vim#commits	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#commits(...)$/;"	f
fzf#vim#complete	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#complete(...)$/;"	f
fzf#vim#complete#buffer_line	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! fzf#vim#complete#buffer_line(...)$/;"	f
fzf#vim#complete#line	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! fzf#vim#complete#line(...)$/;"	f
fzf#vim#complete#path	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! fzf#vim#complete#path(command, ...)$/;"	f
fzf#vim#complete#word	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! fzf#vim#complete#word(...)$/;"	f
fzf#vim#files	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#files(dir, ...)$/;"	f
fzf#vim#filetypes	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#filetypes(...)$/;"	f
fzf#vim#gitfiles	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#gitfiles(args, ...)$/;"	f
fzf#vim#grep	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#grep(grep_command, has_column, ...)$/;"	f
fzf#vim#helptags	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#helptags(...)$/;"	f
fzf#vim#history	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#history(...)$/;"	f
fzf#vim#lines	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#lines(...)$/;"	f
fzf#vim#locate	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#locate(query, ...)$/;"	f
fzf#vim#maps	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#maps(mode, ...)$/;"	f
fzf#vim#marks	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#marks(...)$/;"	f
fzf#vim#search_history	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#search_history(...)$/;"	f
fzf#vim#snippets	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#snippets(...)$/;"	f
fzf#vim#tags	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#tags(query, ...)$/;"	f
fzf#vim#windows	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#windows(...)$/;"	f
fzf#vim#with_preview	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#with_preview(...)$/;"	f
fzf_buffers	nvim/autoload/plugged/fzf.vim/plugin/fzf.vim	/^augroup fzf_buffers$/;"	a
g#	nvim/autoload/plugged/incsearch.vim/test/autonohlsearch.vim	/^  map g# <Plug>(incsearch-nohl-g#)$/;"	m
g#	nvim/autoload/plugged/incsearch.vim/test/autonohlsearch.vim	/^  noremap g# g#$/;"	m
g*	nvim/autoload/plugged/incsearch.vim/test/autonohlsearch.vim	/^  map g* <Plug>(incsearch-nohl-g*)$/;"	m
g*	nvim/autoload/plugged/incsearch.vim/test/autonohlsearch.vim	/^  noremap g* g*$/;"	m
g/	.config/nvim/configs/incsearch.vim	/^map g\/ <Plug>(incsearch-stay)$/;"	m
g/	nvim/autoload/plugged/incsearch.vim/test/autonohlsearch.vim	/^  map g\/ <Plug>(incsearch-stay)$/;"	m
g/	nvim/autoload/plugged/incsearch.vim/test/cancel.vim	/^  map g\/ <Plug>(incsearch-stay)$/;"	m
g/	nvim/autoload/plugged/incsearch.vim/test/count.vim	/^map g\/ <Plug>(incsearch-stay)$/;"	m
g/	nvim/autoload/plugged/incsearch.vim/test/default_behaviors.vim	/^  map g\/ <Plug>(incsearch-stay)$/;"	m
g/	nvim/autoload/plugged/incsearch.vim/test/default_behaviors.vim	/^map g\/ <Plug>(incsearch-stay)$/;"	m
g/	nvim/autoload/plugged/incsearch.vim/test/error_warning_emulation.vim	/^  map g\/ <Plug>(incsearch-stay)$/;"	m
g/	nvim/autoload/plugged/incsearch.vim/test/fold.vim	/^  map g\/ <Plug>(incsearch-stay)$/;"	m
g/	nvim/autoload/plugged/incsearch.vim/test/fold.vim	/^map g\/ <Plug>(incsearch-stay)$/;"	m
g/	nvim/autoload/plugged/incsearch.vim/test/highlight.vim	/^  map g\/ <Plug>(incsearch-stay)$/;"	m
g/	nvim/autoload/plugged/incsearch.vim/test/history.vim	/^  map g\/ <Plug>(incsearch-stay)$/;"	m
g/	nvim/autoload/plugged/incsearch.vim/test/incremental_next_prev.vim	/^  map g\/ <Plug>(incsearch-stay)$/;"	m
g/	nvim/autoload/plugged/incsearch.vim/test/insert_register.vim	/^  map g\/ <Plug>(incsearch-stay)$/;"	m
g/	nvim/autoload/plugged/incsearch.vim/test/jumplist.vim	/^  map g\/ <Plug>(incsearch-stay)$/;"	m
g/	nvim/autoload/plugged/incsearch.vim/test/magic_option.vim	/^  map g\/ <Plug>(incsearch-stay)$/;"	m
g/	nvim/autoload/plugged/incsearch.vim/test/module.vim	/^  map g\/ <Plug>(incsearch-stay)$/;"	m
g/	nvim/autoload/plugged/incsearch.vim/test/n_and_N.vim	/^  map g\/ <Plug>(incsearch-stay)$/;"	m
g/	nvim/autoload/plugged/incsearch.vim/test/nomagic.vim	/^  map g\/ <Plug>(incsearch-stay)$/;"	m
g/	nvim/autoload/plugged/incsearch.vim/test/nomagic.vim	/^map g\/ <Plug>(incsearch-stay)$/;"	m
g/	nvim/autoload/plugged/incsearch.vim/test/operator_pending_behavior.vim	/^  map g\/ <Plug>(incsearch-stay)$/;"	m
g/	nvim/autoload/plugged/incsearch.vim/test/operator_pending_behavior.vim	/^map g\/ <Plug>(incsearch-stay)$/;"	m
g/	nvim/autoload/plugged/incsearch.vim/test/register.vim	/^map g\/ <Plug>(incsearch-stay)$/;"	m
g/	nvim/autoload/plugged/incsearch.vim/test/repetition.vim	/^  map g\/ <Plug>(incsearch-stay)$/;"	m
g/	nvim/autoload/plugged/incsearch.vim/test/scroll.vim	/^  map g\/ <Plug>(incsearch-stay)$/;"	m
g/	nvim/autoload/plugged/incsearch.vim/test/visual_behavior.vim	/^  map g\/ <Plug>(incsearch-stay)$/;"	m
g/	nvim/configs/incsearch.vim	/^map g\/ <Plug>(incsearch-stay)$/;"	m
g:	nvim/autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^    let g:[a:var] = get(g:, a:var, a:value)$/;"	v
g:	nvim/autoload/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^            let g:[newname] = g:[key]$/;"	v
g:CtrlSpaceStatuslineFunction	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/ctrlspace.vim	/^  let g:CtrlSpaceStatuslineFunction = "airline#extensions#ctrlspace#statusline()"$/;"	v
g:DevIconsEnableFolderExtensionPatternMatching	nvim/autoload/plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^  let g:DevIconsEnableFolderExtensionPatternMatching = 0$/;"	v
g:DevIconsEnableFolderPatternMatching	nvim/autoload/plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^  let g:DevIconsEnableFolderPatternMatching = 1$/;"	v
g:DevIconsEnableFoldersOpenClose	nvim/autoload/plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^  let g:DevIconsEnableFoldersOpenClose = 0$/;"	v
g:DevIconsEnableNERDTreeRedraw	nvim/autoload/plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^    let g:DevIconsEnableNERDTreeRedraw = 0$/;"	v
g:DevIconsEnableNERDTreeRedraw	nvim/autoload/plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^    let g:DevIconsEnableNERDTreeRedraw = 1$/;"	v
g:EditorConfig_disable_rules	nvim/autoload/plugged/editorconfig-vim/plugin/editorconfig.vim	/^    let g:EditorConfig_disable_rules = []$/;"	v
g:EditorConfig_exclude_patterns	nvim/autoload/plugged/editorconfig-vim/plugin/editorconfig.vim	/^    let g:EditorConfig_exclude_patterns = []$/;"	v
g:EditorConfig_exec_path	nvim/autoload/plugged/editorconfig-vim/plugin/editorconfig.vim	/^    let g:EditorConfig_exec_path = ''$/;"	v
g:EditorConfig_max_line_indicator	nvim/autoload/plugged/editorconfig-vim/plugin/editorconfig.vim	/^    let g:EditorConfig_max_line_indicator = 'line'$/;"	v
g:EditorConfig_preserve_formatoptions	nvim/autoload/plugged/editorconfig-vim/plugin/editorconfig.vim	/^    let g:EditorConfig_preserve_formatoptions = 0$/;"	v
g:EditorConfig_verbose	nvim/autoload/plugged/editorconfig-vim/plugin/editorconfig.vim	/^    let g:EditorConfig_verbose = 0$/;"	v
g:Lf_StlColorscheme	nvim/autoload/plugged/sonokai/colors/sonokai.vim	/^  let g:Lf_StlColorscheme = 'one'$/;"	v
g:NERDTreeQuitOnOpen	.config/nvim/configs/nerdtree.vim	/^let g:NERDTreeQuitOnOpen = 1$/;"	v
g:VM_Cursor_hl	nvim/autoload/plugged/sonokai/colors/sonokai.vim	/^let g:VM_Cursor_hl = 'Cursor'$/;"	v
g:VM_Extend_hl	nvim/autoload/plugged/sonokai/colors/sonokai.vim	/^let g:VM_Extend_hl = 'Visual'$/;"	v
g:VM_Insert_hl	nvim/autoload/plugged/sonokai/colors/sonokai.vim	/^let g:VM_Insert_hl = 'Cursor'$/;"	v
g:VM_Mono_hl	nvim/autoload/plugged/sonokai/colors/sonokai.vim	/^let g:VM_Mono_hl = 'Cursor'$/;"	v
g:WebDevIconsUnicodeDecorateFileNodesExactSymbols	nvim/autoload/plugged/vim-devicons/plugin/webdevicons.vim	/^      let g:WebDevIconsUnicodeDecorateFileNodesExactSymbols[key] = val$/;"	v
g:WebDevIconsUnicodeDecorateFileNodesExactSymbols	nvim/autoload/plugged/vim-devicons/plugin/webdevicons.vim	/^    let g:WebDevIconsUnicodeDecorateFileNodesExactSymbols = {}$/;"	v
g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols	nvim/autoload/plugged/vim-devicons/plugin/webdevicons.vim	/^      let g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols[key] = val$/;"	v
g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols	nvim/autoload/plugged/vim-devicons/plugin/webdevicons.vim	/^    let g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols = {}$/;"	v
g:WebDevIconsUnicodeDecorateFileNodesPatternSymbols	nvim/autoload/plugged/vim-devicons/plugin/webdevicons.vim	/^      let g:WebDevIconsUnicodeDecorateFileNodesPatternSymbols[key] = val$/;"	v
g:WebDevIconsUnicodeDecorateFileNodesPatternSymbols	nvim/autoload/plugged/vim-devicons/plugin/webdevicons.vim	/^    let g:WebDevIconsUnicodeDecorateFileNodesPatternSymbols = {}$/;"	v
g:__fzf_command	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^    let g:__fzf_command = "normal ".prefix.item."\\<cr>"$/;"	v
g:__gutentags_vim_is_leaving	nvim/autoload/plugged/vim-gutentags/autoload/gutentags.vim	/^    let g:__gutentags_vim_is_leaving = 1$/;"	v
g:__gutentags_vim_is_leaving	nvim/autoload/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:__gutentags_vim_is_leaving = 0$/;"	v
g:_plug_bang	nvim/autoload/plug.vim	/^    let g:_plug_bang = (s:is_win && has('gui_running') ? 'silent ' : '').'!'.escape(cmd, '#!%')$/;"	v
g:_webdevicons_airline_orig_formatter	nvim/autoload/plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:_webdevicons_airline_orig_formatter = get(g:, 'airline#extensions#tabline#formatter', 'd/;"	v
g:airline#extensions#coc#enabled	.config/nvim/themes/airline.vim	/^let g:airline#extensions#coc#enabled = 1$/;"	v
g:airline#extensions#default#layout	.config/nvim/themes/airline.vim	/^let g:airline#extensions#default#layout = [['a', 'b', 'c'], ['x', 'z', 'warning', 'error']]$/;"	v
g:airline#extensions#default#layout	nvim/autoload/plugged/vim-airline/t/extensions_default.vim	/^let g:airline#extensions#default#layout = [$/;"	v
g:airline#extensions#example#number_of_cats	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/example.vim	/^  let g:airline#extensions#example#number_of_cats = 42$/;"	v
g:airline#extensions#localsearch#inverted	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/localsearch.vim	/^let g:airline#extensions#localsearch#inverted = get(g:, 'airline#extensions#localsearch#inverted/;"	v
g:airline#extensions#localsearch#loaded	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/localsearch.vim	/^let g:airline#extensions#localsearch#loaded = 001$/;"	v
g:airline#extensions#obsession#indicator_text	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/obsession.vim	/^  let g:airline#extensions#obsession#indicator_text = '$'$/;"	v
g:airline#extensions#quickfix#location_text	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/quickfix.vim	/^  let g:airline#extensions#quickfix#location_text = 'Location'$/;"	v
g:airline#extensions#quickfix#quickfix_text	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/quickfix.vim	/^  let g:airline#extensions#quickfix#quickfix_text = 'Quickfix'$/;"	v
g:airline#extensions#tabline#enabled	nvim/autoload/plugged/vim-airline/t/extensions_tabline.vim	/^let g:airline#extensions#tabline#enabled = 1$/;"	v
g:airline#extensions#tabline#exclude_buffers	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        let g:airline#extensions#tabline#exclude_buffers = []$/;"	v
g:airline#extensions#tabline#exclude_buffers	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    let g:airline#extensions#tabline#exclude_buffers = []$/;"	v
g:airline#extensions#tabline#formatter	nvim/autoload/plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:airline#extensions#tabline#formatter = 'webdevicons'$/;"	v
g:airline#extensions#tabline#show_tabs	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        let g:airline#extensions#tabline#show_tabs = 0$/;"	v
g:airline#extensions#tabline#show_tabs	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        let g:airline#extensions#tabline#show_tabs = 1$/;"	v
g:airline#extensions#whitespace#enabled	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^    let g:airline#extensions#whitespace#enabled = s:enabled$/;"	v
g:airline#extensions#windowswap#indicator_text	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/windowswap.vim	/^  let g:airline#extensions#windowswap#indicator_text = 'WS'$/;"	v
g:airline#extensions#wordcount#filetypes	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^  let g:airline#extensions#wordcount#filetypes = filetypes$/;"	v
g:airline#highlighter#normal_fg_hi	nvim/autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^    let g:airline#highlighter#normal_fg_hi = synIDattr(synIDtrans(hlID('Normal')), 'fg', 'cterm'/;"	v
g:airline#init#bootstrapping	nvim/autoload/plugged/vim-airline/autoload/airline/init.vim	/^  let g:airline#init#bootstrapping = 1$/;"	v
g:airline#init#is_windows	nvim/autoload/plugged/vim-airline/autoload/airline/init.vim	/^  let g:airline#init#is_windows = has('win32') || has('win64')$/;"	v
g:airline#init#vim_async	nvim/autoload/plugged/vim-airline/autoload/airline/init.vim	/^  let g:airline#init#vim_async = (v:version >= 800 && has('job'))$/;"	v
g:airline#themes#dark#palette	nvim/autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^  let g:airline#themes#dark#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#dark#palette	nvim/autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette = {}$/;"	v
g:airline#themes#dark#palette	nvim/autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.accents = {$/;"	v
g:airline#themes#dark#palette	nvim/autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.commandline = airline#themes#generate_color_map(s:airline_a_co/;"	v
g:airline#themes#dark#palette	nvim/autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.inactive = airline#themes#generate_color_map(s:airline_a_inact/;"	v
g:airline#themes#dark#palette	nvim/autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.inactive_modified = {$/;"	v
g:airline#themes#dark#palette	nvim/autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.insert = airline#themes#generate_color_map(s:airline_a_insert,/;"	v
g:airline#themes#dark#palette	nvim/autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.insert_modified = {$/;"	v
g:airline#themes#dark#palette	nvim/autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.insert_paste = {$/;"	v
g:airline#themes#dark#palette	nvim/autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.normal = airline#themes#generate_color_map(s:airline_a_normal,/;"	v
g:airline#themes#dark#palette	nvim/autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.normal_modified = {$/;"	v
g:airline#themes#dark#palette	nvim/autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.replace = copy(g:airline#themes#dark#palette.insert)$/;"	v
g:airline#themes#dark#palette	nvim/autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.replace.airline_a = [ s:airline_b_insert[0]   , '#af0000' , s:/;"	v
g:airline#themes#dark#palette	nvim/autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.replace_modified = g:airline#themes#dark#palette.insert_modifi/;"	v
g:airline#themes#dark#palette	nvim/autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.terminal = airline#themes#generate_color_map(s:airline_a_inser/;"	v
g:airline#themes#dark#palette	nvim/autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.visual = airline#themes#generate_color_map(s:airline_a_visual,/;"	v
g:airline#themes#dark#palette	nvim/autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.visual_modified = {$/;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette = {}$/;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.accents = {$/;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.commandline = airline#themes#generate_color_map(s:R1, s:R2,/;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.commandline.airline_error = [ s:error_fg[0] , s:error_bg[0]/;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.commandline.airline_error_inactive = [ s:error_fg[0] , s:er/;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.commandline.airline_error_red = [ s:error_fg[0] , s:error_b/;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.commandline.airline_term = [ s:term_fg[0] , s:term_bg[0] , /;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.commandline.airline_warning = [ s:warning_fg[0] , s:warning/;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.commandline.airline_warning_inactive = [ s:warning_fg[0] , /;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.commandline.airline_warning_red = [ s:warning_fg[0] , s:war/;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.commandline_modified = deepcopy(g:airline#themes#sonokai#pa/;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.commandline_modified.airline_c = [ s:commandline_mod_fg[0] /;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, /;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.inactive_modified = deepcopy(g:airline#themes#sonokai#palet/;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.inactive_modified.airline_c = [ s:inactive_mod_fg[0] , s:in/;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3/;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.insert.airline_error = [ s:error_fg[0] , s:error_bg[0] , s:/;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.insert.airline_error_inactive = [ s:error_fg[0] , s:error_b/;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.insert.airline_error_red = [ s:error_fg[0] , s:error_bg[0] /;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.insert.airline_term = [ s:term_fg[0] , s:term_bg[0] , s:ter/;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.insert.airline_warning = [ s:warning_fg[0] , s:warning_bg[0/;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.insert.airline_warning_inactive = [ s:warning_fg[0] , s:war/;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.insert.airline_warning_red = [ s:warning_fg[0] , s:warning_/;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.insert_modified = deepcopy(g:airline#themes#sonokai#palette/;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.insert_modified.airline_c = [ s:insert_mod_fg[0] , s:insert/;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3/;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.normal.airline_error = [ s:error_fg[0] , s:error_bg[0] , s:/;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.normal.airline_error_inactive = [ s:error_fg[0] , s:error_b/;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.normal.airline_error_red = [ s:error_fg[0] , s:error_bg[0] /;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.normal.airline_term = [ s:term_fg[0] , s:term_bg[0] , s:ter/;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.normal.airline_warning = [ s:warning_fg[0] , s:warning_bg[0/;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.normal.airline_warning_inactive = [ s:warning_fg[0] , s:war/;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.normal.airline_warning_red = [ s:warning_fg[0] , s:warning_/;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.normal_modified = deepcopy(g:airline#themes#sonokai#palette/;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.normal_modified.airline_c = [ s:normal_mod_fg[0] , s:normal/;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R/;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.replace.airline_error = [ s:error_fg[0] , s:error_bg[0] , s/;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.replace.airline_error_inactive = [ s:error_fg[0] , s:error_/;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.replace.airline_error_red = [ s:error_fg[0] , s:error_bg[0]/;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.replace.airline_term = [ s:term_fg[0] , s:term_bg[0] , s:te/;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.replace.airline_warning = [ s:warning_fg[0] , s:warning_bg[/;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.replace.airline_warning_inactive = [ s:warning_fg[0] , s:wa/;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.replace.airline_warning_red = [ s:warning_fg[0] , s:warning/;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.replace_modified = deepcopy(g:airline#themes#sonokai#palett/;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.replace_modified.airline_c = [ s:replace_mod_fg[0] , s:repl/;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.tabline = {}$/;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.tabline.airline_tabfill = [ s:tab_mid_fg[0] , s:tab_mid_bg[/;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.tabline.airline_tabhid = s:IA1$/;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.tabline.airline_tablabel = [ s:tab_label_fg[0] , s:tab_labe/;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.tabline.airline_tablabel_right = [ s:tab_label_fg[0] , s:ta/;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.tabline.airline_tabmod = [ s:tab_mod_fg[0] , s:tab_mod_bg[0/;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.tabline.airline_tabsel = [ s:tab_sel_fg[0] , s:tab_sel_bg[0/;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.tabline.airline_tabsel_right = [ s:tab_sel_fg[0] , s:tab_se/;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.tabline.airline_tabtype = [ s:tab_type_fg[0] , s:tab_type_b/;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3/;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.visual.airline_error = [ s:error_fg[0] , s:error_bg[0] , s:/;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.visual.airline_error_inactive = [ s:error_fg[0] , s:error_b/;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.visual.airline_error_red = [ s:error_fg[0] , s:error_bg[0] /;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.visual.airline_term = [ s:term_fg[0] , s:term_bg[0] , s:ter/;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.visual.airline_warning = [ s:warning_fg[0] , s:warning_bg[0/;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.visual.airline_warning_inactive = [ s:warning_fg[0] , s:war/;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.visual.airline_warning_red = [ s:warning_fg[0] , s:warning_/;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.visual_modified = deepcopy(g:airline#themes#sonokai#palette/;"	v
g:airline#themes#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let g:airline#themes#sonokai#palette.visual_modified.airline_c = [ s:visual_mod_fg[0] , s:visual/;"	v
g:airline#visual_active	nvim/autoload/plugged/vim-airline/autoload/airline.vim	/^  let g:airline#visual_active = (mode() =~? '[vs]')$/;"	v
g:airline_extensions	.config/nvim/themes/airline.vim	/^let g:airline_extensions = ['branch', 'hunks', 'coc']$/;"	v
g:airline_gui_mode	nvim/autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^    let g:airline_gui_mode = airline#init#gui_mode()$/;"	v
g:airline_gui_mode	nvim/autoload/plugged/vim-airline/plugin/airline.vim	/^  let g:airline_gui_mode = airline#init#gui_mode()$/;"	v
g:airline_inactive_collapse	nvim/autoload/plugged/vim-airline/t/airline.vim	/^    let g:airline_inactive_collapse = 0$/;"	v
g:airline_inactive_collapse	nvim/autoload/plugged/vim-airline/t/airline.vim	/^    let g:airline_inactive_collapse = 1$/;"	v
g:airline_last_window_changed	nvim/autoload/plugged/vim-airline/plugin/airline.vim	/^  let g:airline_last_window_changed = l:key$/;"	v
g:airline_left_sep	.config/nvim/themes/airline.vim	/^let g:airline_left_sep = ''$/;"	v
g:airline_powerline_fonts	.config/nvim/themes/airline.vim	/^let g:airline_powerline_fonts = 1$/;"	v
g:airline_right_alt_sep	.config/nvim/themes/airline.vim	/^let g:airline_right_alt_sep = ''$/;"	v
g:airline_right_sep	.config/nvim/themes/airline.vim	/^let g:airline_right_sep = ''$/;"	v
g:airline_section_	nvim/autoload/plugged/vim-airline/t/init.vim	/^      let g:airline_section_{s} = s$/;"	v
g:airline_section_a	.config/nvim/themes/airline.vim	/^let g:airline_section_a = ""$/;"	v
g:airline_section_a	nvim/autoload/plugged/vim-airline/autoload/airline/init.vim	/^    let g:airline_section_a = airline#section#create_left(['mode', 'crypt', 'paste', 'keymap', '/;"	v
g:airline_section_a	nvim/autoload/plugged/vim-airline/t/airline.vim	/^    let g:airline_section_a = airline#section#create(['mode', 'mode'])$/;"	v
g:airline_section_b	nvim/autoload/plugged/vim-airline/autoload/airline/init.vim	/^      let g:airline_section_b = airline#section#create(['hunks', 'branch', 'battery'])$/;"	v
g:airline_section_b	nvim/autoload/plugged/vim-airline/autoload/airline/init.vim	/^      let g:airline_section_b = airline#section#create(['hunks', 'branch'])$/;"	v
g:airline_section_c	.config/nvim/themes/airline.vim	/^let g:airline_section_c = airline#section#create([''])$/;"	v
g:airline_section_c	nvim/autoload/plugged/vim-airline/autoload/airline/init.vim	/^      let g:airline_section_c = airline#section#create(['%<', 'file', spc, 'readonly', 'coc_stat/;"	v
g:airline_section_c	nvim/autoload/plugged/vim-airline/autoload/airline/init.vim	/^      let g:airline_section_c = airline#section#create(['%<', 'path', spc, 'readonly'])$/;"	v
g:airline_section_error	nvim/autoload/plugged/vim-airline/autoload/airline/init.vim	/^    let g:airline_section_error = airline#section#create(['ycm_error_count', 'syntastic-err', 'e/;"	v
g:airline_section_gutter	nvim/autoload/plugged/vim-airline/autoload/airline/init.vim	/^    let g:airline_section_gutter = airline#section#create(['%='])$/;"	v
g:airline_section_warning	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^      let g:airline_section_warning .= airline#section#create(['whitespace'])$/;"	v
g:airline_section_warning	nvim/autoload/plugged/vim-airline/autoload/airline/init.vim	/^    let g:airline_section_warning = airline#section#create(['ycm_warning_count',  'syntastic-war/;"	v
g:airline_section_x	nvim/autoload/plugged/vim-airline/autoload/airline/init.vim	/^    let g:airline_section_x = airline#section#create_right(['bookmark', 'tagbar', 'vista', 'gute/;"	v
g:airline_section_y	.config/nvim/themes/airline.vim	/^let g:airline_section_y = ''$/;"	v
g:airline_section_y	nvim/autoload/plugged/vim-airline/autoload/airline/init.vim	/^    let g:airline_section_y = airline#section#create_right(['ffenc'])$/;"	v
g:airline_section_z	.config/nvim/themes/airline.vim	/^let g:airline_section_z = airline#section#create(['linenr'])$/;"	v
g:airline_section_z	nvim/autoload/plugged/vim-airline/autoload/airline/init.vim	/^      let g:airline_section_z = airline#section#create(['%p%%'.spc, 'linenr',  ':%v'])$/;"	v
g:airline_section_z	nvim/autoload/plugged/vim-airline/autoload/airline/init.vim	/^      let g:airline_section_z = airline#section#create(['windowswap', 'obsession', '%p%%'.spc, '/;"	v
g:airline_statusline_funcrefs	nvim/autoload/plugged/vim-airline/autoload/airline.vim	/^let g:airline_statusline_funcrefs = get(g:, 'airline_statusline_funcrefs', [])$/;"	v
g:airline_statusline_funcrefs	nvim/autoload/plugged/vim-airline/t/airline.vim	/^    let g:airline_statusline_funcrefs = []$/;"	v
g:airline_theme	.config/nvim/themes/airline.vim	/^let g:airline_theme = 'sonokai'$/;"	v
g:airline_theme	.config/nvim/themes/miramare.vim	/^let g:airline_theme = 'miramare'$/;"	v
g:airline_theme	nvim/autoload/plugged/vim-airline/autoload/airline.vim	/^      let g:airline_theme = 'dark'$/;"	v
g:airline_theme	nvim/autoload/plugged/vim-airline/autoload/airline.vim	/^      let g:airline_theme = a:name$/;"	v
g:airline_theme	nvim/autoload/plugged/vim-airline/autoload/airline.vim	/^  let g:airline_theme = get(g:, 'airline_theme', 'dark')$/;"	v
g:airline_theme	nvim/autoload/plugged/vim-airline/plugin/airline.vim	/^        let g:airline_theme=s:random_theme()$/;"	v
g:airline_theme	nvim/autoload/plugged/vim-airline/plugin/airline.vim	/^      let g:airline_theme = 'dark'$/;"	v
g:airline_theme	nvim/autoload/plugged/vim-airline/plugin/airline.vim	/^    let g:airline_theme = 'dark'$/;"	v
g:airline_theme	nvim/autoload/plugged/vim-airline/t/airline.vim	/^let g:airline_theme = 'dark'$/;"	v
g:airline_theme	nvim/autoload/plugged/vim-airline/t/builder.vim	/^let g:airline_theme = 'dark'$/;"	v
g:airline_theme	nvim/autoload/plugged/vim-airline/t/highlighter.vim	/^let g:airline_theme = 'dark'$/;"	v
g:autoloaded_undotree	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^let g:autoloaded_undotree = 0$/;"	v
g:battery#update_statusline	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/battery.vim	/^    let g:battery#update_statusline = 1$/;"	v
g:bufferline_active_buffer_left	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/bufferline.vim	/^    let g:bufferline_active_buffer_left = ''$/;"	v
g:bufferline_active_buffer_right	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/bufferline.vim	/^    let g:bufferline_active_buffer_right = ''$/;"	v
g:bufferline_active_highlight	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/bufferline.vim	/^    let g:bufferline_active_highlight = 'bufferline_selected'$/;"	v
g:bufferline_inactive_highlight	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/bufferline.vim	/^    let g:bufferline_inactive_highlight = 'airline_c'$/;"	v
g:bufferline_separator	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/bufferline.vim	/^    let g:bufferline_separator = g:airline_symbols.space$/;"	v
g:buftabline_indicators	nvim/autoload/plugged/vim-buftabline/plugin/buftabline.vim	/^let g:buftabline_indicators = get(g:, 'buftabline_indicators', 0)$/;"	v
g:buftabline_numbers	nvim/autoload/plugged/vim-buftabline/plugin/buftabline.vim	/^let g:buftabline_numbers    = get(g:, 'buftabline_numbers',    0)$/;"	v
g:buftabline_plug_max	nvim/autoload/plugged/vim-buftabline/plugin/buftabline.vim	/^let g:buftabline_plug_max   = get(g:, 'buftabline_plug_max',  10)$/;"	v
g:buftabline_separators	nvim/autoload/plugged/vim-buftabline/plugin/buftabline.vim	/^let g:buftabline_separators = get(g:, 'buftabline_separators', 0)$/;"	v
g:buftabline_show	nvim/autoload/plugged/vim-buftabline/plugin/buftabline.vim	/^let g:buftabline_show       = get(g:, 'buftabline_show',       2)$/;"	v
g:carbon_now_sh_browser	nvim/autoload/plugged/vim-carbon-now-sh/plugin/vim-carbon-now-sh.vim	/^let g:carbon_now_sh_browser = get(g:, 'carbon_now_sh_browser', '')$/;"	v
g:carbon_now_sh_loaded	nvim/autoload/plugged/vim-carbon-now-sh/plugin/vim-carbon-now-sh.vim	/^let g:carbon_now_sh_loaded = 1$/;"	v
g:carbon_now_sh_options	.config/nvim/configs/carbon.vim	/^let g:carbon_now_sh_options = {$/;"	v
g:carbon_now_sh_options	nvim/autoload/plugged/vim-carbon-now-sh/plugin/vim-carbon-now-sh.vim	/^let g:carbon_now_sh_options = get(g:, 'carbon_now_sh_options', {})$/;"	v
g:coc_global_extensions	.config/nvim/configs/coc.vim	/^let g:coc_global_extensions = [$/;"	v
g:coc_snippet_next	.config/nvim/configs/coc.vim	/^let g:coc_snippet_next = '<C-R>'$/;"	v
g:coc_snippet_next	.config/nvim/configs/coc.vim	/^let g:coc_snippet_next = '<c-j>'$/;"	v
g:coc_snippet_prev	.config/nvim/configs/coc.vim	/^let g:coc_snippet_prev = '<c-k>'$/;"	v
g:coc_stl_format	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/coc.vim	/^    let g:coc_stl_format = _backup$/;"	v
g:coc_stl_format	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/coc.vim	/^    let g:coc_stl_format = get(g:, 'airline#extensions#coc#stl_format_err', '%E{[%e(#%fe)]}')$/;"	v
g:coc_stl_format	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/coc.vim	/^    let g:coc_stl_format = get(g:, 'airline#extensions#coc#stl_format_warn', '%W{[%w(#%fw)]}')$/;"	v
g:colors_name	nvim/autoload/plugged/sonokai/colors/sonokai.vim	/^let g:colors_name = 'sonokai'$/;"	v
g:completion_abbr_length	nvim/autoload/plugged/completion-nvim/plugin/completion.vim	/^    let g:completion_abbr_length = 0$/;"	v
g:completion_auto_change_source	nvim/autoload/plugged/completion-nvim/plugin/completion.vim	/^    let g:completion_auto_change_source = 0$/;"	v
g:completion_chain_complete_list	nvim/autoload/plugged/completion-nvim/plugin/completion.vim	/^    let g:completion_chain_complete_list = {$/;"	v
g:completion_confirm_key	nvim/autoload/plugged/completion-nvim/plugin/completion.vim	/^    let g:completion_confirm_key = "\\<CR>"$/;"	v
g:completion_confirm_key_rhs	nvim/autoload/plugged/completion-nvim/plugin/completion.vim	/^    let g:completion_confirm_key_rhs = ''$/;"	v
g:completion_customize_lsp_label	nvim/autoload/plugged/completion-nvim/plugin/completion.vim	/^    let g:completion_customize_lsp_label = {}$/;"	v
g:completion_docked_hover	nvim/autoload/plugged/completion-nvim/plugin/completion.vim	/^    let g:completion_docked_hover = 0$/;"	v
g:completion_docked_maximum_size	nvim/autoload/plugged/completion-nvim/plugin/completion.vim	/^    let g:completion_docked_maximum_size = 20$/;"	v
g:completion_docked_minimum_size	nvim/autoload/plugged/completion-nvim/plugin/completion.vim	/^    let g:completion_docked_minimum_size = 5$/;"	v
g:completion_enable_auto_hover	nvim/autoload/plugged/completion-nvim/plugin/completion.vim	/^    let g:completion_enable_auto_hover = 1$/;"	v
g:completion_enable_auto_paren	nvim/autoload/plugged/completion-nvim/plugin/completion.vim	/^    let g:completion_enable_auto_paren = 0$/;"	v
g:completion_enable_auto_popup	nvim/autoload/plugged/completion-nvim/plugin/completion.vim	/^    let g:completion_enable_auto_popup = 1$/;"	v
g:completion_enable_auto_signature	nvim/autoload/plugged/completion-nvim/plugin/completion.vim	/^    let g:completion_enable_auto_signature = 1$/;"	v
g:completion_enable_focusable_hover	nvim/autoload/plugged/completion-nvim/plugin/completion.vim	/^    let g:completion_enable_focusable_hover = 0$/;"	v
g:completion_enable_fuzzy_match	nvim/autoload/plugged/completion-nvim/plugin/completion.vim	/^    let g:completion_enable_fuzzy_match = 0$/;"	v
g:completion_enable_snippet	nvim/autoload/plugged/completion-nvim/plugin/completion.vim	/^    let g:completion_enable_snippet = v:null$/;"	v
g:completion_expand_characters	nvim/autoload/plugged/completion-nvim/plugin/completion.vim	/^    let g:completion_expand_characters = [' ', '\\t', '>', ';']$/;"	v
g:completion_items_priority	nvim/autoload/plugged/completion-nvim/plugin/completion.vim	/^    let g:completion_items_priority = {}$/;"	v
g:completion_matching_ignore_case	nvim/autoload/plugged/completion-nvim/plugin/completion.vim	/^    let g:completion_matching_ignore_case = &ignorecase$/;"	v
g:completion_matching_smart_case	nvim/autoload/plugged/completion-nvim/plugin/completion.vim	/^    let g:completion_matching_smart_case = &smartcase$/;"	v
g:completion_matching_strategy_list	nvim/autoload/plugged/completion-nvim/plugin/completion.vim	/^    let g:completion_matching_strategy_list = ['exact']$/;"	v
g:completion_menu_length	nvim/autoload/plugged/completion-nvim/plugin/completion.vim	/^    let g:completion_menu_length = 0$/;"	v
g:completion_sorting	nvim/autoload/plugged/completion-nvim/plugin/completion.vim	/^    let g:completion_sorting = 'alphabet'$/;"	v
g:completion_timer_cycle	nvim/autoload/plugged/completion-nvim/plugin/completion.vim	/^    let g:completion_timer_cycle = 80$/;"	v
g:completion_trigger_character	nvim/autoload/plugged/completion-nvim/plugin/completion.vim	/^    let g:completion_trigger_character = []$/;"	v
g:completion_trigger_keyword_length	nvim/autoload/plugged/completion-nvim/plugin/completion.vim	/^    let g:completion_trigger_keyword_length = 1$/;"	v
g:completion_trigger_on_delete	nvim/autoload/plugged/completion-nvim/plugin/completion.vim	/^    let g:completion_trigger_on_delete = 0$/;"	v
g:count	nvim/autoload/plugged/vim-airline/t/util.vim	/^    let g:count = 0$/;"	v
g:count	nvim/autoload/plugged/vim-airline/t/util.vim	/^  let g:count += 1$/;"	v
g:count	nvim/autoload/plugged/vim-airline/t/util.vim	/^  let g:count += 2$/;"	v
g:count	nvim/autoload/plugged/vim-airline/t/util.vim	/^  let g:count = a:0$/;"	v
g:ctrlp_formatline_func	nvim/autoload/plugged/vim-devicons/autoload/devicons/plugins/ctrlp.vim	/^        let g:ctrlp_formatline_func = 's:formatline(s:curtype() == "buf" ? v:val : WebDevIconsGe/;"	v
g:ctrlp_status_func	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^  let g:ctrlp_status_func = {$/;"	v
g:cursormode_exit_mode	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^  let g:cursormode_exit_mode='n'$/;"	v
g:diagnostic_auto_popup_while_jump	nvim/autoload/plugged/diagnostic-nvim/plugin/diagnostic.vim	/^    let g:diagnostic_auto_popup_while_jump = 1$/;"	v
g:diagnostic_enable_underline	nvim/autoload/plugged/diagnostic-nvim/plugin/diagnostic.vim	/^    let g:diagnostic_enable_underline = 1$/;"	v
g:diagnostic_enable_virtual_text	nvim/autoload/plugged/diagnostic-nvim/plugin/diagnostic.vim	/^    let g:diagnostic_enable_virtual_text = 0$/;"	v
g:diagnostic_insert_delay	nvim/autoload/plugged/diagnostic-nvim/plugin/diagnostic.vim	/^    let g:diagnostic_insert_delay = 0$/;"	v
g:diagnostic_level	nvim/autoload/plugged/diagnostic-nvim/plugin/diagnostic.vim	/^    let g:diagnostic_level = 'Hint'$/;"	v
g:diagnostic_show_sign	nvim/autoload/plugged/diagnostic-nvim/plugin/diagnostic.vim	/^    let g:diagnostic_show_sign = 1$/;"	v
g:diagnostic_sign_priority	nvim/autoload/plugged/diagnostic-nvim/plugin/diagnostic.vim	/^    let g:diagnostic_sign_priority = 20$/;"	v
g:diagnostic_trimmed_virtual_text	nvim/autoload/plugged/diagnostic-nvim/plugin/diagnostic.vim	/^    let g:diagnostic_trimmed_virtual_text = v:null$/;"	v
g:diagnostic_virtual_text_prefix	nvim/autoload/plugged/diagnostic-nvim/plugin/diagnostic.vim	/^    let g:diagnostic_virtual_text_prefix = '■'$/;"	v
g:doge_doc_standard_python	.config/nvim/configs/doge.vim	/^let g:doge_doc_standard_python = 'google'$/;"	v
g:doge_filetype_aliases	.config/nvim/configs/doge.vim	/^let g:doge_filetype_aliases = {$/;"	v
g:doge_mapping	.config/nvim/configs/doge.vim	/^let g:doge_mapping= '<silent><F4>'$/;"	v
g:editorconfig_core_vimscript_debug	nvim/autoload/plugged/editorconfig-vim/autoload/editorconfig_core.vim	/^        let g:editorconfig_core_vimscript_debug = 1$/;"	v
g:editorconfig_core_vimscript_debug	nvim/autoload/plugged/editorconfig-vim/autoload/editorconfig_core.vim	/^    let g:editorconfig_core_vimscript_debug = 0$/;"	v
g:editorconfig_core_vimscript_debug	nvim/autoload/plugged/editorconfig-vim/autoload/editorconfig_core/fnmatch.vim	/^    let g:editorconfig_core_vimscript_debug = 0$/;"	v
g:editorconfig_core_vimscript_debug	nvim/autoload/plugged/editorconfig-vim/autoload/editorconfig_core/ini.vim	/^    let g:editorconfig_core_vimscript_debug = 0$/;"	v
g:fern_force_overwrite_statusline	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/fern.vim	/^  let g:fern_force_overwrite_statusline = 0$/;"	v
g:forest_night_current_word	.config/nvim/themes/forestnight.vim	/^let g:forest_night_current_word = 'underline'$/;"	v
g:forest_night_disable_italic_comment	.config/nvim/themes/forestnight.vim	/^let g:forest_night_disable_italic_comment = 1$/;"	v
g:forest_night_enable_italic	.config/nvim/themes/forestnight.vim	/^let g:forest_night_enable_italic = 1$/;"	v
g:forest_night_transparent_background	.config/nvim/themes/forestnight.vim	/^let g:forest_night_transparent_background = 0$/;"	v
g:fzf#vim#buffers	nvim/autoload/plugged/fzf.vim/plugin/fzf.vim	/^  let g:fzf#vim#buffers = {}$/;"	v
g:fzf_colors	.config/nvim/configs/fzf.vim	/^    let g:fzf_colors = {$/;"	v
g:fzf_colors	nvim/autoload/plugged/sonokai/colors/sonokai.vim	/^let g:fzf_colors = {$/;"	v
g:fzf_colors	nvim/configs/fzf.vim	/^    let g:fzf_colors = {$/;"	v
g:fzf_layout	.config/nvim/configs/fzf.vim	/^    let g:fzf_layout = { 'window': 'call FloatingFZF()' }$/;"	v
g:fzf_layout	nvim/configs/fzf.vim	/^    let g:fzf_layout = { 'window': 'call FloatingFZF()' }$/;"	v
g:gina#component#repo#commit_length	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/branch.vim	/^      let g:gina#component#repo#commit_length = s:sha1size$/;"	v
g:gina_force_overwrite_statusline	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/gina.vim	/^  let g:gina_force_overwrite_statusline = 0$/;"	v
g:gitgutter_enabled	.config/nvim/configs/gitgutter.vim	/^let g:gitgutter_enabled = 1$/;"	v
g:gitgutter_preview_win_floating	.config/nvim/configs/gitgutter.vim	/^let g:gitgutter_preview_win_floating = 1$/;"	v
g:gitgutter_sign_added	.config/nvim/configs/gitgutter.vim	/^let g:gitgutter_sign_added              = '▎'$/;"	v
g:gitgutter_sign_modified	.config/nvim/configs/gitgutter.vim	/^let g:gitgutter_sign_modified           = '▎'$/;"	v
g:gitgutter_sign_modified_removed	.config/nvim/configs/gitgutter.vim	/^let g:gitgutter_sign_modified_removed   = '▎'$/;"	v
g:gitgutter_sign_removed	.config/nvim/configs/gitgutter.vim	/^let g:gitgutter_sign_removed            = '契'$/;"	v
g:gitgutter_sign_removed_first_line	.config/nvim/configs/gitgutter.vim	/^let g:gitgutter_sign_removed_first_line = '契'$/;"	v
g:gutentags_add_ctrlp_root_markers	nvim/autoload/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_add_ctrlp_root_markers = get(g:, 'gutentags_add_ctrlp_root_markers', 1)$/;"	v
g:gutentags_add_default_project_roots	.config/nvim/configs/gutentags.vim	/^let g:gutentags_add_default_project_roots = '0'$/;"	v
g:gutentags_add_default_project_roots	nvim/autoload/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_add_default_project_roots = get(g:, 'gutentags_add_default_project_roots', 1)$/;"	v
g:gutentags_auto_add_cscope	nvim/autoload/plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_auto_add_cscope = 1$/;"	v
g:gutentags_auto_add_gtags_cscope	nvim/autoload/plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^    let g:gutentags_auto_add_gtags_cscope = 1$/;"	v
g:gutentags_background_update	nvim/autoload/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_background_update = get(g:, 'gutentags_background_update', 1)$/;"	v
g:gutentags_cache_dir	.config/nvim/configs/gutentags.vim	/^let g:gutentags_cache_dir = expand('~\/.ctags\/')$/;"	v
g:gutentags_cache_dir	nvim/autoload/plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_cache_dir = ''$/;"	v
g:gutentags_cache_dir	nvim/autoload/plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_cache_dir = fnamemodify(g:gutentags_cache_dir, ':p')$/;"	v
g:gutentags_cache_dir	nvim/autoload/plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_cache_dir = fnamemodify(g:gutentags_cache_dir, ':s?[\/\\\\]$??')$/;"	v
g:gutentags_cscope_build_inverted_index	nvim/autoload/plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_cscope_build_inverted_index = 0$/;"	v
g:gutentags_cscope_executable	nvim/autoload/plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_cscope_executable = 'cscope'$/;"	v
g:gutentags_ctags_auto_set_tags	nvim/autoload/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_auto_set_tags = get(g:, 'gutentags_ctags_auto_set_tags', 1)$/;"	v
g:gutentags_ctags_check_tagfile	nvim/autoload/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_check_tagfile = get(g:, 'gutentags_ctags_check_tagfile', 0)$/;"	v
g:gutentags_ctags_exclude	.config/nvim/configs/gutentags.vim	/^let g:gutentags_ctags_exclude = [$/;"	v
g:gutentags_ctags_exclude	nvim/autoload/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_exclude = get(g:, 'gutentags_ctags_exclude', [])$/;"	v
g:gutentags_ctags_exclude_wildignore	nvim/autoload/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_exclude_wildignore = get(g:, 'gutentags_ctags_exclude_wildignore', 1)$/;"	v
g:gutentags_ctags_executable	nvim/autoload/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_executable = get(g:, 'gutentags_ctags_executable', 'ctags')$/;"	v
g:gutentags_ctags_extra_args	.config/nvim/configs/gutentags.vim	/^let g:gutentags_ctags_extra_args = [$/;"	v
g:gutentags_ctags_extra_args	nvim/autoload/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_extra_args = get(g:, 'gutentags_ctags_extra_args', [])$/;"	v
g:gutentags_ctags_options_file	nvim/autoload/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_options_file = get(g:, 'gutentags_ctags_options_file', '.gutctags')$/;"	v
g:gutentags_ctags_post_process_cmd	nvim/autoload/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_post_process_cmd = get(g:, 'gutentags_ctags_post_process_cmd', '')$/;"	v
g:gutentags_ctags_tagfile	nvim/autoload/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_tagfile = get(g:, 'gutentags_ctags_tagfile', 'tags')$/;"	v
g:gutentags_debug	nvim/autoload/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_debug = get(g:, 'gutentags_debug', 0)$/;"	v
g:gutentags_define_advanced_commands	nvim/autoload/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_define_advanced_commands = get(g:, 'gutentags_define_advanced_commands', 0)$/;"	v
g:gutentags_enabled	nvim/autoload/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^            let g:gutentags_enabled = 0$/;"	v
g:gutentags_enabled	nvim/autoload/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_enabled = get(g:, 'gutentags_enabled', 1)$/;"	v
g:gutentags_exclude_filetypes	nvim/autoload/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_exclude_filetypes = get(g:, 'gutentags_exclude_filetypes', [])$/;"	v
g:gutentags_exclude_project_root	nvim/autoload/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_exclude_project_root = get(g:, 'gutentags_exclude_project_root', ['\/usr\/local'/;"	v
g:gutentags_fake	nvim/autoload/plugged/vim-gutentags/autoload/gutentags.vim	/^        let g:gutentags_fake = a:1$/;"	v
g:gutentags_fake	nvim/autoload/plugged/vim-gutentags/autoload/gutentags.vim	/^    let g:gutentags_fake = !g:gutentags_fake$/;"	v
g:gutentags_fake	nvim/autoload/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_fake = get(g:, 'gutentags_fake', 0)$/;"	v
g:gutentags_file_list_command	nvim/autoload/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_file_list_command = get(g:, 'gutentags_file_list_command', '')$/;"	v
g:gutentags_generate_on_empty_buffer	.config/nvim/configs/gutentags.vim	/^let g:gutentags_generate_on_empty_buffer = 0$/;"	v
g:gutentags_generate_on_empty_buffer	nvim/autoload/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_empty_buffer = get(g:, 'gutentags_generate_on_empty_buffer', 0)$/;"	v
g:gutentags_generate_on_missing	.config/nvim/configs/gutentags.vim	/^let g:gutentags_generate_on_missing = 1$/;"	v
g:gutentags_generate_on_missing	nvim/autoload/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_missing = get(g:, 'gutentags_generate_on_missing', 1)$/;"	v
g:gutentags_generate_on_new	.config/nvim/configs/gutentags.vim	/^let g:gutentags_generate_on_new = 1$/;"	v
g:gutentags_generate_on_new	nvim/autoload/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_new = get(g:, 'gutentags_generate_on_new', 1)$/;"	v
g:gutentags_generate_on_write	.config/nvim/configs/gutentags.vim	/^let g:gutentags_generate_on_write = 1$/;"	v
g:gutentags_generate_on_write	nvim/autoload/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_write = get(g:, 'gutentags_generate_on_write', 1)$/;"	v
g:gutentags_gtags_cscope_executable	nvim/autoload/plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^    let g:gutentags_gtags_cscope_executable = 'gtags-cscope'$/;"	v
g:gutentags_gtags_dbpath	nvim/autoload/plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^    let g:gutentags_gtags_dbpath = ''$/;"	v
g:gutentags_gtags_executable	nvim/autoload/plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^    let g:gutentags_gtags_executable = 'gtags'$/;"	v
g:gutentags_gtags_options_file	nvim/autoload/plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^    let g:gutentags_gtags_options_file = '.gutgtags'$/;"	v
g:gutentags_init_user_func	nvim/autoload/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_init_user_func = get(g:, 'gutentags_init_user_func', $/;"	v
g:gutentags_modules	nvim/autoload/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_modules = get(g:, 'gutentags_modules', ['ctags'])$/;"	v
g:gutentags_pause_after_update	nvim/autoload/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_pause_after_update = get(g:, 'gutentags_pause_after_update', 0)$/;"	v
g:gutentags_plat_dir	nvim/autoload/plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_plat_dir = expand('<sfile>:h:h:p') . "\\\\plat\\\\win32\\\\"$/;"	v
g:gutentags_plat_dir	nvim/autoload/plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_plat_dir = expand('<sfile>:h:h:p') . '\/plat\/unix\/'$/;"	v
g:gutentags_project_info	nvim/autoload/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_project_info = get(g:, 'gutentags_project_info', [])$/;"	v
g:gutentags_project_root	.config/nvim/configs/gutentags.vim	/^let g:gutentags_project_root = ['package.json', '.git', 'tags']$/;"	v
g:gutentags_project_root	nvim/autoload/plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_project_root += ['.git', '.hg', '.svn', '.bzr', '_darcs', '_FOSSIL_', '.fslc/;"	v
g:gutentags_project_root	nvim/autoload/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_project_root = get(g:, 'gutentags_project_root', [])$/;"	v
g:gutentags_project_root_finder	nvim/autoload/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_project_root_finder = get(g:, 'gutentags_project_root_finder', '')$/;"	v
g:gutentags_res_dir	nvim/autoload/plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_res_dir = expand('<sfile>:h:h:p') . "\\\\res\\\\"$/;"	v
g:gutentags_res_dir	nvim/autoload/plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_res_dir = expand('<sfile>:h:h:p') . '\/res\/'$/;"	v
g:gutentags_resolve_symlinks	nvim/autoload/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_resolve_symlinks = get(g:, 'gutentags_resolve_symlinks', 0)$/;"	v
g:gutentags_scopefile	nvim/autoload/plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_scopefile = 'cscope.out'$/;"	v
g:gutentags_script_ext	nvim/autoload/plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_script_ext = '.cmd'$/;"	v
g:gutentags_script_ext	nvim/autoload/plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_script_ext = '.sh'$/;"	v
g:gutentags_trace	nvim/autoload/plugged/vim-gutentags/autoload/gutentags.vim	/^            let g:gutentags_trace = l:prev_trace$/;"	v
g:gutentags_trace	nvim/autoload/plugged/vim-gutentags/autoload/gutentags.vim	/^        let g:gutentags_trace = 1$/;"	v
g:gutentags_trace	nvim/autoload/plugged/vim-gutentags/autoload/gutentags.vim	/^        let g:gutentags_trace = a:1$/;"	v
g:gutentags_trace	nvim/autoload/plugged/vim-gutentags/autoload/gutentags.vim	/^        let g:gutentags_trace = l:trace_backup$/;"	v
g:gutentags_trace	nvim/autoload/plugged/vim-gutentags/autoload/gutentags.vim	/^    let g:gutentags_trace = !g:gutentags_trace$/;"	v
g:gutentags_trace	nvim/autoload/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_trace = get(g:, 'gutentags_trace', 0)$/;"	v
g:gutentags_use_jobs	nvim/autoload/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_use_jobs = get(g:, 'gutentags_use_jobs', has('job'))$/;"	v
g:highlightedyank_highlight_duration	.config/nvim/themes/highlightyank.vim	/^let g:highlightedyank_highlight_duration = 2500$/;"	v
g:incsearch#_go_config	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^    let g:incsearch#_go_config = config$/;"	v
g:incsearch#_go_config	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^let g:incsearch#_go_config = {}$/;"	v
g:incsearch#_view	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^    let g:incsearch#_view = a:cli._w$/;"	v
g:incsearch#_view	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^let g:incsearch#_view = get(g:, 'incsearch#_view', {})$/;"	v
g:incsearch#auto_nohlsearch	.config/nvim/configs/incsearch.vim	/^let g:incsearch#auto_nohlsearch = 1$/;"	v
g:incsearch#auto_nohlsearch	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^let g:incsearch#auto_nohlsearch = get(g: , 'incsearch#auto_nohlsearch' , s:FALSE)$/;"	v
g:incsearch#auto_nohlsearch	nvim/autoload/plugged/incsearch.vim/test/autonohlsearch.vim	/^  let g:incsearch#auto_nohlsearch = 0$/;"	v
g:incsearch#auto_nohlsearch	nvim/autoload/plugged/incsearch.vim/test/autonohlsearch.vim	/^  let g:incsearch#auto_nohlsearch = 1$/;"	v
g:incsearch#auto_nohlsearch	nvim/configs/incsearch.vim	/^let g:incsearch#auto_nohlsearch = 1$/;"	v
g:incsearch#consistent_n_direction	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^let g:incsearch#consistent_n_direction = get(g: , 'incsearch#consistent_n_direction' , s:FALSE)$/;"	v
g:incsearch#consistent_n_direction	nvim/autoload/plugged/incsearch.vim/test/n_and_N.vim	/^  let g:incsearch#consistent_n_direction = 0$/;"	v
g:incsearch#consistent_n_direction	nvim/autoload/plugged/incsearch.vim/test/n_and_N.vim	/^  let g:incsearch#consistent_n_direction = 1$/;"	v
g:incsearch#debug	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^let g:incsearch#debug = get(g:, 'incsearch#debug', s:FALSE)$/;"	v
g:incsearch#do_not_save_error_message_history	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^let g:incsearch#do_not_save_error_message_history =$/;"	v
g:incsearch#do_not_save_error_message_history	nvim/autoload/plugged/incsearch.vim/test/error_warning_emulation.vim	/^  let g:incsearch#do_not_save_error_message_history = 0$/;"	v
g:incsearch#do_not_save_error_message_history	nvim/autoload/plugged/incsearch.vim/test/error_warning_emulation.vim	/^  let g:incsearch#do_not_save_error_message_history = 1$/;"	v
g:incsearch#emacs_like_keymap	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^let g:incsearch#emacs_like_keymap      = get(g: , 'incsearch#emacs_like_keymap'      , s:FALSE)$/;"	v
g:incsearch#highlight	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^let g:incsearch#highlight              = get(g: , 'incsearch#highlight'              , {})$/;"	v
g:incsearch#highlight#_hi	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/highlight.vim	/^let g:incsearch#highlight#_hi = s:hi$/;"	v
g:incsearch#magic	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^let g:incsearch#magic           = get(g: , 'incsearch#magic'           , '')$/;"	v
g:incsearch#magic	nvim/autoload/plugged/incsearch.vim/test/magic_option.vim	/^  let g:incsearch#magic = ''$/;"	v
g:incsearch#magic	nvim/autoload/plugged/incsearch.vim/test/magic_option.vim	/^  let g:incsearch#magic = '\\M'$/;"	v
g:incsearch#magic	nvim/autoload/plugged/incsearch.vim/test/magic_option.vim	/^  let g:incsearch#magic = '\\V'$/;"	v
g:incsearch#magic	nvim/autoload/plugged/incsearch.vim/test/magic_option.vim	/^  let g:incsearch#magic = '\\a'$/;"	v
g:incsearch#magic	nvim/autoload/plugged/incsearch.vim/test/magic_option.vim	/^  let g:incsearch#magic = '\\m'$/;"	v
g:incsearch#magic	nvim/autoload/plugged/incsearch.vim/test/magic_option.vim	/^  let g:incsearch#magic = '\\v'$/;"	v
g:incsearch#no_inc_hlsearch	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^let g:incsearch#no_inc_hlsearch        = get(g: , 'incsearch#no_inc_hlsearch'        , s:FALSE)$/;"	v
g:incsearch#separate_highlight	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^let g:incsearch#separate_highlight     = get(g: , 'incsearch#separate_highlight'     , s:FALSE)$/;"	v
g:incsearch#separate_highlight	nvim/autoload/plugged/incsearch.vim/test/highlight.vim	/^  let g:incsearch#separate_highlight = 0$/;"	v
g:incsearch#separate_highlight	nvim/autoload/plugged/incsearch.vim/test/highlight.vim	/^  let g:incsearch#separate_highlight = 1$/;"	v
g:incsearch#smart_backward_word	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^let g:incsearch#smart_backward_word    = get(g: , 'incsearch#smart_backward_word'    , s:TRUE)$/;"	v
g:incsearch#smart_backward_word	nvim/autoload/plugged/incsearch.vim/test/module.vim	/^  let g:incsearch#smart_backward_word = 0$/;"	v
g:incsearch#smart_backward_word	nvim/autoload/plugged/incsearch.vim/test/module.vim	/^  let g:incsearch#smart_backward_word = 1$/;"	v
g:incsearch#vim_cmdline_keymap	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^let g:incsearch#vim_cmdline_keymap     = get(g: , 'incsearch#vim_cmdline_keymap'     , s:TRUE)$/;"	v
g:incsearch_cli_key_mappings	nvim/autoload/plugged/incsearch.vim/plugin/incsearch.vim	/^  let g:incsearch_cli_key_mappings[a:lhs] = {$/;"	v
g:incsearch_cli_key_mappings	nvim/autoload/plugged/incsearch.vim/plugin/incsearch.vim	/^let g:incsearch_cli_key_mappings = get(g:, 'incsearch_cli_key_mappings', {})$/;"	v
g:incsearch_cli_key_mappings	nvim/autoload/plugged/incsearch.vim/test/default_settings.vim	/^    let g:incsearch_cli_key_mappings['a'] = 'b'$/;"	v
g:indentLine_color_gui	nvim/autoload/plugged/sonokai/colors/sonokai.vim	/^let g:indentLine_color_gui = s:palette.grey[0]$/;"	v
g:indentLine_color_term	nvim/autoload/plugged/sonokai/colors/sonokai.vim	/^let g:indentLine_color_term = s:palette.grey[1]$/;"	v
g:lightline	.config/nvim/themes/lightline.vim	/^  let g:lightline.colorscheme = 'forest_night'$/;"	v
g:lightline	.config/nvim/themes/lightline.vim	/^let g:lightline = {$/;"	v
g:lightline#colorscheme#sonokai#palette	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let g:lightline#colorscheme#sonokai#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:loaded_EditorConfig	nvim/autoload/plugged/editorconfig-vim/plugin/editorconfig.vim	/^let g:loaded_EditorConfig = 1$/;"	v
g:loaded_airline	nvim/autoload/plugged/vim-airline/plugin/airline.vim	/^let g:loaded_airline = 1$/;"	v
g:loaded_better_whitespace_plugin	nvim/autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^let g:loaded_better_whitespace_plugin = 1$/;"	v
g:loaded_commentary	nvim/autoload/plugged/vim-commentary/plugin/commentary.vim	/^let g:loaded_commentary = 1$/;"	v
g:loaded_completion	nvim/autoload/plugged/completion-nvim/plugin/completion.vim	/^let g:loaded_completion = 1$/;"	v
g:loaded_cursormode	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let g:loaded_cursormode = 1$/;"	v
g:loaded_diagnostic	nvim/autoload/plugged/diagnostic-nvim/plugin/diagnostic.vim	/^let g:loaded_diagnostic = 1$/;"	v
g:loaded_gutentags	nvim/autoload/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:loaded_gutentags = 1$/;"	v
g:loaded_highlightedyank	nvim/autoload/plugged/vim-highlightedyank/plugin/highlightedyank.vim	/^let g:loaded_highlightedyank = 1$/;"	v
g:loaded_incsearch	nvim/autoload/plugged/incsearch.vim/plugin/incsearch.vim	/^let g:loaded_incsearch = 1$/;"	v
g:loaded_minimap	nvim/autoload/plugged/minimap.vim/plugin/minimap.vim	/^let g:loaded_minimap = 1$/;"	v
g:loaded_neosnippet	nvim/autoload/plugged/neosnippet.vim/plugin/neosnippet.vim	/^let g:loaded_neosnippet = 1$/;"	v
g:loaded_nvim_treesitter	nvim/autoload/plugged/nvim-treesitter/plugin/nvim-treesitter.vim	/^let g:loaded_nvim_treesitter = 1$/;"	v
g:loaded_plug	nvim/autoload/plug.vim	/^let g:loaded_plug = 1$/;"	v
g:loaded_python_provider	.config/nvim/general/settings.vim	/^  let g:loaded_python_provider = 0$/;"	v
g:loaded_python_provider	nvim/general/settings.vim	/^  let g:loaded_python_provider = 0$/;"	v
g:loaded_rooter	nvim/autoload/plugged/vim-rooter/plugin/rooter.vim	/^let g:loaded_rooter = 1$/;"	v
g:loaded_undotree	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^let g:loaded_undotree = 1   " Signal plugin availability with a value of 1.$/;"	v
g:loaded_undotree	nvim/autoload/plugged/undotree/plugin/undotree.vim	/^let g:loaded_undotree = 0$/;"	v
g:loaded_undotree	nvim/autoload/plugged/undotree/plugin/undotree.vim	/^let g:loaded_undotree = 1   " Signal plugin availability with a value of 1.$/;"	v
g:loaded_vim_airline_zoomwintab	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/zoomwintab.vim	/^let g:loaded_vim_airline_zoomwintab = 1$/;"	v
g:loaded_webdevicons	nvim/autoload/plugged/vim-devicons/plugin/webdevicons.vim	/^let g:loaded_webdevicons = 1$/;"	v
g:loaded_xtabline	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    let g:loaded_xtabline = 1$/;"	v
g:minimap_auto_start	nvim/autoload/plugged/minimap.vim/plugin/minimap.vim	/^    let g:minimap_auto_start = 0$/;"	v
g:minimap_auto_start	nvim/configs/minimap.vim	/^let g:minimap_auto_start	= 1$/;"	v
g:minimap_base_highlight	nvim/autoload/plugged/minimap.vim/plugin/minimap.vim	/^    let g:minimap_base_highlight = 'Normal'$/;"	v
g:minimap_base_matchid	nvim/autoload/plugged/minimap.vim/plugin/minimap.vim	/^    let g:minimap_base_matchid = 9265454 " magic number$/;"	v
g:minimap_block_filetypes	nvim/autoload/plugged/minimap.vim/plugin/minimap.vim	/^    let g:minimap_block_filetypes = ['fugitive', 'nerdtree']$/;"	v
g:minimap_cursorline_matchid	nvim/autoload/plugged/minimap.vim/plugin/minimap.vim	/^    let g:minimap_cursorline_matchid = 9265455$/;"	v
g:minimap_highlight	nvim/autoload/plugged/minimap.vim/plugin/minimap.vim	/^    let g:minimap_highlight = 'Title'$/;"	v
g:minimap_left	nvim/autoload/plugged/minimap.vim/plugin/minimap.vim	/^    let g:minimap_left = 0$/;"	v
g:minimap_width	nvim/autoload/plugged/minimap.vim/plugin/minimap.vim	/^    let g:minimap_width = 10$/;"	v
g:minimap_width	nvim/configs/minimap.vim	/^let g:minimap_width = 15$/;"	v
g:miramare_current_word	.config/nvim/themes/miramare.vim	/^let g:miramare_current_word= 'underline'$/;"	v
g:miramare_enable_italic	.config/nvim/themes/miramare.vim	/^let g:miramare_enable_italic = 1$/;"	v
g:neosnippet#data_directory	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/variables.vim	/^  let g:neosnippet#data_directory =$/;"	v
g:netrw_force_overwrite_statusline	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/netrw.vim	/^  let g:netrw_force_overwrite_statusline = 0$/;"	v
g:nvim_lsp	nvim/autoload/plugged/nvim-lspconfig/plugin/nvim_lsp.vim	/^let g:nvim_lsp = 1$/;"	v
g:obsession_append	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        let g:obsession_append = [string]$/;"	v
g:onedark_terminal_italics	.config/nvim/themes/one.vim	/^let g:onedark_terminal_italics=1$/;"	v
g:plug_home	nvim/autoload/plug.vim	/^  let g:plug_home = home$/;"	v
g:plugs	nvim/autoload/plug.vim	/^    let g:plugs[name] = spec$/;"	v
g:plugs	nvim/autoload/plug.vim	/^  let g:plugs = {}$/;"	v
g:plugs_order	nvim/autoload/plug.vim	/^  let g:plugs_order = []$/;"	v
g:plugs_order	nvim/autoload/plug.vim	/^  let g:plugs_order = get(g:, 'plugs_order', keys(g:plugs))$/;"	v
g:polyglot_disabled	.config/nvim/configs/polyglot.vim	/^let g:polyglot_disabled = ['csv']$/;"	v
g:promptline_symbols	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/promptline.vim	/^    let g:promptline_symbols = {$/;"	v
g:python3_host_prog	.config/nvim/general/settings.vim	/^  let g:python3_host_prog  = '~\/.envs\/neovim\/bin\/python'$/;"	v
g:python3_host_prog	nvim/general/settings.vim	/^  let g:python3_host_prog  = '~\/.envs\/neovim\/bin\/python'$/;"	v
g:python_highlight_all	.config/nvim/configs/polyglot.vim	/^let g:python_highlight_all=1$/;"	v
g:qs_highlight_on_keys	.config/nvim/configs/quickscope.vim	/^let g:qs_highlight_on_keys = ['f', 'F', 't', 'T']$/;"	v
g:qs_max_chars	.config/nvim/configs/quickscope.vim	/^let g:qs_max_chars=150$/;"	v
g:rooter_cd_cmd	nvim/autoload/plugged/vim-rooter/plugin/rooter.vim	/^  let g:rooter_cd_cmd = 'cd'$/;"	v
g:rooter_cd_cmd	nvim/autoload/plugged/vim-rooter/plugin/rooter.vim	/^  let g:rooter_cd_cmd = 'lcd'$/;"	v
g:rooter_change_directory_for_non_project_files	nvim/autoload/plugged/vim-rooter/plugin/rooter.vim	/^  let g:rooter_change_directory_for_non_project_files = ''$/;"	v
g:rooter_change_directory_for_non_project_files	nvim/autoload/plugged/vim-rooter/test/test_rooter.vim	/^  let g:rooter_change_directory_for_non_project_files = ''$/;"	v
g:rooter_change_directory_for_non_project_files	nvim/autoload/plugged/vim-rooter/test/test_rooter.vim	/^  let g:rooter_change_directory_for_non_project_files = 'current'$/;"	v
g:rooter_change_directory_for_non_project_files	nvim/autoload/plugged/vim-rooter/test/test_rooter.vim	/^  let g:rooter_change_directory_for_non_project_files = 'home'$/;"	v
g:rooter_manual_only	nvim/autoload/plugged/vim-rooter/plugin/rooter.vim	/^  let g:rooter_manual_only = !g:rooter_manual_only$/;"	v
g:rooter_manual_only	nvim/autoload/plugged/vim-rooter/plugin/rooter.vim	/^  let g:rooter_manual_only = 0$/;"	v
g:rooter_patterns	nvim/autoload/plugged/vim-rooter/plugin/rooter.vim	/^  let g:rooter_patterns = ['.git', '_darcs', '.hg', '.bzr', '.svn', 'Makefile']$/;"	v
g:rooter_patterns	nvim/autoload/plugged/vim-rooter/test/test_rooter.vim	/^  let g:rooter_patterns = ['!^project', '*.txt']$/;"	v
g:rooter_patterns	nvim/autoload/plugged/vim-rooter/test/test_rooter.vim	/^  let g:rooter_patterns = ['!_git']$/;"	v
g:rooter_patterns	nvim/autoload/plugged/vim-rooter/test/test_rooter.vim	/^  let g:rooter_patterns = ['**\/bar.txt']$/;"	v
g:rooter_patterns	nvim/autoload/plugged/vim-rooter/test/test_rooter.vim	/^  let g:rooter_patterns = ['*.z']$/;"	v
g:rooter_patterns	nvim/autoload/plugged/vim-rooter/test/test_rooter.vim	/^  let g:rooter_patterns = ['=foo foo\/']$/;"	v
g:rooter_patterns	nvim/autoload/plugged/vim-rooter/test/test_rooter.vim	/^  let g:rooter_patterns = ['_git\/']$/;"	v
g:rooter_patterns	nvim/autoload/plugged/vim-rooter/test/test_rooter.vim	/^  let g:rooter_patterns = ['bar']$/;"	v
g:rooter_patterns	nvim/autoload/plugged/vim-rooter/test/test_rooter.vim	/^  let g:rooter_patterns = ['foo\\ foo\/bar.txt']$/;"	v
g:rooter_resolve_links	nvim/autoload/plugged/vim-rooter/plugin/rooter.vim	/^  let g:rooter_resolve_links = 0$/;"	v
g:rooter_resolve_links	nvim/autoload/plugged/vim-rooter/test/test_rooter.vim	/^  let g:rooter_resolve_links = 0$/;"	v
g:rooter_resolve_links	nvim/autoload/plugged/vim-rooter/test/test_rooter.vim	/^  let g:rooter_resolve_links = 1$/;"	v
g:rooter_silent_chdir	.config/nvim/configs/rooter.vim	/^let g:rooter_silent_chdir = 1$/;"	v
g:rooter_silent_chdir	nvim/autoload/plugged/vim-rooter/plugin/rooter.vim	/^  let g:rooter_silent_chdir = 0$/;"	v
g:rooter_silent_chdir	nvim/autoload/plugged/vim-rooter/test/test_rooter.vim	/^  let g:rooter_silent_chdir = 0$/;"	v
g:rooter_silent_chdir	nvim/configs/rooter.vim	/^let g:rooter_silent_chdir = 1$/;"	v
g:rooter_targets	nvim/autoload/plugged/vim-rooter/plugin/rooter.vim	/^  let g:rooter_targets = '\/,*'$/;"	v
g:rooter_targets	nvim/autoload/plugged/vim-rooter/test/test_rooter.vim	/^  let g:rooter_targets = '*.txt'$/;"	v
g:rooter_targets	nvim/autoload/plugged/vim-rooter/test/test_rooter.vim	/^  let g:rooter_targets = '\/'$/;"	v
g:rooter_targets	nvim/autoload/plugged/vim-rooter/test/test_rooter.vim	/^  let g:rooter_targets = '\/,*.txt,*.z'$/;"	v
g:rooter_use_lcd	nvim/autoload/plugged/vim-rooter/test/test_rooter.vim	/^  let g:rooter_use_lcd = 0$/;"	v
g:snips_author	nvim/autoload/plugged/vim-snippets/plugin/vimsnippets.vim	/^    let g:snips_author = "yourname"$/;"	v
g:snips_email	nvim/autoload/plugged/vim-snippets/plugin/vimsnippets.vim	/^    let g:snips_email = "yourname@email.com"$/;"	v
g:snips_github	nvim/autoload/plugged/vim-snippets/plugin/vimsnippets.vim	/^    let g:snips_github = "https:\/\/github.com\/yourname"$/;"	v
g:sonokai_better_performance	.config/nvim/themes/sonokai.vim	/^let g:sonokai_better_performance = 1$/;"	v
g:sonokai_better_performance	nvim/configs/sonokai.vim	/^let g:sonokai_better_performance = 1$/;"	v
g:sonokai_current_word	.config/nvim/themes/sonokai.vim	/^let g:sonokai_current_word= 'underline'$/;"	v
g:sonokai_current_word	nvim/configs/sonokai.vim	/^let g:sonokai_current_word= 'underline'$/;"	v
g:sonokai_disable_italic_comment	.config/nvim/themes/sonokai.vim	/^let g:sonokai_disable_italic_comment = 0$/;"	v
g:sonokai_disable_italic_comment	nvim/configs/sonokai.vim	/^let g:sonokai_disable_italic_comment = 0$/;"	v
g:sonokai_enable_italic	.config/nvim/themes/sonokai.vim	/^let g:sonokai_enable_italic = 1$/;"	v
g:sonokai_enable_italic	nvim/configs/sonokai.vim	/^let g:sonokai_enable_italic = 1$/;"	v
g:sonokai_last_modified	nvim/autoload/plugged/sonokai/after/ftplugin/text/sonokai.vim	/^let g:sonokai_last_modified = 'Mon 29 Jun 2020 10:07:19 AM UTC'$/;"	v
g:sonokai_loaded_file_types	nvim/autoload/plugged/sonokai/colors/sonokai.vim	/^let g:sonokai_loaded_file_types = []$/;"	v
g:sonokai_style	.config/nvim/themes/sonokai.vim	/^let g:sonokai_style = 'maia'$/;"	v
g:sonokai_style	nvim/configs/sonokai.vim	/^let g:sonokai_style = 'maia'$/;"	v
g:space_before_virtual_text	nvim/autoload/plugged/diagnostic-nvim/plugin/diagnostic.vim	/^    let g:space_before_virtual_text = 1$/;"	v
g:srcery_italic	.config/nvim/themes/srcery.vim	/^let g:srcery_italic = 1$/;"	v
g:strip_whitespace_confirm	.config/nvim/configs/betterwhitespace.vim	/^let g:strip_whitespace_confirm = 0$/;"	v
g:strip_whitespace_confirm	nvim/configs/betterwhitespace.vim	/^let g:strip_whitespace_confirm = 0$/;"	v
g:strip_whitespace_on_save	.config/nvim/configs/betterwhitespace.vim	/^let g:strip_whitespace_on_save = 1$/;"	v
g:strip_whitespace_on_save	nvim/configs/betterwhitespace.vim	/^let g:strip_whitespace_on_save = 1$/;"	v
g:syntastic_stl_format	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^    let g:syntastic_stl_format = _backup$/;"	v
g:syntastic_stl_format	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^    let g:syntastic_stl_format = get(g:, 'airline#extensions#syntastic#stl_format_err', '%E{[%fe/;"	v
g:syntastic_stl_format	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^    let g:syntastic_stl_format = get(g:, 'airline#extensions#syntastic#stl_format_warn', '%W{[%f/;"	v
g:taboo_tabline	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^  let g:taboo_tabline = 0$/;"	v
g:tagbar_status_func	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^  let g:tagbar_status_func = 'airline#extensions#tagbar#get_status'$/;"	v
g:terminal_ansi_colors	nvim/autoload/plugged/sonokai/colors/sonokai.vim	/^    let g:terminal_ansi_colors = [s:terminal.black[0], s:terminal.red[0], s:terminal.green[0], s/;"	v
g:terminal_color_0	nvim/autoload/plugged/sonokai/colors/sonokai.vim	/^    let g:terminal_color_0 = s:terminal.black[0]$/;"	v
g:terminal_color_1	nvim/autoload/plugged/sonokai/colors/sonokai.vim	/^    let g:terminal_color_1 = s:terminal.red[0]$/;"	v
g:terminal_color_10	nvim/autoload/plugged/sonokai/colors/sonokai.vim	/^    let g:terminal_color_10 = s:terminal.green[0]$/;"	v
g:terminal_color_11	nvim/autoload/plugged/sonokai/colors/sonokai.vim	/^    let g:terminal_color_11 = s:terminal.yellow[0]$/;"	v
g:terminal_color_12	nvim/autoload/plugged/sonokai/colors/sonokai.vim	/^    let g:terminal_color_12 = s:terminal.blue[0]$/;"	v
g:terminal_color_13	nvim/autoload/plugged/sonokai/colors/sonokai.vim	/^    let g:terminal_color_13 = s:terminal.purple[0]$/;"	v
g:terminal_color_14	nvim/autoload/plugged/sonokai/colors/sonokai.vim	/^    let g:terminal_color_14 = s:terminal.cyan[0]$/;"	v
g:terminal_color_15	nvim/autoload/plugged/sonokai/colors/sonokai.vim	/^    let g:terminal_color_15 = s:terminal.white[0]$/;"	v
g:terminal_color_2	nvim/autoload/plugged/sonokai/colors/sonokai.vim	/^    let g:terminal_color_2 = s:terminal.green[0]$/;"	v
g:terminal_color_3	nvim/autoload/plugged/sonokai/colors/sonokai.vim	/^    let g:terminal_color_3 = s:terminal.yellow[0]$/;"	v
g:terminal_color_4	nvim/autoload/plugged/sonokai/colors/sonokai.vim	/^    let g:terminal_color_4 = s:terminal.blue[0]$/;"	v
g:terminal_color_5	nvim/autoload/plugged/sonokai/colors/sonokai.vim	/^    let g:terminal_color_5 = s:terminal.purple[0]$/;"	v
g:terminal_color_6	nvim/autoload/plugged/sonokai/colors/sonokai.vim	/^    let g:terminal_color_6 = s:terminal.cyan[0]$/;"	v
g:terminal_color_7	nvim/autoload/plugged/sonokai/colors/sonokai.vim	/^    let g:terminal_color_7 = s:terminal.white[0]$/;"	v
g:terminal_color_8	nvim/autoload/plugged/sonokai/colors/sonokai.vim	/^    let g:terminal_color_8 = s:terminal.black[0]$/;"	v
g:terminal_color_9	nvim/autoload/plugged/sonokai/colors/sonokai.vim	/^    let g:terminal_color_9 = s:terminal.red[0]$/;"	v
g:test_user_autocmd	nvim/autoload/plugged/vim-rooter/test/test_rooter.vim	/^  let g:test_user_autocmd = 0$/;"	v
g:testname	nvim/autoload/plugged/vim-rooter/test/runner.vim	/^let g:testname = expand('%')$/;"	v
g:tokyonight_current_word	.config/nvim/themes/tokionight.vim	/^let g:tokyonight_current_word='underline'$/;"	v
g:tokyonight_enable_italic	.config/nvim/themes/tokionight.vim	/^let g:tokyonight_enable_italic = 1$/;"	v
g:tokyonight_style	.config/nvim/themes/tokionight.vim	/^let g:tokyonight_style = 'storm' " available: night, storm$/;"	v
g:undotree_DiffAutoOpen	.config/nvim/configs/undotree.vim	/^  let g:undotree_DiffAutoOpen = 1$/;"	v
g:undotree_DiffAutoOpen	nvim/autoload/plugged/undotree/plugin/undotree.vim	/^    let g:undotree_DiffAutoOpen = 1$/;"	v
g:undotree_DiffCommand	nvim/autoload/plugged/undotree/plugin/undotree.vim	/^    let g:undotree_DiffCommand = "diff"$/;"	v
g:undotree_DiffpanelHeight	nvim/autoload/plugged/undotree/plugin/undotree.vim	/^    let g:undotree_DiffpanelHeight = 10$/;"	v
g:undotree_HelpLine	nvim/autoload/plugged/undotree/plugin/undotree.vim	/^    let g:undotree_HelpLine = 1$/;"	v
g:undotree_HighlightChangedText	nvim/autoload/plugged/undotree/plugin/undotree.vim	/^    let g:undotree_HighlightChangedText = 1$/;"	v
g:undotree_HighlightChangedWithSign	nvim/autoload/plugged/undotree/plugin/undotree.vim	/^    let g:undotree_HighlightChangedWithSign = 1$/;"	v
g:undotree_HighlightSyntaxAdd	nvim/autoload/plugged/undotree/plugin/undotree.vim	/^    let g:undotree_HighlightSyntaxAdd = "DiffAdd"$/;"	v
g:undotree_HighlightSyntaxChange	nvim/autoload/plugged/undotree/plugin/undotree.vim	/^    let g:undotree_HighlightSyntaxChange = "DiffChange"$/;"	v
g:undotree_HighlightSyntaxDel	nvim/autoload/plugged/undotree/plugin/undotree.vim	/^    let g:undotree_HighlightSyntaxDel = "DiffDelete"$/;"	v
g:undotree_RelativeTimestamp	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^    let g:undotree_RelativeTimestamp = !g:undotree_RelativeTimestamp$/;"	v
g:undotree_RelativeTimestamp	nvim/autoload/plugged/undotree/plugin/undotree.vim	/^    let g:undotree_RelativeTimestamp = 1$/;"	v
g:undotree_SetFocusWhenToggle	.config/nvim/configs/undotree.vim	/^  let g:undotree_SetFocusWhenToggle = 1$/;"	v
g:undotree_SetFocusWhenToggle	nvim/autoload/plugged/undotree/plugin/undotree.vim	/^    let g:undotree_SetFocusWhenToggle = 0$/;"	v
g:undotree_ShortIndicators	nvim/autoload/plugged/undotree/plugin/undotree.vim	/^    let g:undotree_ShortIndicators = 0$/;"	v
g:undotree_SplitWidth	nvim/autoload/plugged/undotree/plugin/undotree.vim	/^        let g:undotree_SplitWidth = 24$/;"	v
g:undotree_SplitWidth	nvim/autoload/plugged/undotree/plugin/undotree.vim	/^        let g:undotree_SplitWidth = 30$/;"	v
g:undotree_TreeNodeShape	nvim/autoload/plugged/undotree/plugin/undotree.vim	/^    let g:undotree_TreeNodeShape = '*'$/;"	v
g:undotree_WindowLayout	.config/nvim/configs/undotree.vim	/^  let g:undotree_WindowLayout = 1$/;"	v
g:undotree_WindowLayout	nvim/autoload/plugged/undotree/plugin/undotree.vim	/^    let g:undotree_WindowLayout = 1$/;"	v
g:unite_force_overwrite_statusline	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/unite.vim	/^  let g:unite_force_overwrite_statusline = 0$/;"	v
g:vim_jsx_pretty_colorful_config	.config/nvim/configs/polyglot.vim	/^let g:vim_jsx_pretty_colorful_config = 1$/;"	v
g:vim_markdown_preview_browser	nvim/autoload/plugged/vim-markdown-preview/plugin/vim-markdown-preview.vim	/^    let g:vim_markdown_preview_browser = 'Google Chrome'$/;"	v
g:vim_markdown_preview_browser	nvim/autoload/plugged/vim-markdown-preview/plugin/vim-markdown-preview.vim	/^    let g:vim_markdown_preview_browser = 'Safari'$/;"	v
g:vim_markdown_preview_github	nvim/autoload/plugged/vim-markdown-preview/plugin/vim-markdown-preview.vim	/^  let g:vim_markdown_preview_github = 0$/;"	v
g:vim_markdown_preview_hotkey	nvim/autoload/plugged/vim-markdown-preview/plugin/vim-markdown-preview.vim	/^    let g:vim_markdown_preview_hotkey='<C-p>'$/;"	v
g:vim_markdown_preview_pandoc	nvim/autoload/plugged/vim-markdown-preview/plugin/vim-markdown-preview.vim	/^  let g:vim_markdown_preview_pandoc = 0$/;"	v
g:vim_markdown_preview_perl	nvim/autoload/plugged/vim-markdown-preview/plugin/vim-markdown-preview.vim	/^  let g:vim_markdown_preview_perl = 0$/;"	v
g:vim_markdown_preview_temp_file	nvim/autoload/plugged/vim-markdown-preview/plugin/vim-markdown-preview.vim	/^  let g:vim_markdown_preview_temp_file = 0$/;"	v
g:vim_markdown_preview_toggle	nvim/autoload/plugged/vim-markdown-preview/plugin/vim-markdown-preview.vim	/^  let g:vim_markdown_preview_toggle = 0$/;"	v
g:vim_markdown_preview_use_xdg_open	nvim/autoload/plugged/vim-markdown-preview/plugin/vim-markdown-preview.vim	/^    let g:vim_markdown_preview_use_xdg_open = 0$/;"	v
g:vimfiler_force_overwrite_statusline	nvim/autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^    let g:vimfiler_force_overwrite_statusline = 0$/;"	v
g:vista_default_executive	.config/nvim/configs/vista.vim	/^let g:vista_default_executive = 'ctags'$/;"	v
g:vista_fzf_preview	.config/nvim/configs/vista.vim	/^let g:vista_fzf_preview = ['right:50%']$/;"	v
g:vmp_activate_script	nvim/autoload/plugged/vim-markdown-preview/plugin/vim-markdown-preview.vim	/^    let g:vmp_activate_script = g:vmp_script_path . '\/applescript\/activate-vmp.scpt'$/;"	v
g:vmp_osname	nvim/autoload/plugged/vim-markdown-preview/plugin/vim-markdown-preview.vim	/^    let g:vmp_osname = 'mac'$/;"	v
g:vmp_osname	nvim/autoload/plugged/vim-markdown-preview/plugin/vim-markdown-preview.vim	/^    let g:vmp_osname = 'unix'$/;"	v
g:vmp_osname	nvim/autoload/plugged/vim-markdown-preview/plugin/vim-markdown-preview.vim	/^  let g:vmp_osname = 'win32'$/;"	v
g:vmp_osname	nvim/autoload/plugged/vim-markdown-preview/plugin/vim-markdown-preview.vim	/^let g:vmp_osname = 'Unidentified'$/;"	v
g:vmp_script_path	nvim/autoload/plugged/vim-markdown-preview/plugin/vim-markdown-preview.vim	/^let g:vmp_script_path = resolve(expand('<sfile>:p:h'))$/;"	v
g:vmp_search_script	nvim/autoload/plugged/vim-markdown-preview/plugin/vim-markdown-preview.vim	/^    let g:vmp_search_script = g:vmp_script_path . '\/applescript\/search-for-vmp.scpt'$/;"	v
g:webdevicons_enable	nvim/autoload/plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^  let g:webdevicons_enable = 1$/;"	v
g:webdevicons_enable_airline_statusline	nvim/autoload/plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^  let g:webdevicons_enable_airline_statusline = 1$/;"	v
g:webdevicons_enable_airline_tabline	.config/nvim/themes/airline.vim	/^let g:webdevicons_enable_airline_tabline = 1$/;"	v
g:webdevicons_enable_airline_tabline	nvim/autoload/plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^  let g:webdevicons_enable_airline_tabline = 1$/;"	v
g:webdevicons_enable_nerdtree	nvim/autoload/plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^     let g:webdevicons_enable_nerdtree = 0$/;"	v
g:webdevicons_enable_nerdtree	nvim/autoload/plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^  let g:webdevicons_enable_nerdtree = 1$/;"	v
g:webdevicons_gui_glyph_fix	nvim/autoload/plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^    let g:webdevicons_gui_glyph_fix = 0$/;"	v
g:webdevicons_gui_glyph_fix	nvim/autoload/plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^    let g:webdevicons_gui_glyph_fix = 1$/;"	v
g:xtab_cwds	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        let g:xtab_cwds[tabpagenr()-1] = t:cwd$/;"	v
g:xtabline_alt_action	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    let g:xtabline_alt_action = get(g:, 'xtabline_alt_action', "buffer #")$/;"	v
g:xtabline_changing_buffer	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        let g:xtabline_changing_buffer = 1$/;"	v
g:xtabline_include_previews	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    let g:xtabline_include_previews = get(g:, 'xtabline_include_previews', 1)$/;"	v
gather_candidates	nvim/autoload/plugged/neosnippet.vim/rplugin/python3/denite/source/neosnippet.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gather_candidates	nvim/autoload/plugged/neosnippet.vim/rplugin/python3/deoplete/sources/neosnippet.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gc	nvim/autoload/plugged/vim-commentary/plugin/commentary.vim	/^  nmap gc  <Plug>Commentary$/;"	m
gc	nvim/autoload/plugged/vim-commentary/plugin/commentary.vim	/^  omap gc  <Plug>Commentary$/;"	m
gc	nvim/autoload/plugged/vim-commentary/plugin/commentary.vim	/^  xmap gc  <Plug>Commentary$/;"	m
gcc	nvim/autoload/plugged/vim-commentary/plugin/commentary.vim	/^  nmap gcc <Plug>CommentaryLine$/;"	m
gcu	nvim/autoload/plugged/vim-commentary/plugin/commentary.vim	/^  nmap gcu <Plug>Commentary<Plug>Commentary$/;"	m
gd	.config/nvim/configs/coc.vim	/^nmap <silent> gd <Plug>(coc-definition)$/;"	m
gdscript	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## gdscript$/;"	s	chapter:Configurations
generate_readme	nvim/autoload/plugged/nvim-lspconfig/scripts/docgen.lua	/^local function generate_readme(template_file, params)$/;"	f
getCompletionItems	nvim/autoload/plugged/completion-nvim/lua/completion/complete.lua	/^local function getCompletionItems(items_array, prefix)$/;"	f
getPositionParam	nvim/autoload/plugged/completion-nvim/lua/completion/source.lua	/^local getPositionParam = function()$/;"	f
getScopedChain	nvim/autoload/plugged/completion-nvim/lua/completion/chain_completion.lua	/^local function getScopedChain(ft_subtree)$/;"	f
getTriggerCharacter	nvim/autoload/plugged/completion-nvim/lua/completion/source.lua	/^local getTriggerCharacter = function()$/;"	f
get_byte_offset	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/tsrange.lua	/^local function get_byte_offset(buf, row, col)$/;"	f
get_command	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/install.lua	/^local function get_command(cmd)$/;"	f
get_comment_format	nvim/autoload/plugged/vim-snippets/pythonx/vimsnippets.py	/^def get_comment_format():$/;"	f
get_completion_word	nvim/autoload/plugged/completion-nvim/lua/completion/source/lsp.lua	/^local function get_completion_word(item, prefix, suffix)$/;"	f
get_context_aware_snippets	nvim/autoload/plugged/completion-nvim/lua/completion/source/lsp.lua	/^local function get_context_aware_snippets(item, completion_item, line_to_cursor)$/;"	f
get_diagnostics_count	nvim/autoload/plugged/diagnostic-nvim/lua/diagnostic.lua	/^local get_diagnostics_count = function(diagnostics, bufnr)$/;"	f
get_dir	nvim/autoload/plugged/editorconfig-vim/tests/core/editorconfig	/^function get_dir()$/;"	f
get_indents	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/indent.lua	/^local get_indents = utils.memoize_by_buf_tick(function(bufnr)$/;"	f
get_install_info	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/util.lua	/^  local function get_install_info()$/;"	f
get_job_status	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/install.lua	/^local function get_job_status()$/;"	f
get_latest_pyls	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/pyls_ms.lua	/^local function get_latest_pyls()$/;"	f
get_line_for_node	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter.lua	/^local get_line_for_node = function(node, type_patterns, transform_fn)$/;"	f
get_node_at_line	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/indent.lua	/^local function get_node_at_line(root, lnum)$/;"	f
get_option	nvim/autoload/plugged/vim-snippets/pythonx/javascript_snippets.py	/^def get_option(snip, option, default=None):$/;"	f
get_query_guard	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^local function get_query_guard(query)$/;"	f
get_revision	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/install.lua	/^local function get_revision(lang)$/;"	f
getcolors	.config/bspwm/bspwmrc	/^getcolors () {$/;"	f
getcolors	.config/bspwm/bspwmrcBACK	/^getcolors () {$/;"	f
ghcide	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## ghcide$/;"	s	chapter:Configurations
gi	.config/nvim/configs/coc.vim	/^nmap <silent> gi <Plug>(coc-implementation)$/;"	m
git.addGBlameToBufferVar	.config/nvim/coc-settings.json	/^  "git.addGBlameToBufferVar": true$/;"	b
git.addGBlameToVirtualText	.config/nvim/coc-settings.json	/^  "git.addGBlameToVirtualText": true,$/;"	b
git.showCommitInFloating	.config/nvim/coc-settings.json	/^  "git.showCommitInFloating": true,$/;"	b
go	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	o
gopls	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## gopls$/;"	s	chapter:Configurations
gr	.config/nvim/configs/coc.vim	/^nmap <silent> gr <Plug>(coc-references)$/;"	m
gui_normal	nvim/autoload/plugged/nvim-treesitter/plugin/nvim-treesitter.vim	/^let gui_normal = s:has_attr('fg', 'gui') ? 'foreground' : 'NONE'$/;"	v
gutentags#add_job	nvim/autoload/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#add_job(module, tags_file, data) abort$/;"	f
gutentags#build_default_job_options	nvim/autoload/plugged/vim-gutentags/autoload/gutentags.vim	/^    function! gutentags#build_default_job_options(module) abort$/;"	f
gutentags#chdir	nvim/autoload/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#chdir(path)$/;"	f
gutentags#cscope#generate	nvim/autoload/plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^function! gutentags#cscope#generate(proj_dir, tags_file, gen_opts) abort$/;"	f
gutentags#cscope#init	nvim/autoload/plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^function! gutentags#cscope#init(project_root) abort$/;"	f
gutentags#cscope#on_job_exit	nvim/autoload/plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^function! gutentags#cscope#on_job_exit(job, exit_val) abort$/;"	f
gutentags#ctags#generate	nvim/autoload/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! gutentags#ctags#generate(proj_dir, tags_file, gen_opts) abort$/;"	f
gutentags#ctags#init	nvim/autoload/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! gutentags#ctags#init(project_root) abort$/;"	f
gutentags#ctags#on_job_exit	nvim/autoload/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! gutentags#ctags#on_job_exit(job, exit_val) abort$/;"	f
gutentags#default_get_project_root	nvim/autoload/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#default_get_project_root(path) abort$/;"	f
gutentags#default_stderr_cb	nvim/autoload/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#default_stderr_cb(chan, msg) abort$/;"	f
gutentags#default_stdout_cb	nvim/autoload/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#default_stdout_cb(chan, msg) abort$/;"	f
gutentags#error	nvim/autoload/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#error(message)$/;"	f
gutentags#fake	nvim/autoload/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#fake(...)$/;"	f
gutentags#find_job_index_by_data	nvim/autoload/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#find_job_index_by_data(module, data) abort$/;"	f
gutentags#find_job_index_by_tags_file	nvim/autoload/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#find_job_index_by_tags_file(module, tags_file) abort$/;"	f
gutentags#get_cachefile	nvim/autoload/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_cachefile(root_dir, filename) abort$/;"	f
gutentags#get_job_data	nvim/autoload/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_job_data(module, job_idx) abort$/;"	f
gutentags#get_job_tags_file	nvim/autoload/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_job_tags_file(module, job_idx) abort$/;"	f
gutentags#get_plat_file	nvim/autoload/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_plat_file(filename) abort$/;"	f
gutentags#get_project_file_list_cmd	nvim/autoload/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_project_file_list_cmd(path) abort$/;"	f
gutentags#get_project_info	nvim/autoload/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_project_info(path) abort$/;"	f
gutentags#get_project_root	nvim/autoload/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_project_root(path) abort$/;"	f
gutentags#get_res_file	nvim/autoload/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_res_file(filename) abort$/;"	f
gutentags#gtags_cscope#generate	nvim/autoload/plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! gutentags#gtags_cscope#generate(proj_dir, tags_file, gen_opts) abort$/;"	f
gutentags#gtags_cscope#init	nvim/autoload/plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! gutentags#gtags_cscope#init(project_root) abort$/;"	f
gutentags#gtags_cscope#on_job_exit	nvim/autoload/plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! gutentags#gtags_cscope#on_job_exit(job, exit_val) abort$/;"	f
gutentags#inprogress	nvim/autoload/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#inprogress()$/;"	f
gutentags#is_path_rooted	nvim/autoload/plugged/vim-gutentags/autoload/gutentags.vim	/^    function! gutentags#is_path_rooted(path) abort$/;"	f
gutentags#make_args	nvim/autoload/plugged/vim-gutentags/autoload/gutentags.vim	/^    function! gutentags#make_args(cmd) abort$/;"	f
gutentags#normalizepath	nvim/autoload/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#normalizepath(path)$/;"	f
gutentags#on_vim_leave_pre	nvim/autoload/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#on_vim_leave_pre() abort$/;"	f
gutentags#remove_job	nvim/autoload/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#remove_job(module, job_idx) abort$/;"	f
gutentags#remove_job_by_data	nvim/autoload/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#remove_job_by_data(module, data) abort$/;"	f
gutentags#rescan	nvim/autoload/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#rescan(...)$/;"	f
gutentags#setup_gutentags	nvim/autoload/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#setup_gutentags() abort$/;"	f
gutentags#shellslash	nvim/autoload/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#shellslash(path)$/;"	f
gutentags#start_job	nvim/autoload/plugged/vim-gutentags/autoload/gutentags.vim	/^    function! gutentags#start_job(cmd, opts) abort$/;"	f
gutentags#statusline	nvim/autoload/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#statusline(...) abort$/;"	f
gutentags#statusline_cb	nvim/autoload/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#statusline_cb(fmt_cb, ...) abort$/;"	f
gutentags#stripslash	nvim/autoload/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#stripslash(path)$/;"	f
gutentags#throw	nvim/autoload/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#throw(message)$/;"	f
gutentags#toggletrace	nvim/autoload/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#toggletrace(...)$/;"	f
gutentags#trace	nvim/autoload/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#trace(message, ...)$/;"	f
gutentags#validate_cmd	nvim/autoload/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#validate_cmd(cmd) abort$/;"	f
gutentags#warning	nvim/autoload/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#warning(message)$/;"	f
gutentags_detect	nvim/autoload/plugged/vim-gutentags/plugin/gutentags.vim	/^augroup gutentags_detect$/;"	a
gy	.config/nvim/configs/coc.vim	/^nmap <silent> gy <Plug>(coc-type-definition)$/;"	m
handle	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/install.lua	/^  handle = luv.spawn(attr.cmd, attr.opts, vim.schedule_wrap(function(code)$/;"	f
hasConfirmedCompletion	nvim/autoload/plugged/completion-nvim/lua/completion.lua	/^local function hasConfirmedCompletion()$/;"	f
has_cjk	nvim/autoload/plugged/vim-snippets/pythonx/vimsnippets.py	/^def has_cjk(s):$/;"	f
hasfile	nvim/autoload/plugged/minimap.vim/bin/minimap_generator.bat	/^:hasfile$/;"	l
haskell	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	o
health#completion_nvim#check	nvim/autoload/plugged/completion-nvim/autoload/health/completion_nvim.vim	/^function! health#completion_nvim#check()$/;"	f
health#nvim_lsp#check	nvim/autoload/plugged/nvim-lspconfig/autoload/health/nvim_lsp.vim	/^function! health#nvim_lsp#check()$/;"	f
health#nvim_treesitter#check	nvim/autoload/plugged/nvim-treesitter/autoload/health/nvim_treesitter.vim	/^function! health#nvim_treesitter#check()$/;"	f
height	.config/polybar/base.ini	/^height = 2.9%$/;"	k	section:section/base
height	polybar/base.ini	/^height = 2.9%$/;"	k	section:section/base
helpers	nvim/autoload/plugged/nvim-lspconfig/test/nvim_lsp_spec.lua	/^local helpers = require('test.functional.helpers')(after_each)$/;"	f
here	nvim/autoload/plugged/editorconfig-vim/tests/core/editorconfig.bat	/^set here=%~dp0$/;"	v
hie	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## hie$/;"	s	chapter:Configurations
highlight_range	nvim/autoload/plugged/diagnostic-nvim/lua/diagnostic/util.lua	/^local function highlight_range(bufnr, ns, hiname, start, finish)$/;"	f
highlight_region	nvim/autoload/plugged/completion-nvim/lua/completion/hover.lua	/^  local function highlight_region(ft, start, finish)$/;"	f
highlightedyank	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^      augroup highlightedyank-pause-quenching$/;"	a
highlightedyank	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^  augroup highlightedyank-highlight$/;"	a
highlightedyank	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^  augroup highlightedyank-pause-quenching$/;"	a
highlightedyank	nvim/autoload/plugged/vim-highlightedyank/plugin/highlightedyank.vim	/^    augroup highlightedyank-event-OptionSet$/;"	a
highlightedyank	nvim/autoload/plugged/vim-highlightedyank/plugin/highlightedyank.vim	/^  augroup highlightedyank$/;"	a
highlightedyank	nvim/autoload/plugged/vim-highlightedyank/plugin/highlightedyank.vim	/^augroup highlightedyank-event-ColorScheme$/;"	a
highlightedyank#debounce	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank.vim	/^function! highlightedyank#debounce() abort "{{{$/;"	f
highlightedyank#highlight#add	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/highlight.vim	/^function! highlightedyank#highlight#add(hi_group, start, end, type, duration) abort "{{{$/;"	f
highlightedyank#highlight#delete	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/highlight.vim	/^function! highlightedyank#highlight#delete() abort "{{{$/;"	f
highlightedyank#highlight#new	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/highlight.vim	/^function! highlightedyank#highlight#new(hi_group, start, end, type) abort  "{{{$/;"	f
highlightedyank#obsolete#clock#new	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/clock.vim	/^function! highlightedyank#obsolete#clock#new() abort  "{{{$/;"	f
highlightedyank#obsolete#highlight#cancel	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^function! highlightedyank#obsolete#highlight#cancel(...) abort "{{{$/;"	f
highlightedyank#obsolete#highlight#new	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^function! highlightedyank#obsolete#highlight#new(region) abort  "{{{$/;"	f
highlightedyank#obsolete#highlightedyank#off	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^function! highlightedyank#obsolete#highlightedyank#off() abort "{{{$/;"	f
highlightedyank#obsolete#highlightedyank#on	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^function! highlightedyank#obsolete#highlightedyank#on() abort "{{{$/;"	f
highlightedyank#obsolete#highlightedyank#operatorfunc	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^function! highlightedyank#obsolete#highlightedyank#operatorfunc(motionwise, ...) abort "{{{$/;"	f
highlightedyank#obsolete#highlightedyank#setoperatorfunc	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^function! highlightedyank#obsolete#highlightedyank#setoperatorfunc() abort "{{{$/;"	f
highlightedyank#obsolete#highlightedyank#toggle	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^function! highlightedyank#obsolete#highlightedyank#toggle() abort "{{{$/;"	f
highlightedyank#obsolete#highlightedyank#yank	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^function! highlightedyank#obsolete#highlightedyank#yank(mode) abort  "{{{$/;"	f
highlightedyank#off	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank.vim	/^function! highlightedyank#off() abort "{{{$/;"	f
highlightedyank#on	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank.vim	/^function! highlightedyank#on() abort "{{{$/;"	f
highlightedyank#toggle	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank.vim	/^function! highlightedyank#toggle() abort "{{{$/;"	f
hl	nvim/autoload/plugged/vim-airline/t/highlighter.vim	/^    let hl = airline#highlighter#get_highlight('Foo1_to_Foo2')$/;"	v
hl	nvim/autoload/plugged/vim-airline/t/themes.vim	/^    let hl = airline#themes#get_highlight('Foo', 'bold', 'italic')$/;"	v
hl	nvim/autoload/plugged/vim-airline/t/themes.vim	/^    let hl = airline#themes#get_highlight2(['Foo','bg'], ['Foo','fg'], 'italic', 'bold')$/;"	v
hls	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## hls$/;"	s	chapter:Configurations
hscale	nvim/autoload/plugged/minimap.vim/bin/minimap_generator.bat	/^set hscale=%1$/;"	v
html	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## html$/;"	s	chapter:Configurations
html	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	o
html.enable	.config/nvim/coc-settings.json	/^  "html.enable": true,$/;"	b
html.filetypes	.config/nvim/coc-settings.json	/^  "html.filetypes": [$/;"	a
html.format.enable	.config/nvim/coc-settings.json	/^  "html.format.enable": true,$/;"	b
hunks ([vim-gitgutter][29] & [vim-signify][30] & [coc-git][59])	nvim/autoload/plugged/vim-airline/README.md	/^#### hunks ([vim-gitgutter][29] & [vim-signify][30] & [coc-git][59])$/;"	t	section:Features""Seamless integration
identifier	nvim/autoload/plugged/nvim-treesitter/queries/python/locals.scm	/^  (identifier) @definition.parameter)$/;"	f
idx	nvim/autoload/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^$idx = 0$/;"	v
if	.config/nvim/configs/coc.vim	/^omap if <Plug>(coc-funcobj-i)$/;"	m
if	.config/nvim/configs/coc.vim	/^xmap if <Plug>(coc-funcobj-i)$/;"	m
incsearch	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/autocmd.vim	/^  augroup incsearch-auto-nohlsearch$/;"	a
incsearch	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/autocmd.vim	/^  augroup incsearch-auto-nohlsearch-on-insert-leave$/;"	a
incsearch	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/highlight.vim	/^augroup incsearch-update-visual-highlight$/;"	a
incsearch	nvim/autoload/plugged/incsearch.vim/test/default_settings.vim	/^  augroup incsearch-themis$/;"	a
incsearch#_go	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^function! incsearch#_go(config) abort$/;"	f
incsearch#autocmd#auto_nohlsearch	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/autocmd.vim	/^function! incsearch#autocmd#auto_nohlsearch(nest) abort$/;"	f
incsearch#autocmd#is_set	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/autocmd.vim	/^function! incsearch#autocmd#is_set() abort$/;"	f
incsearch#call	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^function! incsearch#call(...) abort$/;"	f
incsearch#cli	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^function! incsearch#cli() abort$/;"	f
incsearch#cli#get	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/cli.vim	/^function! incsearch#cli#get() abort$/;"	f
incsearch#cli#make	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/cli.vim	/^function! incsearch#cli#make(config) abort$/;"	f
incsearch#cli#set	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/cli.vim	/^function! incsearch#cli#set(cli, config) abort$/;"	f
incsearch#config#make	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/config.vim	/^function! incsearch#config#make(additional) abort$/;"	f
incsearch#detect_case	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^function! incsearch#detect_case(pattern) abort$/;"	f
incsearch#execute_search	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^  function! incsearch#execute_search(...) abort$/;"	f
incsearch#go	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^function! incsearch#go(...) abort$/;"	f
incsearch#highlight#backward_pattern	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/highlight.vim	/^function! incsearch#highlight#backward_pattern(pattern, from_pos) abort$/;"	f
incsearch#highlight#capture	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/highlight.vim	/^function! incsearch#highlight#capture(hlname) abort$/;"	f
incsearch#highlight#emulate_visual_highlight	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/highlight.vim	/^function! incsearch#highlight#emulate_visual_highlight(...) abort$/;"	f
incsearch#highlight#forward_pattern	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/highlight.vim	/^function! incsearch#highlight#forward_pattern(pattern, from_pos) abort$/;"	f
incsearch#highlight#get_visual_hlobj	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/highlight.vim	/^function! incsearch#highlight#get_visual_hlobj() abort$/;"	f
incsearch#highlight#get_visual_pattern	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/highlight.vim	/^function! incsearch#highlight#get_visual_pattern(mode, v_start_pos, v_end_pos) abort$/;"	f
incsearch#highlight#hgm	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/highlight.vim	/^function! incsearch#highlight#hgm() abort " highlight group management$/;"	f
incsearch#highlight#incremental_highlight	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/highlight.vim	/^function! incsearch#highlight#incremental_highlight(pattern, ...) abort$/;"	f
incsearch#highlight#off	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/highlight.vim	/^function! incsearch#highlight#off() abort$/;"	f
incsearch#highlight#on	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/highlight.vim	/^function! incsearch#highlight#on() abort$/;"	f
incsearch#highlight#turn_off	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/highlight.vim	/^function! incsearch#highlight#turn_off(hldict) abort$/;"	f
incsearch#highlight#turn_on	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/highlight.vim	/^function! incsearch#highlight#turn_on(hldict) abort$/;"	f
incsearch#highlight#update	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/highlight.vim	/^function! incsearch#highlight#update() abort$/;"	f
incsearch#magic	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^function! incsearch#magic() abort$/;"	f
incsearch#make	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^function! incsearch#make(...) abort$/;"	f
incsearch#over#extend#enrich	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/extend.vim	/^function! incsearch#over#extend#enrich(cli) abort$/;"	f
incsearch#over#modules#bracketed_paste#make	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/modules/bracketed_paste.vim	/^function! incsearch#over#modules#bracketed_paste#make() abort$/;"	f
incsearch#over#modules#bulk_input_char#make	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/modules/bulk_input_char.vim	/^function! incsearch#over#modules#bulk_input_char#make() abort$/;"	f
incsearch#over#modules#exit#make	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/modules/exit.vim	/^function! incsearch#over#modules#exit#make() abort$/;"	f
incsearch#over#modules#incsearch#make	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/modules/incsearch.vim	/^function! incsearch#over#modules#incsearch#make() abort$/;"	f
incsearch#over#modules#insert_register#make	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/modules/insert_register.vim	/^function! incsearch#over#modules#insert_register#make() abort$/;"	f
incsearch#over#modules#module_management#make	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/modules/module_management.vim	/^function! incsearch#over#modules#module_management#make(modules) abort$/;"	f
incsearch#over#modules#pattern_saver#make	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/modules/pattern_saver.vim	/^function! incsearch#over#modules#pattern_saver#make() abort$/;"	f
incsearch#parse_pattern	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^function! incsearch#parse_pattern(expr, search_key) abort$/;"	f
incsearch#util#deepextend	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/util.vim	/^function! incsearch#util#deepextend(...) abort$/;"	f
incsearch#util#import	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/util.vim	/^function! incsearch#util#import() abort$/;"	f
incsearch#with_ignore_foldopen	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^function! incsearch#with_ignore_foldopen(F, ...) abort$/;"	f
indent	nvim/autoload/plugged/nvim-lspconfig/scripts/docgen.lua	/^local function indent(n, s)$/;"	f
inherit	.config/polybar/bars.ini	/^inherit = section\/base$/;"	k	section:bar/left
inherit	.config/polybar/bars.ini	/^inherit = section\/base$/;"	k	section:bar/main
inherit	.config/polybar/bars.ini	/^inherit = section\/base$/;"	k	section:bar/right
inherit	polybar/bars.ini	/^inherit = section\/base$/;"	k	section:bar/left
inherit	polybar/bars.ini	/^inherit = section\/base$/;"	k	section:bar/main
inherit	polybar/bars.ini	/^inherit = section\/base$/;"	k	section:bar/right
insert_to_path	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^  local function insert_to_path(object, path, value)$/;"	f
install	nvim/autoload/plugged/neosnippet.vim/Makefile	/^install: vim-themis$/;"	t
install	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/util.lua	/^  local function install()$/;"	f
install	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/install.lua	/^local function install(with_sync, ask_reinstall)$/;"	f
install_health	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/health.lua	/^local function install_health()$/;"	f
install_info	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/info.lua	/^local function install_info()$/;"	f
install_lang	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/install.lua	/^local function install_lang(lang, ask_reinstall, cache_folder, install_folder, with_sync)$/;"	f
installed	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/install.lua	/^      installed = vim.tbl_filter(function(l) return vim.tbl_contains(maintained, l) end, install/;"	f
intelephense	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## intelephense$/;"	s	chapter:Configurations
interval	.config/polybar/modules.ini	/^interval = 3$/;"	k	section:module/memory
interval	polybar/modules.ini	/^interval = 3$/;"	k	section:module/memory
is_absolute	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/util.lua	/^  local function is_absolute(filename)$/;"	f
is_descendant	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/util.lua	/^  local function is_descendant(root, path)$/;"	f
is_dir	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/util.lua	/^  local function is_dir(filename)$/;"	f
is_file	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/util.lua	/^  local function is_file(filename)$/;"	f
is_fs_root	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/util.lua	/^    is_fs_root = function(path)$/;"	f
is_supported	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^      is_supported = function() return true end$/;"	f
it	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/util.lua	/^    local function it(s, v)$/;"	f
items	nvim/autoload/plugged/completion-nvim/lua/completion/hover.lua	/^    local items = api.nvim_call_function('complete_info', {{"eval", "selected", "items", "user_d/;"	f
iter	nvim/autoload/plugged/completion-nvim/lua/completion/source/path.lua	/^    local function iter()$/;"	f
iter_cmd_sync	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/install.lua	/^local function iter_cmd_sync(cmd_list)$/;"	f
iterate_parents	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/util.lua	/^  local function iterate_parents(path)$/;"	f
iterator	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^  local function iterator()$/;"	f
java	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	o
javascript	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	o
jdtls	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## jdtls$/;"	s	chapter:Configurations
jedi_language_server	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## jedi_language_server$/;"	s	chapter:Configurations
jsdoc	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	o
json	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	o
jsonls	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## jsonls$/;"	s	chapter:Configurations
julia	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	o
julials	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## julials$/;"	s	chapter:Configurations
jumpToLocation	nvim/autoload/plugged/diagnostic-nvim/lua/jumpLoc.lua	/^local function jumpToLocation(i)$/;"	f
keyword_spacing	nvim/autoload/plugged/vim-snippets/pythonx/javascript_snippets.py	/^def keyword_spacing(snip):$/;"	f
kotlin_language_server	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## kotlin_language_server$/;"	s	chapter:Configurations
label	.config/polybar/modules.ini	/^label = "    \/  %title:0:52:...%"$/;"	k	section:module/xwindow
label	.config/polybar/modules.ini	/^label = %date% %time%$/;"	k	section:module/date
label	.config/polybar/modules.ini	/^label = %percentage%%$/;"	k	section:module/cpu
label	.config/polybar/modules.ini	/^label = %percentage_used%%$/;"	k	section:module/memory
label	polybar/modules.ini	/^label = "    \/  %title:0:52:...%"$/;"	k	section:module/xwindow
label	polybar/modules.ini	/^label = %date% %time%$/;"	k	section:module/date
label	polybar/modules.ini	/^label = %percentage%%$/;"	k	section:module/cpu
label	polybar/modules.ini	/^label = %percentage_used%%$/;"	k	section:module/memory
lat	.config/redshift.conf	/^lat=20.618199$/;"	k	section:manual
leader	.config/picom.conf	/^detect-client-leader = true;$/;"	k
leader	.config/picom/picom_rounded_corners.conf	/^detect-client-leader = true;$/;"	k
leanls	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## leanls$/;"	s	chapter:Configurations
left	.config/polybar/bars.ini	/^modules-left = xwindow$/;"	k	section:bar/main
left	.config/polybar/bars.ini	/^modules-left= cpu memory$/;"	k	section:bar/left
left	.config/polybar/bars.ini	/^modules-left= cpu memory$/;"	k	section:bar/right
left	polybar/bars.ini	/^modules-left = xwindow$/;"	k	section:bar/main
left	polybar/bars.ini	/^modules-left= cpu memory$/;"	k	section:bar/right
lint	nvim/autoload/plugged/neosnippet.vim/Makefile	/^lint:$/;"	t
lint	nvim/autoload/plugged/nvim-lspconfig/Makefile	/^lint:$/;"	t
list.selectedSignText	.config/nvim/coc-settings.json	/^  "list.selectedSignText": " ",$/;"	s
lon	.config/redshift.conf	/^lon=-103.4211811$/;"	k	section:manual
lua	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	o
maia	nvim/autoload/plugged/sonokai/alacritty/README.md	/^## maia$/;"	s	chapter:Installation
main	nvim/autoload/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/test_files/4_space.py	/^def main():$/;"	f
maintainer	nvim/autoload/plugged/vim-snippets/addon-info.json	/^  "maintainer" : "honza @ github & others",$/;"	s
make_box	nvim/autoload/plugged/vim-snippets/pythonx/vimsnippets.py	/^def make_box(twidth, bwidth=None):$/;"	f
make_config	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/configs.lua	/^    local make_config = function(_root_dir)$/;"	f
make_floating_popup_options	nvim/autoload/plugged/completion-nvim/lua/completion/hover.lua	/^local make_floating_popup_options = function(width, height, opts)$/;"	f
make_implemented_servers_list	nvim/autoload/plugged/nvim-lspconfig/scripts/docgen.lua	/^local function make_implemented_servers_list()$/;"	f
make_installer	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/als.lua	/^local function make_installer()$/;"	f
make_installer	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/elixirls.lua	/^local function make_installer()$/;"	f
make_installer	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/jdtls.lua	/^local function make_installer()$/;"	f
make_installer	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/metals.lua	/^local function make_installer()$/;"	f
make_installer	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/omnisharp.lua	/^local function make_installer()$/;"	f
make_installer	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/pyls_ms.lua	/^local function make_installer()$/;"	f
make_installer	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/rnix.lua	/^local function make_installer()$/;"	f
make_installer	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/sumneko_lua.lua	/^local function make_installer()$/;"	f
make_lsp_sections	nvim/autoload/plugged/nvim-lspconfig/scripts/docgen.lua	/^local function make_lsp_sections()$/;"	f
make_parts	nvim/autoload/plugged/nvim-lspconfig/scripts/docgen.lua	/^local function make_parts(fns)$/;"	f
make_section	nvim/autoload/plugged/nvim-lspconfig/scripts/docgen.lua	/^local function make_section(indentlvl, sep, parts)$/;"	f
manager	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/configs.lua	/^    local manager = util.server_per_root_dir_manager(function(_root_dir)$/;"	f
manager.add	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/util.lua	/^  function manager.add(root_dir)$/;"	f
manager.clients	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/util.lua	/^  function manager.clients()$/;"	f
manager.debug	nvim/autoload/plugged/completion-nvim/lua/completion/manager.lua	/^function manager.debug()$/;"	f
manager.init	nvim/autoload/plugged/completion-nvim/lua/completion/manager.lua	/^function manager.init()$/;"	f
manager.try_add	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/configs.lua	/^    function manager.try_add()$/;"	f
manual	.config/redshift.conf	/^[manual]$/;"	s
map	nvim/autoload/plugged/vim-airline/t/themes.vim	/^    let map = airline#themes#generate_color_map($/;"	v
map_list	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/util.lua	/^local function map_list(t, func)$/;"	f
map_list	nvim/autoload/plugged/nvim-lspconfig/scripts/docgen.lua	/^local function map_list(t, func)$/;"	f
mapleader	.config/nvim/keys/mappings.vim	/^let mapleader = ','$/;"	v
mapleader	nvim/general/keys.vim	/^let mapleader = ','$/;"	v
markdown	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	o
matcher	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/util.lua	/^  local function matcher(path)$/;"	f
maxsize	.config/polybar/bars.ini	/^tray-maxsize = 15$/;"	k	section:bar/right
maxsize	polybar/bars.ini	/^tray-maxsize = 15$/;"	k	section:bar/right
metals	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## metals$/;"	s	chapter:Configurations
method	.config/redshift.conf	/^adjustment-method=vidmode$/;"	k	section:redshift
minimap#vim#MinimapClose	nvim/autoload/plugged/minimap.vim/autoload/minimap/vim.vim	/^function! minimap#vim#MinimapClose() abort$/;"	f
minimap#vim#MinimapOpen	nvim/autoload/plugged/minimap.vim/autoload/minimap/vim.vim	/^function! minimap#vim#MinimapOpen() abort$/;"	f
minimap#vim#MinimapRefresh	nvim/autoload/plugged/minimap.vim/autoload/minimap/vim.vim	/^function! minimap#vim#MinimapRefresh() abort$/;"	f
minimap#vim#MinimapToggle	nvim/autoload/plugged/minimap.vim/autoload/minimap/vim.vim	/^function! minimap#vim#MinimapToggle() abort$/;"	f
minimap#vim#MinimapUpdateHighlight	nvim/autoload/plugged/minimap.vim/autoload/minimap/vim.vim	/^function! minimap#vim#MinimapUpdateHighlight() abort$/;"	f
module.is_no_insert	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/NoInsert.vim	/^	function! module.is_no_insert(char)$/;"	f
module/bspwm	.config/polybar/modules.ini	/^[module\/bspwm]$/;"	s
module/bspwm	polybar/modules.ini	/^[module\/bspwm]$/;"	s
module/cpu	.config/polybar/modules.ini	/^[module\/cpu]$/;"	s
module/cpu	polybar/modules.ini	/^[module\/cpu]$/;"	s
module/date	.config/polybar/modules.ini	/^[module\/date]$/;"	s
module/date	polybar/modules.ini	/^[module\/date]$/;"	s
module/memory	.config/polybar/modules.ini	/^[module\/memory]$/;"	s
module/memory	polybar/modules.ini	/^[module\/memory]$/;"	s
module/mic	.config/polybar/modules.ini	/^[module\/mic]$/;"	s
module/xwindow	.config/polybar/modules.ini	/^[module\/xwindow]$/;"	s
module/xwindow	polybar/modules.ini	/^[module\/xwindow]$/;"	s
module_info	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/info.lua	/^local function module_info(mod)$/;"	f
monitor	.config/polybar/bars.ini	/^monitor = DVI-D-0$/;"	k	section:bar/main
monitor	.config/polybar/bars.ini	/^monitor = DVI-D-1$/;"	k	section:bar/right
monitor	.config/polybar/bars.ini	/^monitor = HDMI-0$/;"	k	section:bar/left
monitor	polybar/bars.ini	/^monitor = DVI-D-0$/;"	k	section:bar/main
monitor	polybar/bars.ini	/^monitor = DVI-D-1$/;"	k	section:bar/left
monitor	polybar/bars.ini	/^monitor = HDMI-0$/;"	k	section:bar/right
mt:__index	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp.lua	/^function mt:__index(k)$/;"	f
multi_value_keywords	nvim/autoload/plugged/editorconfig-vim/tests/core/tests/CMakeLists.txt	/^    set(multi_value_keywords ARGS)$/;"	v	function:new_ec_cli_test
multi_value_keywords	nvim/autoload/plugged/editorconfig-vim/tests/core/tests/cmake/runandsort.cmake	/^    set(multi_value_keywords CMDLINE ARGS)$/;"	v	function:run_and_sort
muted	.config/polybar/modules.ini	/^label-muted = 婢 muted$/;"	k	section:module/mic
mygroup	.config/nvim/configs/coc.vim	/^augroup mygroup$/;"	a
n	.config/nvim/configs/incsearch.vim	/^map n  <Plug>(incsearch-nohl-n)$/;"	m
n	nvim/autoload/plugged/incsearch.vim/test/autonohlsearch.vim	/^  map n  <Plug>(incsearch-nohl-n)$/;"	m
n	nvim/autoload/plugged/incsearch.vim/test/autonohlsearch.vim	/^  noremap n  n$/;"	m
n	nvim/autoload/plugged/incsearch.vim/test/n_and_N.vim	/^  noremap n  n$/;"	m
n	nvim/configs/incsearch.vim	/^map n  <Plug>(incsearch-nohl-n)$/;"	m
name	nvim/autoload/plugged/vim-snippets/addon-info.json	/^  "name" : "snipmate-snippets",$/;"	s
name:	nvim/autoload/plugged/nvim-treesitter/queries/python/highlights.scm	/^  name: (identifier) @parameter)$/;"	f
neocomplcache#sources#snippets_complete#define	nvim/autoload/plugged/neosnippet.vim/autoload/neocomplcache/sources/snippets_complete.vim	/^function! neocomplcache#sources#snippets_complete#define() abort$/;"	f
neocomplete#sources#neosnippet#define	nvim/autoload/plugged/neosnippet.vim/autoload/neocomplete/sources/neosnippet.vim	/^function! neocomplete#sources#neosnippet#define() abort$/;"	f
neosnippet	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/init.vim	/^  augroup neosnippet$/;"	a
neosnippet	nvim/autoload/plugged/neosnippet.vim/plugin/neosnippet.vim	/^augroup neosnippet$/;"	a
neosnippet#anonymous	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet.vim	/^function! neosnippet#anonymous(snippet) abort$/;"	f
neosnippet#commands#_clear_markers	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/commands.vim	/^function! neosnippet#commands#_clear_markers() abort$/;"	f
neosnippet#commands#_complete_target_snippets	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/commands.vim	/^function! neosnippet#commands#_complete_target_snippets(arglead, cmdline, cursorpos) abort$/;"	f
neosnippet#commands#_edit	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/commands.vim	/^function! neosnippet#commands#_edit(args) abort$/;"	f
neosnippet#commands#_edit_complete	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/commands.vim	/^function! neosnippet#commands#_edit_complete(arglead, cmdline, cursorpos) abort$/;"	f
neosnippet#commands#_filetype_complete	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/commands.vim	/^function! neosnippet#commands#_filetype_complete(arglead, cmdline, cursorpos) abort$/;"	f
neosnippet#commands#_make_cache	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/commands.vim	/^function! neosnippet#commands#_make_cache(filetype) abort$/;"	f
neosnippet#commands#_source	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/commands.vim	/^function! neosnippet#commands#_source(filename) abort$/;"	f
neosnippet#complete_done	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet.vim	/^function! neosnippet#complete_done() abort$/;"	f
neosnippet#expand	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet.vim	/^function! neosnippet#expand(trigger) abort$/;"	f
neosnippet#expandable	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet.vim	/^function! neosnippet#expandable() abort$/;"	f
neosnippet#expandable_or_jumpable	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet.vim	/^function! neosnippet#expandable_or_jumpable() abort$/;"	f
neosnippet#get_mirror_placeholder_marker_pattern	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet.vim	/^function! neosnippet#get_mirror_placeholder_marker_pattern() abort$/;"	f
neosnippet#get_mirror_placeholder_marker_substitute_pattern	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet.vim	/^function! neosnippet#get_mirror_placeholder_marker_substitute_pattern() abort$/;"	f
neosnippet#get_placeholder_marker_default_pattern	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet.vim	/^function! neosnippet#get_placeholder_marker_default_pattern() abort$/;"	f
neosnippet#get_placeholder_marker_pattern	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet.vim	/^function! neosnippet#get_placeholder_marker_pattern() abort$/;"	f
neosnippet#get_placeholder_marker_substitute_nonzero_pattern	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet.vim	/^function! neosnippet#get_placeholder_marker_substitute_nonzero_pattern() abort$/;"	f
neosnippet#get_placeholder_marker_substitute_pattern	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet.vim	/^function! neosnippet#get_placeholder_marker_substitute_pattern() abort$/;"	f
neosnippet#get_placeholder_marker_substitute_zero_pattern	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet.vim	/^function! neosnippet#get_placeholder_marker_substitute_zero_pattern() abort$/;"	f
neosnippet#get_placeholder_target_marker_pattern	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet.vim	/^function! neosnippet#get_placeholder_target_marker_pattern() abort$/;"	f
neosnippet#get_runtime_snippets_directory	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet.vim	/^function! neosnippet#get_runtime_snippets_directory() abort$/;"	f
neosnippet#get_snippets_directory	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet.vim	/^function! neosnippet#get_snippets_directory() abort$/;"	f
neosnippet#get_sync_placeholder_marker_default_pattern	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet.vim	/^function! neosnippet#get_sync_placeholder_marker_default_pattern() abort$/;"	f
neosnippet#get_sync_placeholder_marker_pattern	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet.vim	/^function! neosnippet#get_sync_placeholder_marker_pattern() abort$/;"	f
neosnippet#get_user_snippets_directory	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet.vim	/^function! neosnippet#get_user_snippets_directory() abort$/;"	f
neosnippet#handlers#_all_clear_markers	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/handlers.vim	/^function! neosnippet#handlers#_all_clear_markers() abort$/;"	f
neosnippet#handlers#_cursor_moved	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/handlers.vim	/^function! neosnippet#handlers#_cursor_moved() abort$/;"	f
neosnippet#helpers#delete_selected_text	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/helpers.vim	/^function! neosnippet#helpers#delete_selected_text(type, ...) abort$/;"	f
neosnippet#helpers#get_completion_snippets	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/helpers.vim	/^function! neosnippet#helpers#get_completion_snippets() abort$/;"	f
neosnippet#helpers#get_cursor_snippet	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/helpers.vim	/^function! neosnippet#helpers#get_cursor_snippet(snippets, cur_text) abort$/;"	f
neosnippet#helpers#get_filetype	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/helpers.vim	/^function! neosnippet#helpers#get_filetype() abort$/;"	f
neosnippet#helpers#get_lspitem	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/helpers.vim	/^function! neosnippet#helpers#get_lspitem(user_data) abort$/;"	f
neosnippet#helpers#get_selected_text	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/helpers.vim	/^function! neosnippet#helpers#get_selected_text(type, ...) abort$/;"	f
neosnippet#helpers#get_snippet_files	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/helpers.vim	/^function! neosnippet#helpers#get_snippet_files(filetype) abort$/;"	f
neosnippet#helpers#get_snippets	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/helpers.vim	/^function! neosnippet#helpers#get_snippets(...) abort$/;"	f
neosnippet#helpers#get_snippets_directory	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/helpers.vim	/^function! neosnippet#helpers#get_snippets_directory(...) abort$/;"	f
neosnippet#helpers#get_snippets_files	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/helpers.vim	/^function! neosnippet#helpers#get_snippets_files(filetype) abort$/;"	f
neosnippet#helpers#get_user_data	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/helpers.vim	/^function! neosnippet#helpers#get_user_data(completed_item) abort$/;"	f
neosnippet#helpers#json2vim	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/helpers.vim	/^function! neosnippet#helpers#json2vim(expr) abort$/;"	f
neosnippet#helpers#substitute_selected_text	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/helpers.vim	/^function! neosnippet#helpers#substitute_selected_text(type, text) abort$/;"	f
neosnippet#helpers#vim2json	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/helpers.vim	/^function! neosnippet#helpers#vim2json(expr) abort$/;"	f
neosnippet#init#_initialize	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/init.vim	/^function! neosnippet#init#_initialize() abort$/;"	f
neosnippet#init#check	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/init.vim	/^function! neosnippet#init#check() abort$/;"	f
neosnippet#jumpable	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet.vim	/^function! neosnippet#jumpable() abort$/;"	f
neosnippet#mappings#_anonymous	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#_anonymous(snippet) abort$/;"	f
neosnippet#mappings#_clear_select_mode_mappings	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#_clear_select_mode_mappings() abort$/;"	f
neosnippet#mappings#_complete_done	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#_complete_done(cur_text, col) abort$/;"	f
neosnippet#mappings#_expand	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#_expand(trigger) abort$/;"	f
neosnippet#mappings#_expand_target	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#_expand_target() abort$/;"	f
neosnippet#mappings#_expand_target_trigger	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#_expand_target_trigger(trigger) abort$/;"	f
neosnippet#mappings#_pre_trigger	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#_pre_trigger() abort$/;"	f
neosnippet#mappings#_register_oneshot_snippet	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#_register_oneshot_snippet() abort$/;"	f
neosnippet#mappings#_trigger	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#_trigger(function) abort$/;"	f
neosnippet#mappings#completed_expandable	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#completed_expandable() abort$/;"	f
neosnippet#mappings#expand_impl	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#expand_impl() abort$/;"	f
neosnippet#mappings#expand_or_jump_impl	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#expand_or_jump_impl() abort$/;"	f
neosnippet#mappings#expandable	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#expandable() abort$/;"	f
neosnippet#mappings#expandable_or_jumpable	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#expandable_or_jumpable() abort$/;"	f
neosnippet#mappings#jump_impl	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#jump_impl() abort$/;"	f
neosnippet#mappings#jump_or_expand_impl	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#jump_or_expand_impl() abort$/;"	f
neosnippet#mappings#jumpable	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#jumpable() abort$/;"	f
neosnippet#parser#_conceal_argument	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/parser.vim	/^function! neosnippet#parser#_conceal_argument(arg, cnt, args) abort$/;"	f
neosnippet#parser#_get_completed_snippet	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/parser.vim	/^function! neosnippet#parser#_get_completed_snippet(completed_item, cur_text, next_text) abort$/;"	f
neosnippet#parser#_get_in_paren	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/parser.vim	/^function! neosnippet#parser#_get_in_paren(key, pair, str) abort$/;"	f
neosnippet#parser#_initialize_snippet	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/parser.vim	/^function! neosnippet#parser#_initialize_snippet(dict, path, line, pattern, name) abort$/;"	f
neosnippet#parser#_initialize_snippet_options	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/parser.vim	/^function! neosnippet#parser#_initialize_snippet_options() abort$/;"	f
neosnippet#parser#_parse_snippet	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/parser.vim	/^function! neosnippet#parser#_parse_snippet(filename, trigger) abort$/;"	f
neosnippet#parser#_parse_snippets	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/parser.vim	/^function! neosnippet#parser#_parse_snippets(filename) abort$/;"	f
neosnippet#util#escape_pattern	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#escape_pattern(...) abort$/;"	f
neosnippet#util#expand	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#expand(path) abort$/;"	f
neosnippet#util#get_buffer_config	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#get_buffer_config($/;"	f
neosnippet#util#get_cur_text	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#get_cur_text() abort$/;"	f
neosnippet#util#get_last_status	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#get_last_status(...) abort$/;"	f
neosnippet#util#get_next_text	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#get_next_text() abort$/;"	f
neosnippet#util#get_vital	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#get_vital() abort$/;"	f
neosnippet#util#has_vimproc	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#has_vimproc(...) abort$/;"	f
neosnippet#util#iconv	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#iconv(...) abort$/;"	f
neosnippet#util#is_mac	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#is_mac(...) abort$/;"	f
neosnippet#util#is_sudo	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#is_sudo() abort$/;"	f
neosnippet#util#is_windows	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#is_windows(...) abort$/;"	f
neosnippet#util#option2list	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#option2list(str) abort$/;"	f
neosnippet#util#parse_options	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#parse_options(args, options_list) abort$/;"	f
neosnippet#util#print_error	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#print_error(string) abort$/;"	f
neosnippet#util#set_default	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#set_default(var, val, ...) abort $/;"	f
neosnippet#util#set_dictionary_helper	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#set_dictionary_helper(...) abort$/;"	f
neosnippet#util#strwidthpart	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#strwidthpart(...) abort$/;"	f
neosnippet#util#substitute_path_separator	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#substitute_path_separator(...) abort$/;"	f
neosnippet#util#system	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#system(...) abort$/;"	f
neosnippet#util#truncate	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#truncate(...) abort$/;"	f
neosnippet#util#uniq	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#uniq(list) abort$/;"	f
neosnippet#variables#clear_expand_stack	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/variables.vim	/^function! neosnippet#variables#clear_expand_stack() abort$/;"	f
neosnippet#variables#current_neosnippet	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/variables.vim	/^function! neosnippet#variables#current_neosnippet() abort$/;"	f
neosnippet#variables#data_dir	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/variables.vim	/^function! neosnippet#variables#data_dir() abort$/;"	f
neosnippet#variables#expand_stack	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/variables.vim	/^function! neosnippet#variables#expand_stack() abort$/;"	f
neosnippet#variables#pop_expand_stack	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/variables.vim	/^function! neosnippet#variables#pop_expand_stack() abort$/;"	f
neosnippet#variables#runtime_dir	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/variables.vim	/^function! neosnippet#variables#runtime_dir() abort$/;"	f
neosnippet#variables#set_snippets	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/variables.vim	/^function! neosnippet#variables#set_snippets(list) abort$/;"	f
neosnippet#variables#snippets	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/variables.vim	/^function! neosnippet#variables#snippets() abort$/;"	f
neosnippet#variables#snippets_dir	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/variables.vim	/^function! neosnippet#variables#snippets_dir() abort$/;"	f
neosnippet#view#_clear_markers	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/view.vim	/^function! neosnippet#view#_clear_markers(expand_info) abort$/;"	f
neosnippet#view#_expand	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/view.vim	/^function! neosnippet#view#_expand(cur_text, col, trigger_name) abort$/;"	f
neosnippet#view#_get_snippet_range	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/view.vim	/^function! neosnippet#view#_get_snippet_range(begin_line, begin_patterns, end_line, end_patterns)/;"	f
neosnippet#view#_insert	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/view.vim	/^function! neosnippet#view#_insert(snippet, options, cur_text, col) abort$/;"	f
neosnippet#view#_jump	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/view.vim	/^function! neosnippet#view#_jump(_, col) abort$/;"	f
neosnippet#view#_search_outof_range	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/view.vim	/^function! neosnippet#view#_search_outof_range(col) abort$/;"	f
neosnippet#view#_search_snippet_range	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/view.vim	/^function! neosnippet#view#_search_snippet_range(start, end, cnt, ...) abort$/;"	f
new_config.on_attach	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/configs.lua	/^      new_config.on_attach = vim.schedule_wrap(function(client, bufnr)$/;"	f
new_config.on_exit	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/util.lua	/^      new_config.on_exit = M.add_hook_before(new_config.on_exit, function()$/;"	f
new_config.on_init	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/configs.lua	/^      new_config.on_init = util.add_hook_after(new_config.on_init, function(client, _result)$/;"	f
new_ec_cli_test	nvim/autoload/plugged/editorconfig-vim/tests/core/tests/CMakeLists.txt	/^function(new_ec_cli_test)$/;"	f
new_ec_test	nvim/autoload/plugged/editorconfig-vim/tests/core/tests/CMakeLists.txt	/^function(new_ec_test name ec_file src_file regex)$/;"	f
new_ec_test_full_ec_file_path	nvim/autoload/plugged/editorconfig-vim/tests/core/tests/CMakeLists.txt	/^function(new_ec_test_full_ec_file_path name ec_file src_file regex)$/;"	f
new_ec_test_multiline	nvim/autoload/plugged/editorconfig-vim/tests/core/tests/CMakeLists.txt	/^function(new_ec_test_multiline name ec_file src_file regex)$/;"	f
new_ec_test_version	nvim/autoload/plugged/editorconfig-vim/tests/core/tests/CMakeLists.txt	/^function(new_ec_test_version name ec_file src_file regex version)$/;"	f
night	.config/redshift.conf	/^brightness-night=0.6$/;"	k	section:redshift
night	.config/redshift.conf	/^temp-night=3500$/;"	k	section:redshift
nimls	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## nimls$/;"	s	chapter:Configurations
nix	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	o
nofile	nvim/autoload/plugged/minimap.vim/bin/minimap_generator.bat	/^:nofile$/;"	l
npcall	nvim/autoload/plugged/completion-nvim/lua/completion/hover.lua	/^local function npcall(fn, ...)$/;"	f
nvim-lspconfig	nvim/autoload/plugged/nvim-lspconfig/README.md	/^# nvim-lspconfig$/;"	c
nvim-lspconfig	nvim/autoload/plugged/nvim-lspconfig/scripts/README_template.md	/^# nvim-lspconfig$/;"	c
nvim_treesitter#available_modules	nvim/autoload/plugged/nvim-treesitter/autoload/nvim_treesitter.vim	/^function! nvim_treesitter#available_modules(arglead, cmdline, cursorpos) abort$/;"	f
nvim_treesitter#foldexpr	nvim/autoload/plugged/nvim-treesitter/autoload/nvim_treesitter.vim	/^function! nvim_treesitter#foldexpr() abort$/;"	f
nvim_treesitter#indent	nvim/autoload/plugged/nvim-treesitter/autoload/nvim_treesitter.vim	/^function! nvim_treesitter#indent() abort$/;"	f
nvim_treesitter#installable_parsers	nvim/autoload/plugged/nvim-treesitter/autoload/nvim_treesitter.vim	/^function! nvim_treesitter#installable_parsers(arglead, cmdline, cursorpos) abort$/;"	f
nvim_treesitter#installed_parsers	nvim/autoload/plugged/nvim-treesitter/autoload/nvim_treesitter.vim	/^function! nvim_treesitter#installed_parsers(arglead, cmdline, cursorpos) abort$/;"	f
nvim_treesitter#statusline	nvim/autoload/plugged/nvim-treesitter/autoload/nvim_treesitter.vim	/^function! nvim_treesitter#statusline(...) abort$/;"	f
o	nvim/autoload/plug.vim	/^      nmap <buffer> o <plug>(plug-preview)$/;"	m
ocaml	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	o
ocaml_interface	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	o
ocamlls	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## ocamlls$/;"	s	chapter:Configurations
ocamllsp	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## ocamllsp$/;"	s	chapter:Configurations
ok_or_nil	nvim/autoload/plugged/completion-nvim/lua/completion/hover.lua	/^local function ok_or_nil(status, ...)$/;"	f
omnisharp	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## omnisharp$/;"	s	chapter:Configurations
onDirScanned	nvim/autoload/plugged/completion-nvim/lua/completion/source/path.lua	/^local function onDirScanned(_, data)$/;"	f
on_attach	nvim/lua/_lspconfig.lua	/^local on_attach = function(client)$/;"	f
on_bytes	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/languagetree.lua	/^      on_bytes = function() self:update() end$/;"	f
on_changedtick	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/ts_utils.lua	/^          on_changedtick = function() cache[bufnr] = fn(bufnr) end,$/;"	f
on_detach	nvim/autoload/plugged/diagnostic-nvim/lua/diagnostic/util.lua	/^      on_detach = function(b)$/;"	f
on_detach	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/caching.lua	/^        on_detach = function()$/;"	f
on_detach	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/ts_utils.lua	/^          on_detach = function() cache[bufnr] = nil end$/;"	f
on_event	nvim/autoload/plugged/neosnippet.vim/rplugin/python3/deoplete/sources/neosnippet.py	/^    def on_event(self, context):$/;"	m	class:Source
on_exit	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/util.lua	/^  local function on_exit(job_id, code, event_type)$/;"	f
on_init	nvim/autoload/plugged/neosnippet.vim/rplugin/python3/denite/source/neosnippet.py	/^    def on_init(self, context):$/;"	m	class:Source
on_init	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/clangd.lua	/^      on_init = [[function to handle changing offsetEncoding]];$/;"	f
on_new_config	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/als.lua	/^  on_new_config = function(config)$/;"	f
on_new_config	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/bashls.lua	/^  on_new_config = function(new_config)$/;"	f
on_new_config	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/codeqlls.lua	/^    on_new_config = function(config)$/;"	f
on_new_config	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/cssls.lua	/^  on_new_config = function(new_config)$/;"	f
on_new_config	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/diagnosticls.lua	/^  on_new_config = function(new_config)$/;"	f
on_new_config	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/dockerls.lua	/^  on_new_config = function(new_config)$/;"	f
on_new_config	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/elixirls.lua	/^    on_new_config = function(config)$/;"	f
on_new_config	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/elmls.lua	/^  on_new_config = function(new_config)$/;"	f
on_new_config	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/html.lua	/^  on_new_config = function(new_config)$/;"	f
on_new_config	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/intelephense.lua	/^  on_new_config = function(new_config)$/;"	f
on_new_config	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/jdtls.lua	/^  on_new_config = function(config)$/;"	f
on_new_config	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/jsonls.lua	/^  on_new_config = function(new_config)$/;"	f
on_new_config	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/metals.lua	/^  on_new_config = function(config)$/;"	f
on_new_config	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/ocamlls.lua	/^  on_new_config = function(new_config)$/;"	f
on_new_config	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/omnisharp.lua	/^    on_new_config = function(config)$/;"	f
on_new_config	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/purescriptls.lua	/^  on_new_config = function(new_config)$/;"	f
on_new_config	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/pyls_ms.lua	/^    on_new_config = function(config)$/;"	f
on_new_config	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/rnix.lua	/^    on_new_config = function(config)$/;"	f
on_new_config	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/sqlls.lua	/^  on_new_config = function(config)$/;"	f
on_new_config	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/sumneko_lua.lua	/^  on_new_config = function(config)$/;"	f
on_new_config	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/tsserver.lua	/^  on_new_config = function(new_config)$/;"	f
on_new_config	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/vimls.lua	/^    on_new_config = function(new_config)$/;"	f
on_new_config	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/vuels.lua	/^  on_new_config = function(new_config)$/;"	f
on_new_config	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/yamlls.lua	/^  on_new_config = function(new_config)$/;"	f
one_value_keywords	nvim/autoload/plugged/editorconfig-vim/tests/core/tests/CMakeLists.txt	/^    set(one_value_keywords NAME MATCH)$/;"	v	function:new_ec_cli_test
one_value_keywords	nvim/autoload/plugged/editorconfig-vim/tests/core/tests/cmake/runandsort.cmake	/^    set(one_value_keywords RETVAL RETVAL_FAILURE)$/;"	v	function:run_and_sort
opacity	.config/picom.conf	/^active-opacity = 1;$/;"	k
opacity	.config/picom.conf	/^detect-client-opacity = true;$/;"	k
opacity	.config/picom.conf	/^frame-opacity = 1;$/;"	k
opacity	.config/picom.conf	/^inactive-opacity = 1;$/;"	k
opacity	.config/picom.conf	/^shadow-opacity = 0.5;$/;"	k
opacity	.config/picom/picom.conf	/^shadow-opacity      = 0.1;$/;"	k
opacity	.config/picom/picom_rounded_corners.conf	/^inactive-opacity = 0.50;$/;"	k
opacity	.config/picom/picom_rounded_corners.conf	/^shadow-opacity = 0.5;$/;"	k
option_keywords	nvim/autoload/plugged/editorconfig-vim/tests/core/tests/cmake/runandsort.cmake	/^    set(option_keywords CAPTURE_STDERR TRIM_INITIAL_LEADING_SPACE)$/;"	v	function:run_and_sort
opts.sink	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^  function! opts.sink(lines)$/;"	f
output	nvim/autoload/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^        $output = ""$/;"	v
override	.config/picom.conf	/^inactive-opacity-override = false;$/;"	k
override	.config/picom/picom_rounded_corners.conf	/^inactive-opacity-override = false;$/;"	k
padding	.config/polybar/bars.ini	/^tray-padding = 1$/;"	k	section:bar/right
padding	.config/polybar/modules.ini	/^format-padding = 2$/;"	k	section:module/cpu
padding	.config/polybar/modules.ini	/^format-padding = 2$/;"	k	section:module/date
padding	.config/polybar/modules.ini	/^format-padding = 2$/;"	k	section:module/memory
padding	nvim/autoload/plugged/minimap.vim/bin/minimap_generator.bat	/^set padding=%3$/;"	v
padding	polybar/bars.ini	/^tray-padding = 1$/;"	k	section:bar/right
padding	polybar/modules.ini	/^format-padding = 2$/;"	k	section:module/cpu
padding	polybar/modules.ini	/^format-padding = 2$/;"	k	section:module/date
padding	polybar/modules.ini	/^format-padding = 2$/;"	k	section:module/memory
path_join	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/util.lua	/^  local function path_join(...)$/;"	f
path_separator_backslash_in_cmd_line_regex	nvim/autoload/plugged/editorconfig-vim/tests/core/tests/filetree/CMakeLists.txt	/^    set(path_separator_backslash_in_cmd_line_regex "^[ \\t\\n\\r]*$")$/;"	v
path_separator_backslash_in_cmd_line_regex	nvim/autoload/plugged/editorconfig-vim/tests/core/tests/filetree/CMakeLists.txt	/^    set(path_separator_backslash_in_cmd_line_regex "^key1=value1[ \\t\\n\\r]*$")$/;"	v
php	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	o
plug#	nvim/autoload/plug.vim	/^function! plug#(repo, ...)$/;"	f
plug#begin	nvim/autoload/plug.vim	/^function! plug#begin(...)$/;"	f
plug#end	nvim/autoload/plug.vim	/^function! plug#end()$/;"	f
plug#helptags	nvim/autoload/plug.vim	/^function! plug#helptags()$/;"	f
plug#load	nvim/autoload/plug.vim	/^function! plug#load(...)$/;"	f
plug#shellescape	nvim/autoload/plug.vim	/^function! plug#shellescape(arg, ...)$/;"	f
plugin	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/highlight.vim	/^augroup plugin-incsearch-highlight$/;"	a
plugin	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    augroup plugin-xtabline$/;"	a
plugin/editorconfig.vim	nvim/autoload/plugged/editorconfig-vim/tests/plugin/spec/editorconfig_spec.rb	/^  describe 'plugin\/editorconfig.vim' do$/;"	d
position	.config/polybar/bars.ini	/^tray-position = right$/;"	k	section:bar/right
position	polybar/bars.ini	/^tray-position = left$/;"	k	section:bar/right
position_sort	nvim/autoload/plugged/diagnostic-nvim/lua/diagnostic/util.lua	/^local position_sort = sort_by_key(function(v)$/;"	f
possible	.config/picom.conf	/^unredir-if-possible = false;$/;"	k
prettier.eslintIntegration	.config/nvim/coc-settings.json	/^  "prettier.eslintIntegration": true,$/;"	b
print_info_module	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/info.lua	/^local function print_info_module(sorted_languages, mod)$/;"	f
print_info_modules	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/info.lua	/^local function print_info_modules(sorted_languages)$/;"	f
provider	.config/redshift.conf	/^location-provider=manual$/;"	k	section:redshift
purescriptls	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## purescriptls$/;"	s	chapter:Configurations
pyls	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## pyls$/;"	s	chapter:Configurations
pyls_ms	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## pyls_ms$/;"	s	chapter:Configurations
python	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	o
python.analysis.diagnosticSeverityOverrides	.config/nvim/coc-settings.json	/^  "python.analysis.diagnosticSeverityOverrides": {$/;"	o
python.analysis.typeCheckingMode	.config/nvim/coc-settings.json	/^  "python.analysis.typeCheckingMode": "basic",$/;"	s
python.formatting.provider	.config/nvim/coc-settings.json	/^  "python.formatting.provider": "yapf",$/;"	s
python.jediPath	.config/nvim/coc-settings.json	/^  "python.jediPath": "~\/.envs\/neovim\/lib\/python3.8\/site-packages\/jedi",$/;"	s
python.linting.enabled	.config/nvim/coc-settings.json	/^  "python.linting.enabled": true,$/;"	b
python.linting.prospectorEnabled	.config/nvim/coc-settings.json	/^  "python.linting.prospectorEnabled": true,$/;"	b
python.linting.pylintEnabled	.config/nvim/coc-settings.json	/^  "python.linting.pylintEnabled": false,$/;"	b
q	nvim/autoload/plug.vim	/^  nnoremap <silent> <buffer> q  :if b:plug_preview==1<bar>pc<bar>endif<bar>bd<cr>$/;"	m
q	nvim/autoload/plug.vim	/^  nnoremap <silent> <buffer> q :q<cr>$/;"	m
query	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	o
query_health	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/health.lua	/^local function query_health(lang, query_group)$/;"	f
r_language_server	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## r_language_server$/;"	s	chapter:Configurations
radius	.config/picom.conf	/^shadow-radius = 10;$/;"	k
radius	.config/picom/picom.conf	/^shadow-radius       = -10;$/;"	k
radius	.config/picom/picom_rounded_corners.conf	/^corner-radius = 24.0;$/;"	k
radius	.config/picom/picom_rounded_corners.conf	/^shadow-radius = 20;$/;"	k
range_contains	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/languagetree.lua	/^local function range_contains(source, dest)$/;"	f
range_matches	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/incremental_selection.lua	/^local function range_matches(node)$/;"	f
rate	.config/picom.conf	/^refresh-rate = 0;$/;"	k
readfile	nvim/autoload/plugged/nvim-lspconfig/scripts/docgen.lua	/^local function readfile(path)$/;"	f
recurse_modules	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^local function recurse_modules(accumulator, root, path)$/;"	f
redshift	.config/redshift.conf	/^[redshift]$/;"	s
regex	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	o
remove_diagnostics	nvim/autoload/plugged/diagnostic-nvim/lua/diagnostic.lua	/^local remove_diagnostics = function(diagnostics)$/;"	f
reportGeneralTypeIssues	.config/nvim/coc-settings.json	/^    "reportGeneralTypeIssues": "none"$/;"	s	object:python.analysis.diagnosticSeverityOverrides
report_version	nvim/autoload/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^        '^(-v|--version)$' { $report_version = $true }$/;"	v
report_version	nvim/autoload/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^$report_version = $false$/;"	v
repository	nvim/autoload/plugged/vim-snippets/addon-info.json	/^  "repository" : {"type": "git", "url": "git:\/\/github.com\/honza\/snipmate-snippets.git"},$/;"	o
require_all_configs	nvim/autoload/plugged/nvim-lspconfig/scripts/docgen.lua	/^local function require_all_configs()$/;"	f
reset_progress_counter	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/install.lua	/^local function reset_progress_counter()$/;"	f
resolve_module	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^local function resolve_module(mod_name)$/;"	f
revision	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	s	object:bash
revision	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	s	object:c
revision	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	s	object:c_sharp
revision	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	s	object:cpp
revision	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	s	object:css
revision	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	s	object:dart
revision	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	s	object:elm
revision	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	s	object:fennel
revision	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	s	object:go
revision	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	s	object:haskell
revision	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	s	object:html
revision	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	s	object:java
revision	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	s	object:javascript
revision	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	s	object:jsdoc
revision	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	s	object:json
revision	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	s	object:julia
revision	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	s	object:lua
revision	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	s	object:markdown
revision	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	s	object:nix
revision	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	s	object:ocaml
revision	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	s	object:ocaml_interface
revision	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	s	object:php
revision	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	s	object:python
revision	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	s	object:query
revision	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	s	object:regex
revision	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	s	object:rst
revision	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	s	object:ruby
revision	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	s	object:rust
revision	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	s	object:scala
revision	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	s	object:swift
revision	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	s	object:toml
revision	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	s	object:tsx
revision	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	s	object:typescript
revision	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	s	object:vue
revision	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	s	object:yaml
right	.config/polybar/bars.ini	/^modules-right = mic date$/;"	k	section:bar/main
right	polybar/bars.ini	/^modules-right = date$/;"	k	section:bar/main
rls	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## rls$/;"	s	chapter:Configurations
rnix	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## rnix$/;"	s	chapter:Configurations
rome	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## rome$/;"	s	chapter:Configurations
root_dir	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/clangd.lua	/^    root_dir = function(fname)$/;"	f
root_dir	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/codeqlls.lua	/^        root_dir = function(fname)$/;"	f
root_dir	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/cssls.lua	/^    root_dir = function(fname)$/;"	f
root_dir	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/elixirls.lua	/^    root_dir = function(fname)$/;"	f
root_dir	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/elmls.lua	/^    root_dir = function(fname)$/;"	f
root_dir	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/html.lua	/^    root_dir = function(fname)$/;"	f
root_dir	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/intelephense.lua	/^    root_dir = function (pattern)$/;"	f
root_dir	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/jedi_language_server.lua	/^    root_dir = function(fname)$/;"	f
root_dir	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/julials.lua	/^    root_dir = function(fname)$/;"	f
root_dir	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/nimls.lua	/^    root_dir = function(fname)$/;"	f
root_dir	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/pyls.lua	/^    root_dir = function(fname)$/;"	f
root_dir	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/pyls_ms.lua	/^    root_dir = function(fname)$/;"	f
root_dir	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/r_language_server.lua	/^    root_dir = function(fname)$/;"	f
root_dir	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/rnix.lua	/^    root_dir = function(fname)$/;"	f
root_dir	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/rome.lua	/^    root_dir = function(fname)$/;"	f
root_dir	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/scry.lua	/^    root_dir = function(fname)$/;"	f
root_dir	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/sqlls.lua	/^    root_dir = function(fname)$/;"	f
root_dir	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/sumneko_lua.lua	/^    root_dir = function(fname)$/;"	f
root_dir	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/vimls.lua	/^    root_dir = function(fname)$/;"	f
rooter	nvim/autoload/plugged/vim-rooter/plugin/rooter.vim	/^augroup rooter$/;"	a
rst	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	o
ruby	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	o
rule	.config/picom/picom_rounded_corners.conf	/^opacity-rule = [$/;"	k
run_and_sort	nvim/autoload/plugged/editorconfig-vim/tests/core/tests/cmake/runandsort.cmake	/^function(run_and_sort)$/;"	f
run_install	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/install.lua	/^local function run_install(cache_folder, install_folder, lang, repo, with_sync)$/;"	f
run_process	nvim/autoload/plugged/editorconfig-vim/tests/core/ecvimlib.ps1	/^function global:run_process$/;"	f
runner.createJob	nvim/autoload/plugged/formatter.nvim/lua/format/runner.lua	/^function runner.createJob(cmd, args, lines)$/;"	f
runtime_queries	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^local function runtime_queries(lang, query_name)$/;"	f
rust	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	o
rust_analyzer	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## rust_analyzer$/;"	s	chapter:Configurations
s	nvim/autoload/plugged/vim-airline/t/section.vim	/^    let s = airline#section#create(['asdf', 'func'])$/;"	v
s	nvim/autoload/plugged/vim-airline/t/section.vim	/^    let s = airline#section#create(['conditional'])$/;"	v
s	nvim/autoload/plugged/vim-airline/t/section.vim	/^    let s = airline#section#create(['hi'])$/;"	v
s	nvim/autoload/plugged/vim-airline/t/section.vim	/^    let s = airline#section#create(['paste'])$/;"	v
s	nvim/autoload/plugged/vim-airline/t/section.vim	/^    let s = airline#section#create(['text', 'raw', 'func'])$/;"	v
s	nvim/autoload/plugged/vim-airline/t/section.vim	/^    let s = airline#section#create(['whitespace'])$/;"	v
s	nvim/autoload/plugged/vim-airline/t/section.vim	/^    let s = airline#section#create_left(['asdf', 'aaaa', 'raw'])$/;"	v
s	nvim/autoload/plugged/vim-airline/t/section.vim	/^    let s = airline#section#create_left(['asdf', 'raw'])$/;"	v
s	nvim/autoload/plugged/vim-airline/t/section.vim	/^    let s = airline#section#create_left(['text', 'text'])$/;"	v
s	nvim/autoload/plugged/vim-airline/t/section.vim	/^    let s = airline#section#create_right(['%t', 'asdf', '%{getcwd()}'])$/;"	v
s	nvim/autoload/plugged/vim-airline/t/section.vim	/^    let s = airline#section#create_right(['ffenc','%{strftime("%H:%M")}'])$/;"	v
s	nvim/autoload/plugged/vim-airline/t/section.vim	/^    let s = airline#section#create_right(['raw', '%f'])$/;"	v
s	nvim/autoload/plugged/vim-airline/t/section.vim	/^    let s = airline#section#create_right(['text', 'text'])$/;"	v
s:AUTOCMDEVENTS	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^let s:AUTOCMDEVENTS = getcompletion('', 'event')$/;"	v
s:ApplyConfig	nvim/autoload/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:ApplyConfig(config) abort " Set the buffer options {{{1$/;"	f
s:Cache	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/commands.vim	/^let s:Cache = neosnippet#util#get_vital().import('System.Cache.Deprecated')$/;"	v
s:Cache	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/parser.vim	/^let s:Cache = neosnippet#util#get_vital().import('System.Cache.Deprecated')$/;"	v
s:ChangedLines	nvim/autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:ChangedLines()$/;"	f
s:CheckDefined	nvim/autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^function! s:CheckDefined(colors)$/;"	f
s:ClearHighlighting	nvim/autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^    function! s:ClearHighlighting()$/;"	f
s:Counter	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:Counter(count) abort "{{{$/;"	f
s:Counter	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^let s:Counter = {$/;"	v
s:Counter._tick	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:Counter._tick(...) abort "{{{$/;"	f
s:Counter.finishif	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:Counter.finishif(func, args, ...) abort "{{{$/;"	f
s:Counter.hasdone	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:Counter.hasdone() abort "{{{$/;"	f
s:Counter.leftcount	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:Counter.leftcount() abort "{{{$/;"	f
s:Counter.repeat	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:Counter.repeat(...) abort "{{{$/;"	f
s:CursorHoldUpdate	nvim/autoload/plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:CursorHoldUpdate()$/;"	f
s:DEFAULTAUGROUP	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^let s:DEFAULTAUGROUP = 'vital-Schedule'$/;"	v
s:DIRECTION	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^let s:DIRECTION = { 'forward': 1, 'backward': 0 } " see :h v:searchforward$/;"	v
s:DIRECTION	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/cli.vim	/^let s:DIRECTION = { 'forward': 1, 'backward': 0 } " see :h v:searchforward$/;"	v
s:DIRECTION	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/highlight.vim	/^let s:DIRECTION = { 'forward': 1, 'backward': 0 } " see :h v:searchforward$/;"	v
s:DIRECTION	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/modules/incsearch.vim	/^let s:DIRECTION = { 'forward': 1, 'backward': 0 } " see :h v:searchforward$/;"	v
s:DIRECTION	nvim/autoload/plugged/incsearch.vim/test/n_and_N.vim	/^let s:DIRECTION = { 'backward': 0, 'forward': 1}$/;"	v
s:DetectWhitespace	nvim/autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:DetectWhitespace(line1, line2)$/;"	f
s:DevIconsGetArtifactFix	nvim/autoload/plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:DevIconsGetArtifactFix()$/;"	f
s:DisableShellSlash	nvim/autoload/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:DisableShellSlash() " {{{2$/;"	f
s:DisableStripWhitespaceOnSave	nvim/autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:DisableStripWhitespaceOnSave()$/;"	f
s:DisableWhitespace	nvim/autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:DisableWhitespace()$/;"	f
s:Do	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! s:Do(action)$/;"	f
s:Doautocmd	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/cli.vim	/^let s:Doautocmd = s:modules.get('Doautocmd')$/;"	v
s:EditorConfigEnable	nvim/autoload/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:EditorConfigEnable(should_enable)$/;"	f
s:EnableStripWhitespaceOnSave	nvim/autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:EnableStripWhitespaceOnSave()$/;"	f
s:EnableWhitespace	nvim/autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:EnableWhitespace()$/;"	f
s:Error	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^function! s:Error(msg, ...) abort$/;"	f
s:Event	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^let s:Event = {$/;"	v
s:Event.add	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:Event.add(augroup, event, pat, task) abort "{{{$/;"	f
s:Event.remove	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:Event.remove(augroup, event, pat, task) abort "{{{$/;"	f
s:ExcludeOther	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buflist.vim	/^function! s:ExcludeOther(nr, exclude_preview)$/;"	f
s:ExcludePaths	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buflist.vim	/^function! s:ExcludePaths(nr, exclude_paths)$/;"	f
s:FALSE	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^let s:FALSE = 0$/;"	v
s:FALSE	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/config.vim	/^let s:FALSE = 0$/;"	v
s:FALSE	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/highlight.vim	/^let s:FALSE = 0$/;"	v
s:FALSE	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/extend.vim	/^let s:FALSE = 0$/;"	v
s:FALSE	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/modules/incsearch.vim	/^let s:FALSE = 0$/;"	v
s:FALSE	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/util.vim	/^let s:FALSE = 0$/;"	v
s:FALSE	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^let s:FALSE = 0$/;"	v
s:FocusGainedHandler	nvim/autoload/plugged/vim-airline/plugin/airline.vim	/^function! s:FocusGainedHandler(timer)$/;"	f
s:GetFilenames	nvim/autoload/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:GetFilenames(path, filename) " {{{1$/;"	f
s:GetHiCmd	nvim/autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^function! s:GetHiCmd(list)$/;"	f
s:GotoTrailingWhitespace	nvim/autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:GotoTrailingWhitespace(search_backwards, from, to)$/;"	f
s:HAS_GUI_RUNNING	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^let s:HAS_GUI_RUNNING = has('gui_running')$/;"	v
s:HAS_GUI_RUNNING	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^let s:HAS_GUI_RUNNING = has('gui_running')$/;"	v
s:HAS_RELTIME_AND_FLOAT	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/clock.vim	/^let s:HAS_RELTIME_AND_FLOAT = has('reltime') && has('float')$/;"	v
s:HAS_TIMERS	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^let s:HAS_TIMERS = has('timers')$/;"	v
s:HIGROUP	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank.vim	/^let s:HIGROUP = 'HighlightedyankRegion'$/;"	v
s:HighlightEOLWhitespace	nvim/autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^    function! s:HighlightEOLWhitespace()$/;"	f
s:HighlightEOLWhitespaceExceptCurrentLine	nvim/autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^    function! s:HighlightEOLWhitespaceExceptCurrentLine()$/;"	f
s:I1	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:I1 = [ s:insert_side_fg[0] , s:insert_side_bg[0] , s:insert_side_fg[1] , s:insert_side_bg[/;"	v
s:I2	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:I2 = [ s:insert_sub_fg[0] , s:insert_sub_bg[0] , s:insert_sub_fg[1] , s:insert_sub_bg[1] ]$/;"	v
s:I3	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:I3 = [ s:insert_mid_fg[0] , s:insert_mid_bg[0] , s:insert_mid_fg[1] , s:insert_mid_bg[1] ]$/;"	v
s:IA1	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:IA1 = [ s:inactive_side_fg[0] , s:inactive_side_bg[0] , s:inactive_side_fg[1] , s:inactive/;"	v
s:IA2	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:IA2 = [ s:inactive_sub_fg[0] , s:inactive_sub_bg[0] , s:inactive_sub_fg[1] , s:inactive_su/;"	v
s:IA3	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:IA3 = [ s:inactive_mid_fg[0] , s:inactive_mid_bg[0] , s:inactive_mid_fg[1] , s:inactive_mi/;"	v
s:INT	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/highlight.vim	/^let s:INT = { 'MAX': 2147483647 }$/;"	v
s:InitCwds	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! s:InitCwds()$/;"	f
s:InitVariable	nvim/autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:InitVariable(var, value)$/;"	f
s:Initialize	nvim/autoload/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:Initialize() " Initialize the plugin.  {{{1$/;"	f
s:InitializeExternalCommand	nvim/autoload/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:InitializeExternalCommand()$/;"	f
s:InitializeVimCore	nvim/autoload/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:InitializeVimCore()$/;"	f
s:InsertRegister	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/modules/insert_register.vim	/^let s:InsertRegister = s:modules.get('InsertRegister').make()$/;"	v
s:InsertRegister	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/modules/insert_register.vim	/^let s:InsertRegister.search_register = ''$/;"	v
s:InsertRegister.on_char_pre	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/modules/insert_register.vim	/^function! s:InsertRegister.on_char_pre(cmdline) abort$/;"	f
s:InsertRegister.on_enter	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/modules/insert_register.vim	/^function! s:InsertRegister.on_enter(...) abort$/;"	f
s:InsertRegister_orig_on_char_pre	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/modules/insert_register.vim	/^let s:InsertRegister_orig_on_char_pre = s:InsertRegister.on_char_pre$/;"	v
s:InvalidTriggers	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:InvalidTriggers(triggerlist) abort "{{{$/;"	f
s:IsRuleActive	nvim/autoload/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:IsRuleActive(name, config) " {{{1$/;"	f
s:KeyMapping	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/cli.vim	/^let s:KeyMapping = s:modules.get('KeyMapping')$/;"	v
s:LEFT_BRACE	nvim/autoload/plugged/editorconfig-vim/autoload/editorconfig_core/fnmatch.vim	/^let s:LEFT_BRACE = '\\v%(^|[^\\\\])\\{'$/;"	v
s:MAXCOL	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank.vim	/^let s:MAXCOL = 2147483647$/;"	v
s:MAXCOL	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/highlight.vim	/^let s:MAXCOL = 2147483647$/;"	v
s:MAXCOL	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^let s:MAXCOL = 2147483647$/;"	v
s:MAXCOL	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^let s:MAXCOL = 2147483647$/;"	v
s:MAX_PROPERTY_NAME	nvim/autoload/plugged/editorconfig-vim/autoload/editorconfig_core/ini.vim	/^let s:MAX_PROPERTY_NAME = 50$/;"	v
s:MAX_PROPERTY_VALUE	nvim/autoload/plugged/editorconfig-vim/autoload/editorconfig_core/ini.vim	/^let s:MAX_PROPERTY_VALUE = 255$/;"	v
s:MAX_SECTION_NAME	nvim/autoload/plugged/editorconfig-vim/autoload/editorconfig_core/ini.vim	/^let s:MAX_SECTION_NAME = 4096$/;"	v
s:MaybeUpdateLightline	.config/nvim/themes/lightline.vim	/^function! s:MaybeUpdateLightline()$/;"	f
s:MetaTask	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:MetaTask() abort "{{{$/;"	f
s:MetaTask	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^let s:MetaTask = {$/;"	v
s:MetaTask.append	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:MetaTask.append(task) abort "{{{$/;"	f
s:MetaTask.call	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:MetaTask.call(func, args, ...) abort "{{{$/;"	f
s:MetaTask.clear	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:MetaTask.clear() abort "{{{$/;"	f
s:MetaTask.clone	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:MetaTask.clone() abort "{{{$/;"	f
s:MetaTask.execute	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:MetaTask.execute(cmd) abort "{{{$/;"	f
s:MetaTask.trigger	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:MetaTask.trigger() abort "{{{$/;"	f
s:ModifierFlags	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/fugitiveline.vim	/^function! s:ModifierFlags()$/;"	f
s:N1	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:N1 = [ s:normal_side_fg[0] , s:normal_side_bg[0] , s:normal_side_fg[1] , s:normal_side_bg[/;"	v
s:N2	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:N2 = [ s:normal_sub_fg[0] , s:normal_sub_bg[0] , s:normal_sub_fg[1] , s:normal_sub_bg[1] ]$/;"	v
s:N3	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:N3 = [ s:normal_mid_fg[0] , s:normal_mid_bg[0] , s:normal_mid_fg[1] , s:normal_mid_bg[1] ]$/;"	v
s:NULLPOS	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank.vim	/^let s:NULLPOS = [0, 0, 0, 0]$/;"	v
s:NULLPOS	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/highlight.vim	/^let s:NULLPOS = [0, 0, 0, 0]$/;"	v
s:NULLPOS	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^let s:NULLPOS = [0, 0, 0, 0]$/;"	v
s:NULLPOS	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^let s:NULLPOS = [0, 0, 0, 0]$/;"	v
s:NULLREGION	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank.vim	/^let s:NULLREGION = [s:NULLPOS, s:NULLPOS, '']$/;"	v
s:NULLREGION	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^let s:NULLREGION = {$/;"	v
s:NUMERIC_RANGE	nvim/autoload/plugged/editorconfig-vim/autoload/editorconfig_core/fnmatch.vim	/^let s:NUMERIC_RANGE = '\\v([+-]?\\d+)' . '\\.\\.' . '([+-]?\\d+)'$/;"	v
s:NeatTask	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:NeatTask() abort "{{{$/;"	f
s:NeatTask	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^let s:NeatTask = {$/;"	v
s:NeatTask.cancel	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:NeatTask.cancel() abort "{{{$/;"	f
s:NeatTask.isactive	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:NeatTask.isactive() abort "{{{$/;"	f
s:NeatTask.trigger	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:NeatTask.trigger() abort "{{{$/;"	f
s:NeatTask.waitfor	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:NeatTask.waitfor() abort "{{{$/;"	f
s:NotEnoughBuffers	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! s:NotEnoughBuffers()$/;"	f
s:OFF	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank.vim	/^let s:OFF = 0$/;"	v
s:OFF	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/highlight.vim	/^let s:OFF = 0$/;"	v
s:OFF	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^let s:OFF = 0$/;"	v
s:OFF	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^let s:OFF = 0$/;"	v
s:OFF	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^let s:OFF = 0$/;"	v
s:ON	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank.vim	/^let s:ON = 1$/;"	v
s:ON	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/highlight.vim	/^let s:ON = 1$/;"	v
s:ON	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^let s:ON = 1$/;"	v
s:ON	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^let s:ON = 1$/;"	v
s:ON	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^let s:ON = 1$/;"	v
s:OPTCRE	nvim/autoload/plugged/editorconfig-vim/autoload/editorconfig_core/ini.vim	/^let s:OPTCRE = '\\v\\s*([^:=[:space:]][^:=]*)\\s*([:=])\\s*(.*)$'$/;"	v
s:R1	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:R1 = [ s:commandline_side_fg[0] , s:commandline_side_bg[0] , s:commandline_side_fg[1] , s:/;"	v
s:R1	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:R1 = [ s:replace_side_fg[0] , s:replace_side_bg[0] , s:replace_side_fg[1] , s:replace_side/;"	v
s:R2	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:R2 = [ s:commandline_sub_fg[0] , s:commandline_sub_bg[0] , s:commandline_sub_fg[1] , s:com/;"	v
s:R2	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:R2 = [ s:replace_sub_fg[0] , s:replace_sub_bg[0] , s:replace_sub_fg[1] , s:replace_sub_bg[/;"	v
s:R3	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:R3 = [ s:commandline_mid_fg[0] , s:commandline_mid_bg[0] , s:commandline_mid_fg[1] , s:com/;"	v
s:R3	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:R3 = [ s:replace_mid_fg[0] , s:replace_mid_bg[0] , s:replace_mid_fg[1] , s:replace_mid_bg[/;"	v
s:RIGHT_BRACE	nvim/autoload/plugged/editorconfig-vim/autoload/editorconfig_core/fnmatch.vim	/^let s:RIGHT_BRACE = '\\v%(^|[^\\\\])\\}'$/;"	v
s:Refresh	nvim/autoload/plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! s:Refresh()$/;"	f
s:RefreshTabline	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! s:RefreshTabline()$/;"	f
s:ResetShellSlash	nvim/autoload/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:ResetShellSlash() " {{{2$/;"	f
s:SECTCRE	nvim/autoload/plugged/editorconfig-vim/autoload/editorconfig_core/ini.vim	/^let s:SECTCRE = '\\v^\\s*\\[(%([^\\\\#;]|\\\\.)+)\\]'$/;"	v
s:SID	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/util.vim	/^function! s:SID() abort$/;"	f
s:SID	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^function! s:SID() abort$/;"	f
s:SID	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^let s:SID = printf("\\<SNR>%s_", s:SID())$/;"	v
s:SID	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^function! s:SID() abort$/;"	f
s:SID	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^let s:SID = printf("\\<SNR>%s_", s:SID())$/;"	v
s:SID_PREFIX	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! s:SID_PREFIX() abort$/;"	f
s:SNR	nvim/autoload/plugged/incsearch.vim/autoload/vital/incsearch.vim	/^let s:SNR = join(map(range(len("\\<SNR>")), '"[\\\\x" . printf("%0x", char2nr("\\<SNR>"[v:val]))/;"	v
s:SNR	nvim/autoload/plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^let s:SNR = join(map(range(len("\\<SNR>")), '"[\\\\x" . printf("%0x", char2nr("\\<SNR>"[v:val]))/;"	v
s:SNR	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^let s:SNR = join(map(range(len("\\<SNR>")), '"[\\\\x" . printf("%0x", char2nr("\\<SNR>"[v:val]))/;"	v
s:STATE	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^let s:STATE = s:ON$/;"	v
s:Schedule	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/highlight.vim	/^let s:Schedule = vital#highlightedyank#new().import('Schedule')$/;"	v
s:SetDefault	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/vimtex.vim	/^function! s:SetDefault(var, val)$/;"	f
s:SetupListeners	nvim/autoload/plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! s:SetupListeners()$/;"	f
s:ShouldHighlight	nvim/autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:ShouldHighlight()$/;"	f
s:ShouldStripWhitespaceOnSave	nvim/autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:ShouldStripWhitespaceOnSave()$/;"	f
s:SourcedFile	nvim/autoload/plugged/vim-snippets/plugin/vimsnippets.vim	/^let s:SourcedFile=expand("<sfile>")$/;"	v
s:SpawnExternalParser	nvim/autoload/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:SpawnExternalParser(cmd) " {{{2$/;"	f
s:StripWhitespace	nvim/autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:StripWhitespace(line1, line2)$/;"	f
s:StripWhitespaceCommand	nvim/autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:StripWhitespaceCommand(line1, line2, force)$/;"	f
s:StripWhitespaceMotion	nvim/autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:StripWhitespaceMotion(...)$/;"	f
s:StripWhitespaceOnChangedLinesCommand	nvim/autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:StripWhitespaceOnChangedLinesCommand(line1, line2, force)$/;"	f
s:StripWhitespaceOnSave	nvim/autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:StripWhitespaceOnSave(force)$/;"	f
s:Switch	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:Switch() abort "{{{$/;"	f
s:Switch	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^let s:Switch = {$/;"	v
s:Switch._isactive	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:Switch._isactive() abort "{{{$/;"	f
s:Switch._off	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:Switch._off() abort "{{{$/;"	f
s:Switch._on	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:Switch._on() abort "{{{$/;"	f
s:Switch._skipsthistime	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:Switch._skipsthistime() abort "{{{$/;"	f
s:Switch.skip	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:Switch.skip(...) abort "{{{$/;"	f
s:Switch.skipif	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:Switch.skipif(func, args, ...) abort "{{{$/;"	f
s:TRUE	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^let s:TRUE = !0$/;"	v
s:TRUE	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/config.vim	/^let s:TRUE = !0$/;"	v
s:TRUE	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/highlight.vim	/^let s:TRUE = !0$/;"	v
s:TRUE	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/extend.vim	/^let s:TRUE = !0$/;"	v
s:TRUE	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/modules/incsearch.vim	/^let s:TRUE = !0$/;"	v
s:TRUE	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/util.vim	/^let s:TRUE = !0$/;"	v
s:TRUE	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^let s:TRUE = 1$/;"	v
s:TYPE	nvim/autoload/plug.vim	/^let s:TYPE = {$/;"	v
s:TYPE	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:TYPE = {'dict': type({}), 'funcref': type(function('call')), 'string': type(''), 'list': t/;"	v
s:TYPE_DICT	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Process.vim	/^let s:TYPE_DICT = type({})$/;"	v
s:TYPE_LIST	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Process.vim	/^let s:TYPE_LIST = type([])$/;"	v
s:TYPE_LIST	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^let s:TYPE_LIST = type([])$/;"	v
s:TYPE_NUM	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^let s:TYPE_NUM = type(0)$/;"	v
s:TYPE_STRING	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Process.vim	/^let s:TYPE_STRING = type('')$/;"	v
s:TabBuffers	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! s:TabBuffers()$/;"	f
s:Task	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:Task(...) abort "{{{$/;"	f
s:Task	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^let s:Task = {$/;"	v
s:Task._getid	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:Task._getid() abort "{{{$/;"	f
s:Task.cancel	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:Task.cancel() abort "{{{$/;"	f
s:Task.clone	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:Task.clone() abort "{{{$/;"	f
s:Task.isactive	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:Task.isactive() abort "{{{$/;"	f
s:Task.waitfor	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:Task.waitfor(triggerlist) abort "{{{$/;"	f
s:TaskChain	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:TaskChain(...) abort "{{{$/;"	f
s:TaskChain	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^let s:TaskChain = {$/;"	v
s:TaskChain._addorder	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:TaskChain._addorder(ordertask) abort "{{{$/;"	f
s:TaskChain._addtrigger	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:TaskChain._addtrigger(triggertask, args) abort "{{{$/;"	f
s:TaskChain._getorder	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:TaskChain._getorder() abort "{{{$/;"	f
s:TaskChain._gettrigger	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:TaskChain._gettrigger() abort "{{{$/;"	f
s:TaskChain._gonext	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:TaskChain._gonext() abort "{{{$/;"	f
s:TaskChain._isover	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:TaskChain._isover() abort "{{{$/;"	f
s:TaskChain.cancel	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:TaskChain.cancel() abort "{{{$/;"	f
s:TaskChain.hook	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:TaskChain.hook(triggerlist) abort "{{{$/;"	f
s:TaskChain.trigger	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:TaskChain.trigger() abort "{{{$/;"	f
s:TaskChain.waitfor	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:TaskChain.waitfor() abort "{{{$/;"	f
s:Timer	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^let s:Timer = {$/;"	v
s:Timer.add	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:Timer.add(time, task) abort "{{{$/;"	f
s:Timer.remove	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:Timer.remove(id) abort "{{{$/;"	f
s:ToggleStripWhitespaceOnSave	nvim/autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:ToggleStripWhitespaceOnSave()$/;"	f
s:ToggleWhitespace	nvim/autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:ToggleWhitespace()$/;"	f
s:Trim	nvim/autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^    function! s:Trim(s)$/;"	f
s:TrimTrailingWhitespace	nvim/autoload/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:TrimTrailingWhitespace() " {{{1$/;"	f
s:U	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^let s:U = incsearch#util#import()$/;"	v
s:U	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/config.vim	/^let s:U = incsearch#util#import()$/;"	v
s:U	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/highlight.vim	/^let s:U = incsearch#util#import()$/;"	v
s:U	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/extend.vim	/^let s:U = incsearch#util#import()$/;"	v
s:U	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/modules/incsearch.vim	/^let s:U = incsearch#util#import()$/;"	v
s:UpdateLightlineColorScheme	.config/nvim/themes/lightline.vim	/^function! s:UpdateLightlineColorScheme()$/;"	f
s:UseConfigFiles	nvim/autoload/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:UseConfigFiles() abort " Apply config to the current buffer {{{1$/;"	f
s:UseConfigFiles_ExternalCommand	nvim/autoload/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:UseConfigFiles_ExternalCommand()$/;"	f
s:UseConfigFiles_VimCore	nvim/autoload/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:UseConfigFiles_VimCore()$/;"	f
s:V1	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:V1 = [ s:visual_side_fg[0] , s:visual_side_bg[0] , s:visual_side_fg[1] , s:visual_side_bg[/;"	v
s:V2	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:V2 = [ s:visual_sub_fg[0] , s:visual_sub_bg[0] , s:visual_sub_fg[1] , s:visual_sub_bg[1] ]$/;"	v
s:V3	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:V3 = [ s:visual_mid_fg[0] , s:visual_mid_bg[0] , s:visual_mid_fg[1] , s:visual_mid_bg[1] ]$/;"	v
s:Vital	nvim/autoload/plugged/incsearch.vim/autoload/vital/incsearch.vim	/^  let s:Vital._get_module = s:_function('s:_get_builtin_module')$/;"	v
s:Vital	nvim/autoload/plugged/incsearch.vim/autoload/vital/incsearch.vim	/^  let s:Vital._get_module = s:_function('s:_get_module')$/;"	v
s:Vital	nvim/autoload/plugged/incsearch.vim/autoload/vital/incsearch.vim	/^let s:Vital = {}$/;"	v
s:Vital	nvim/autoload/plugged/incsearch.vim/autoload/vital/incsearch.vim	/^let s:Vital._import = s:_function('s:_import')$/;"	v
s:Vital	nvim/autoload/plugged/incsearch.vim/autoload/vital/incsearch.vim	/^let s:Vital.exists = s:_function('s:exists')$/;"	v
s:Vital	nvim/autoload/plugged/incsearch.vim/autoload/vital/incsearch.vim	/^let s:Vital.import = s:_function('s:import')$/;"	v
s:Vital	nvim/autoload/plugged/incsearch.vim/autoload/vital/incsearch.vim	/^let s:Vital.load = s:_function('s:load')$/;"	v
s:Vital	nvim/autoload/plugged/incsearch.vim/autoload/vital/incsearch.vim	/^let s:Vital.plugin_name = s:_function('s:plugin_name')$/;"	v
s:Vital	nvim/autoload/plugged/incsearch.vim/autoload/vital/incsearch.vim	/^let s:Vital.search = s:_function('s:search')$/;"	v
s:Vital	nvim/autoload/plugged/incsearch.vim/autoload/vital/incsearch.vim	/^let s:Vital.unload = s:_function('s:unload')$/;"	v
s:Vital	nvim/autoload/plugged/incsearch.vim/autoload/vital/incsearch.vim	/^let s:Vital.vital_files = s:_function('s:vital_files')$/;"	v
s:Vital	nvim/autoload/plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^  let s:Vital._get_module = s:_function('s:_get_builtin_module')$/;"	v
s:Vital	nvim/autoload/plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^  let s:Vital._get_module = s:_function('s:_get_module')$/;"	v
s:Vital	nvim/autoload/plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^let s:Vital = {}$/;"	v
s:Vital	nvim/autoload/plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^let s:Vital._import = s:_function('s:_import')$/;"	v
s:Vital	nvim/autoload/plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^let s:Vital.exists = s:_function('s:exists')$/;"	v
s:Vital	nvim/autoload/plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^let s:Vital.import = s:_function('s:import')$/;"	v
s:Vital	nvim/autoload/plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^let s:Vital.load = s:_function('s:load')$/;"	v
s:Vital	nvim/autoload/plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^let s:Vital.plugin_name = s:_function('s:plugin_name')$/;"	v
s:Vital	nvim/autoload/plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^let s:Vital.search = s:_function('s:search')$/;"	v
s:Vital	nvim/autoload/plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^let s:Vital.unload = s:_function('s:unload')$/;"	v
s:Vital	nvim/autoload/plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^let s:Vital.vital_files = s:_function('s:vital_files')$/;"	v
s:Vital	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^  let s:Vital._get_module = s:_function('s:_get_builtin_module')$/;"	v
s:Vital	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^  let s:Vital._get_module = s:_function('s:_get_module')$/;"	v
s:Vital	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^let s:Vital = {}$/;"	v
s:Vital	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^let s:Vital._import = s:_function('s:_import')$/;"	v
s:Vital	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^let s:Vital.exists = s:_function('s:exists')$/;"	v
s:Vital	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^let s:Vital.import = s:_function('s:import')$/;"	v
s:Vital	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^let s:Vital.load = s:_function('s:load')$/;"	v
s:Vital	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^let s:Vital.plugin_name = s:_function('s:plugin_name')$/;"	v
s:Vital	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^let s:Vital.search = s:_function('s:search')$/;"	v
s:Vital	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^let s:Vital.unload = s:_function('s:unload')$/;"	v
s:Vital	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^let s:Vital.vital_files = s:_function('s:vital_files')$/;"	v
s:Warning	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^function! s:Warning(msg, ...) abort$/;"	f
s:WhitespaceInit	nvim/autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:WhitespaceInit()$/;"	f
s:_SID	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^function! s:_SID() abort$/;"	f
s:_SID	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Window.vim	/^function! s:_SID() abort$/;"	f
s:_SID	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/Dict.vim	/^function! s:_SID() abort$/;"	f
s:_SID	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:_SID() abort$/;"	f
s:_SID	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Gift.vim	/^function! s:_SID() abort$/;"	f
s:_SID	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Gift/Tabpage.vim	/^function! s:_SID() abort$/;"	f
s:_SID	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Gift/Window.vim	/^function! s:_SID() abort$/;"	f
s:_SID	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline.vim	/^function! s:_SID() abort$/;"	f
s:_SID	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:_SID() abort$/;"	f
s:_SID	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Maker.vim	/^function! s:_SID() abort$/;"	f
s:_SID	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules.vim	/^function! s:_SID() abort$/;"	f
s:_SID	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/All.vim	/^function! s:_SID() abort$/;"	f
s:_SID	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/AsyncUpdate.vim	/^function! s:_SID() abort$/;"	f
s:_SID	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/BufferComplete.vim	/^function! s:_SID() abort$/;"	f
s:_SID	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Cancel.vim	/^function! s:_SID() abort$/;"	f
s:_SID	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/CursorMove.vim	/^function! s:_SID() abort$/;"	f
s:_SID	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Delete.vim	/^function! s:_SID() abort$/;"	f
s:_SID	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Digraphs.vim	/^function! s:_SID() abort$/;"	f
s:_SID	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Doautocmd.vim	/^function! s:_SID() abort$/;"	f
s:_SID	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:_SID() abort$/;"	f
s:_SID	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/ExceptionExit.vim	/^function! s:_SID() abort$/;"	f
s:_SID	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/ExceptionMessage.vim	/^function! s:_SID() abort$/;"	f
s:_SID	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Execute.vim	/^function! s:_SID() abort$/;"	f
s:_SID	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Exit.vim	/^function! s:_SID() abort$/;"	f
s:_SID	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/HistAdd.vim	/^function! s:_SID() abort$/;"	f
s:_SID	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/History.vim	/^function! s:_SID() abort$/;"	f
s:_SID	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/IgnoreRegexpBackwardWord.vim	/^function! s:_SID() abort$/;"	f
s:_SID	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Incsearch.vim	/^function! s:_SID() abort$/;"	f
s:_SID	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/InsertRegister.vim	/^function! s:_SID() abort$/;"	f
s:_SID	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/KeyMapping.vim	/^function! s:_SID() abort$/;"	f
s:_SID	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/LiteralInsert.vim	/^function! s:_SID() abort$/;"	f
s:_SID	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/NoInsert.vim	/^function! s:_SID() abort$/;"	f
s:_SID	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Paste.vim	/^function! s:_SID() abort$/;"	f
s:_SID	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Redraw.vim	/^function! s:_SID() abort$/;"	f
s:_SID	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Scroll.vim	/^function! s:_SID() abort$/;"	f
s:_SID	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Exception.vim	/^function! s:_SID() abort$/;"	f
s:_SID	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Input.vim	/^function! s:_SID() abort$/;"	f
s:_SID	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Keymapping.vim	/^function! s:_SID() abort$/;"	f
s:_SID	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Signals.vim	/^function! s:_SID() abort$/;"	f
s:_SID	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/String.vim	/^function! s:_SID() abort$/;"	f
s:_SID	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Capture.vim	/^function! s:_SID() abort$/;"	f
s:_SID	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Highlight.vim	/^function! s:_SID() abort$/;"	f
s:_SID	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Keymapping.vim	/^function! s:_SID() abort$/;"	f
s:_SID	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:_SID() abort$/;"	f
s:_SID	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Buffer.vim	/^function! s:_SID() abort$/;"	f
s:_SID	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Guard.vim	/^function! s:_SID() abort$/;"	f
s:_SID	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Message.vim	/^function! s:_SID() abort$/;"	f
s:_SID	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Type.vim	/^function! s:_SID() abort$/;"	f
s:_SID	nvim/autoload/plugged/incsearch.vim/autoload/vital/incsearch.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Process.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/System/Cache/Deprecated.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	nvim/autoload/plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:_SID() abort$/;"	f
s:_SID	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^  function! s:_SID() abort$/;"	f
s:_UNDEFINED	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Guard.vim	/^let s:_UNDEFINED = function('s:_undefined')$/;"	v
s:_as_echon	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:_as_echon(str)$/;"	f
s:_as_statusline	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/BufferComplete.vim	/^function! s:_as_statusline(list, count)$/;"	f
s:_auto_cmap	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/KeyMapping.vim	/^function! s:_auto_cmap()$/;"	f
s:_autocmd	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:_autocmd(augroup, event, pat) abort "{{{$/;"	f
s:_buffer_complete	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/BufferComplete.vim	/^function! s:_buffer_complete()$/;"	f
s:_cache	nvim/autoload/plugged/editorconfig-vim/autoload/editorconfig_core/fnmatch.vim	/^let s:_cache = {}$/;"	v
s:_call_string_expr	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:_call_string_expr(expr, args) abort$/;"	f
s:_capture	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Keymapping.vim	/^function! s:_capture(mode)$/;"	f
s:_clamp	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/String.vim	/^function! s:_clamp(x, max, min)$/;"	f
s:_compare	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:_compare(a, b) abort$/;"	f
s:_compare	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:_compare(a, b) abort$/;"	f
s:_convert_sid	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/KeyMapping.vim	/^function! s:_convert_sid(rhs, sid) abort$/;"	f
s:_create_hash	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/System/Cache/Deprecated.vim	/^function! s:_create_hash(dir, str) abort$/;"	f
s:_default_compare	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:_default_compare(a, b) abort$/;"	f
s:_default_compare	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:_default_compare(a, b) abort$/;"	f
s:_doautocmd	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:_doautocmd(augroup, event, pat) abort "{{{$/;"	f
s:_dot_to_sharp	nvim/autoload/plugged/incsearch.vim/autoload/vital/incsearch.vim	/^function! s:_dot_to_sharp(name) abort$/;"	f
s:_dot_to_sharp	nvim/autoload/plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^function! s:_dot_to_sharp(name) abort$/;"	f
s:_dot_to_sharp	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^function! s:_dot_to_sharp(name) abort$/;"	f
s:_echohl	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^function! s:_echohl(msg, hlgroup, ...) abort$/;"	f
s:_echon	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:_echon(expr)$/;"	f
s:_encode_name	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/System/Cache/Deprecated.vim	/^function! s:_encode_name(cache_dir, filename) abort$/;"	f
s:_engine	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/String.vim	/^let s:_engine = exists("+regexpengine") ? '\\%#=2' : ''$/;"	v
s:_ensure_key	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/Dict.vim	/^function! s:_ensure_key(key) abort$/;"	f
s:_event_and_patterns	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:_event_and_patterns(eventexpr) abort "{{{$/;"	f
s:_execute	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Highlight.vim	/^function! s:_execute(cmd)$/;"	f
s:_execute	nvim/autoload/plugged/incsearch.vim/autoload/vital/incsearch.vim	/^  function! s:_execute(cmd) abort$/;"	f
s:_execute	nvim/autoload/plugged/incsearch.vim/autoload/vital/incsearch.vim	/^  let s:_execute = function('execute')$/;"	v
s:_execute	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^function! s:_execute(cmd) abort$/;"	f
s:_execute_search	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^function! s:_execute_search(cmd) abort$/;"	f
s:_exists_autoload_func_with_source	nvim/autoload/plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^function! s:_exists_autoload_func_with_source(funcname) abort$/;"	f
s:_extract_files	nvim/autoload/plugged/incsearch.vim/autoload/vital/incsearch.vim	/^function! s:_extract_files(pattern, files) abort$/;"	f
s:_extract_files	nvim/autoload/plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^function! s:_extract_files(pattern, files) abort$/;"	f
s:_extract_files	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^function! s:_extract_files(pattern, files) abort$/;"	f
s:_file2module	nvim/autoload/plugged/incsearch.vim/autoload/vital/incsearch.vim	/^function! s:_file2module(file) abort$/;"	f
s:_file2module	nvim/autoload/plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^function! s:_file2module(file) abort$/;"	f
s:_file2module	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^function! s:_file2module(file) abort$/;"	f
s:_find_right_r	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/util.vim	/^function! s:_find_right_r(cs, i) abort$/;"	f
s:_finish	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/BufferComplete.vim	/^function! s:_finish()$/;"	f
s:_foldl	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/Dict.vim	/^function! s:_foldl(f, init, xs) abort$/;"	f
s:_function	nvim/autoload/plugged/incsearch.vim/autoload/vital/incsearch.vim	/^  function! s:_function(fstr) abort$/;"	f
s:_function	nvim/autoload/plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^  function! s:_function(fstr) abort$/;"	f
s:_function	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^  function! s:_function(fstr) abort$/;"	f
s:_get_builtin_module	nvim/autoload/plugged/incsearch.vim/autoload/vital/incsearch.vim	/^function! s:_get_builtin_module(name) abort$/;"	f
s:_get_builtin_module	nvim/autoload/plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^function! s:_get_builtin_module(name) abort$/;"	f
s:_get_builtin_module	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^function! s:_get_builtin_module(name) abort$/;"	f
s:_get_key	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Keymapping.vim	/^function! s:_get_key(conf)$/;"	f
s:_get_module	nvim/autoload/plugged/incsearch.vim/autoload/vital/incsearch.vim	/^function! s:_get_module(name) abort dict$/;"	f
s:_get_module	nvim/autoload/plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^function! s:_get_module(name) abort dict$/;"	f
s:_get_module	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^function! s:_get_module(name) abort dict$/;"	f
s:_global_vital_files	nvim/autoload/plugged/incsearch.vim/autoload/vital/incsearch.vim	/^function! s:_global_vital_files() abort$/;"	f
s:_global_vital_files	nvim/autoload/plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^function! s:_global_vital_files() abort$/;"	f
s:_global_vital_files	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^function! s:_global_vital_files() abort$/;"	f
s:_handleOldOptions	nvim/autoload/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:_handleOldOptions() abort$/;"	f
s:_import	nvim/autoload/plugged/incsearch.vim/autoload/vital/incsearch.vim	/^function! s:_import(name) abort dict$/;"	f
s:_import	nvim/autoload/plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^function! s:_import(name) abort dict$/;"	f
s:_import	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^function! s:_import(name) abort dict$/;"	f
s:_import_func_name	nvim/autoload/plugged/incsearch.vim/autoload/vital/incsearch.vim	/^function! s:_import_func_name(plugin_name, module_name) abort$/;"	f
s:_import_func_name	nvim/autoload/plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^function! s:_import_func_name(plugin_name, module_name) abort$/;"	f
s:_import_func_name	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^function! s:_import_func_name(plugin_name, module_name) abort$/;"	f
s:_inherit	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:_inherit(sub, super) abort "{{{$/;"	f
s:_init	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^function! s:_init()$/;"	f
s:_invalid_triggerlist	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:_invalid_triggerlist(triggerlist) abort "{{{$/;"	f
s:_is_equal	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^function! s:_is_equal(__expr, __hl)$/;"	f
s:_is_flag	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/util.vim	/^function! s:_is_flag(flag, ...) abort$/;"	f
s:_is_input_enter	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Execute.vim	/^function! s:_is_input_enter(cmdline)$/;"	f
s:_is_valid_highlight	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:_is_valid_highlight(name)$/;"	f
s:_is_valid_regexp	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/util.vim	/^function! s:_is_valid_regexp(pattern) abort$/;"	f
s:_isnecessaryaugroup	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:_isnecessaryaugroup(name) abort "{{{$/;"	f
s:_isvalidtriggertype	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:_isvalidtriggertype(item) abort "{{{$/;"	f
s:_keymapping	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Keymapping.vim	/^function! s:_keymapping(str)$/;"	f
s:_maparg	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Keymapping.vim	/^function! s:_maparg(name, mode, abbr, dict)$/;"	f
s:_max_by	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/Dict.vim	/^function! s:_max_by(dict, expr) abort$/;"	f
s:_may_replace_left_r_cond	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/util.vim	/^function! s:_may_replace_left_r_cond(escape_bs, flag) abort$/;"	f
s:_module_path	nvim/autoload/plugged/incsearch.vim/autoload/vital/incsearch.vim	/^function! s:_module_path(name) abort$/;"	f
s:_module_path	nvim/autoload/plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^function! s:_module_path(name) abort$/;"	f
s:_module_path	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^function! s:_module_path(name) abort$/;"	f
s:_module_sid	nvim/autoload/plugged/incsearch.vim/autoload/vital/incsearch.vim	/^function! s:_module_sid(name) abort$/;"	f
s:_module_sid	nvim/autoload/plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^function! s:_module_sid(name) abort$/;"	f
s:_module_sid	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^function! s:_module_sid(name) abort$/;"	f
s:_module_sid_base_dir	nvim/autoload/plugged/incsearch.vim/autoload/vital/incsearch.vim	/^function! s:_module_sid_base_dir() abort$/;"	f
s:_module_sid_base_dir	nvim/autoload/plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^function! s:_module_sid_base_dir() abort$/;"	f
s:_module_sid_base_dir	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^function! s:_module_sid_base_dir() abort$/;"	f
s:_new_environment	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Guard.vim	/^function! s:_new_environment(name) abort$/;"	f
s:_new_instance	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Guard.vim	/^function! s:_new_instance(instance, ...) abort$/;"	f
s:_new_option	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Guard.vim	/^function! s:_new_option(name) abort$/;"	f
s:_new_register	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Guard.vim	/^function! s:_new_register(name) abort$/;"	f
s:_new_variable	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Guard.vim	/^function! s:_new_variable(name, ...) abort$/;"	f
s:_pad_with_char	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:_pad_with_char(str, left, right, char) abort$/;"	f
s:_parse_line	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/BufferComplete.vim	/^function! s:_parse_line(line)$/;"	f
s:_path2project_directory_git	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:_path2project_directory_git(path) abort$/;"	f
s:_path2project_directory_git	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:_path2project_directory_git(path) abort$/;"	f
s:_path2project_directory_others	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:_path2project_directory_others(vcs, path) abort$/;"	f
s:_path2project_directory_others	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:_path2project_directory_others(vcs, path) abort$/;"	f
s:_path2project_directory_svn	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:_path2project_directory_svn(path) abort$/;"	f
s:_path2project_directory_svn	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:_path2project_directory_svn(path) abort$/;"	f
s:_plugin_name	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch.vim	/^let s:_plugin_name = expand('<sfile>:t:r')$/;"	v
s:_plugin_name	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet.vim	/^let s:_plugin_name = expand('<sfile>:t:r')$/;"	v
s:_plugin_name	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank.vim	/^let s:_plugin_name = expand('<sfile>:t:r')$/;"	v
s:_redir	nvim/autoload/plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^function! s:_redir(cmd) abort$/;"	f
s:_redraw	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:_redraw(cmdline)$/;"	f
s:_regex	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/String.vim	/^let s:_regex = exists("+regexpengine")$/;"	v
s:_replace	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:_replace(str, from, to, flags) abort$/;"	f
s:_reset	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/History.vim	/^function! s:_reset()$/;"	f
s:_reset	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Capture.vim	/^function! s:_reset()$/;"	f
s:_runtime	nvim/autoload/plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^function! s:_runtime(path) abort$/;"	f
s:_s	nvim/autoload/plugged/incsearch.vim/autoload/vital/incsearch.vim	/^  let s:_s = '<SNR>' . s:_SID() . '_'$/;"	v
s:_s	nvim/autoload/plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^  let s:_s = '<SNR>' . s:_SID() . '_'$/;"	v
s:_s	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^  let s:_s = '<SNR>' . s:_SID() . '_'$/;"	v
s:_safe_eval	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Keymapping.vim	/^function! s:_safe_eval(expr, ...)$/;"	f
s:_searchforward_cmd	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^function! s:_searchforward_cmd() abort$/;"	f
s:_self_vital_files	nvim/autoload/plugged/incsearch.vim/autoload/vital/incsearch.vim	/^function! s:_self_vital_files() abort$/;"	f
s:_self_vital_files	nvim/autoload/plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^function! s:_self_vital_files() abort$/;"	f
s:_self_vital_files	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^function! s:_self_vital_files() abort$/;"	f
s:_sfuncname	nvim/autoload/plugged/incsearch.vim/autoload/vital/incsearch.vim	/^function! s:_sfuncname(sid, funcname) abort$/;"	f
s:_sfuncname	nvim/autoload/plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^function! s:_sfuncname(sid, funcname) abort$/;"	f
s:_sfuncname	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^function! s:_sfuncname(sid, funcname) abort$/;"	f
s:_should_match_cmdline	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/History.vim	/^function! s:_should_match_cmdline(cmdline)$/;"	f
s:_sid	nvim/autoload/plugged/incsearch.vim/autoload/vital/incsearch.vim	/^function! s:_sid(path, filter_pattern) abort$/;"	f
s:_sid	nvim/autoload/plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^function! s:_sid(path, filter_pattern) abort$/;"	f
s:_sid	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^function! s:_sid(path, filter_pattern) abort$/;"	f
s:_sort_num_func	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/util.vim	/^function! s:_sort_num_func(x, y) abort$/;"	f
s:_source	nvim/autoload/plugged/incsearch.vim/autoload/vital/incsearch.vim	/^function! s:_source(path) abort$/;"	f
s:_source	nvim/autoload/plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^function! s:_source(path) abort$/;"	f
s:_source	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^function! s:_source(path) abort$/;"	f
s:_split_by_wcswidth	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:_split_by_wcswidth(body, x) abort$/;"	f
s:_split_by_wcswidth_once	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:_split_by_wcswidth_once(body, x) abort$/;"	f
s:_split_keystring	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/String.vim	/^function! s:_split_keystring(str, ...)$/;"	f
s:_supercall	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:_supercall(sub, Funcref, ...) abort "{{{$/;"	f
s:_throw	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Guard.vim	/^function! s:_throw(msg) abort$/;"	f
s:_timercall	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:_timercall(id) abort "{{{$/;"	f
s:_undefined	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Guard.vim	/^function! s:_undefined() abort$/;"	f
s:_unify_path	nvim/autoload/plugged/incsearch.vim/autoload/vital/incsearch.vim	/^  function! s:_unify_path(path) abort$/;"	f
s:_unify_path	nvim/autoload/plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^  function! s:_unify_path(path) abort$/;"	f
s:_unify_path	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^  function! s:_unify_path(path) abort$/;"	f
s:_unify_path_cache	nvim/autoload/plugged/incsearch.vim/autoload/vital/incsearch.vim	/^  let s:_unify_path_cache = {}$/;"	v
s:_unify_path_cache	nvim/autoload/plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^  let s:_unify_path_cache = {}$/;"	v
s:_unify_path_cache	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^  let s:_unify_path_cache = {}$/;"	v
s:_uniq	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/BufferComplete.vim	/^function! s:_uniq(list)$/;"	f
s:_uniq	nvim/autoload/plugged/incsearch.vim/autoload/vital/incsearch.vim	/^  function! s:_uniq(list) abort$/;"	f
s:_uniq	nvim/autoload/plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^  function! s:_uniq(list) abort$/;"	f
s:_uniq	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^  function! s:_uniq(list) abort$/;"	f
s:_verbosefile_pop	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Capture.vim	/^function! s:_verbosefile_pop()$/;"	f
s:_verbosefile_push	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Capture.vim	/^function! s:_verbosefile_push(file)$/;"	f
s:_vital_created	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Guard.vim	/^function! s:_vital_created(module) abort$/;"	f
s:_vital_created	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Type.vim	/^function! s:_vital_created(module) abort$/;"	f
s:_vital_created	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:_vital_created(module) abort$/;"	f
s:_vital_depends	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Window.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/Dict.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Gift.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Gift/Window.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Maker.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/All.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Digraphs.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Doautocmd.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/InsertRegister.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/KeyMapping.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Keymapping.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Signals.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/String.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Highlight.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Keymapping.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Buffer.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Guard.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/System/Cache/Deprecated.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_loaded	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Window.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/Dict.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Gift.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Gift/Window.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Maker.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/AsyncUpdate.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Digraphs.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Doautocmd.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/InsertRegister.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/KeyMapping.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Keymapping.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Signals.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/String.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Highlight.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Keymapping.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Buffer.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Guard.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/System/Cache/Deprecated.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_warn_deprecated	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:_warn_deprecated(name, alternative) abort$/;"	f
s:_warn_deprecated	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:_warn_deprecated(name, alternative) abort$/;"	f
s:_wcwidth	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^  function! s:_wcwidth(ucs) abort$/;"	f
s:_wcwidth	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^  function! s:_wcwidth(ucs) abort$/;"	f
s:_wcwidth	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^  function! s:_wcwidth(ucs) abort$/;"	f
s:accents	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:accents = s:palette.red$/;"	v
s:accents	nvim/autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^let s:accents = {}$/;"	v
s:action_for	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:action_for(key, ...)$/;"	f
s:action_table	nvim/autoload/plugged/neosnippet.vim/autoload/unite/sources/neosnippet.vim	/^let s:action_table = {}$/;"	v
s:action_table	nvim/autoload/plugged/neosnippet.vim/autoload/unite/sources/neosnippet.vim	/^let s:action_table.expand = {$/;"	v
s:action_table	nvim/autoload/plugged/neosnippet.vim/autoload/unite/sources/neosnippet.vim	/^let s:action_table.preview = {$/;"	v
s:action_table	nvim/autoload/plugged/neosnippet.vim/autoload/unite/sources/neosnippet.vim	/^let s:action_table.unite__new_candidate = {$/;"	v
s:action_table	nvim/autoload/plugged/neosnippet.vim/autoload/unite/sources/neosnippet_file.vim	/^let s:action_table = {}$/;"	v
s:action_table	nvim/autoload/plugged/neosnippet.vim/autoload/unite/sources/neosnippet_file.vim	/^let s:action_table.neosnippet_source = {$/;"	v
s:action_table.expand.func	nvim/autoload/plugged/neosnippet.vim/autoload/unite/sources/neosnippet.vim	/^function! s:action_table.expand.func(candidate) abort$/;"	f
s:action_table.neosnippet_source.func	nvim/autoload/plugged/neosnippet.vim/autoload/unite/sources/neosnippet_file.vim	/^function! s:action_table.neosnippet_source.func(candidates) abort$/;"	f
s:action_table.preview.func	nvim/autoload/plugged/neosnippet.vim/autoload/unite/sources/neosnippet.vim	/^function! s:action_table.preview.func(candidates) abort$/;"	f
s:action_table.unite__new_candidate.func	nvim/autoload/plugged/neosnippet.vim/autoload/unite/sources/neosnippet.vim	/^function! s:action_table.unite__new_candidate.func(candidate) abort$/;"	f
s:activate	nvim/autoload/plugged/vim-rooter/plugin/rooter.vim	/^function! s:activate()$/;"	f
s:active_winnr	nvim/autoload/plugged/vim-airline/plugin/airline.vim	/^let s:active_winnr = -1$/;"	v
s:add_db	nvim/autoload/plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! s:add_db(db_file) abort$/;"	f
s:add_line	nvim/autoload/plugged/incsearch.vim/test/autonohlsearch.vim	/^function! s:add_line(str)$/;"	f
s:add_line	nvim/autoload/plugged/incsearch.vim/test/cancel.vim	/^function! s:add_line(str)$/;"	f
s:add_line	nvim/autoload/plugged/incsearch.vim/test/count.vim	/^function! s:add_line(str)$/;"	f
s:add_line	nvim/autoload/plugged/incsearch.vim/test/default_behaviors.vim	/^function! s:add_line(str)$/;"	f
s:add_line	nvim/autoload/plugged/incsearch.vim/test/error_warning_emulation.vim	/^function! s:add_line(str)$/;"	f
s:add_line	nvim/autoload/plugged/incsearch.vim/test/highlight.vim	/^function! s:add_line(str)$/;"	f
s:add_line	nvim/autoload/plugged/incsearch.vim/test/incremental_next_prev.vim	/^function! s:add_line(str)$/;"	f
s:add_line	nvim/autoload/plugged/incsearch.vim/test/insert_register.vim	/^function! s:add_line(str)$/;"	f
s:add_line	nvim/autoload/plugged/incsearch.vim/test/jumplist.vim	/^function! s:add_line(str)$/;"	f
s:add_line	nvim/autoload/plugged/incsearch.vim/test/magic_option.vim	/^function! s:add_line(str)$/;"	f
s:add_line	nvim/autoload/plugged/incsearch.vim/test/module.vim	/^function! s:add_line(str)$/;"	f
s:add_line	nvim/autoload/plugged/incsearch.vim/test/n_and_N.vim	/^function! s:add_line(str)$/;"	f
s:add_line	nvim/autoload/plugged/incsearch.vim/test/nomagic.vim	/^function! s:add_line(str)$/;"	f
s:add_line	nvim/autoload/plugged/incsearch.vim/test/operator_pending_behavior.vim	/^function! s:add_line(str)$/;"	f
s:add_line	nvim/autoload/plugged/incsearch.vim/test/register.vim	/^function! s:add_line(str)$/;"	f
s:add_line	nvim/autoload/plugged/incsearch.vim/test/repetition.vim	/^function! s:add_line(str)$/;"	f
s:add_line	nvim/autoload/plugged/incsearch.vim/test/scroll.vim	/^function! s:add_line(str)$/;"	f
s:add_line	nvim/autoload/plugged/incsearch.vim/test/visual_behavior.vim	/^function! s:add_line(str)$/;"	f
s:add_line	nvim/autoload/plugged/incsearch.vim/test/visual_emulation.vim	/^function! s:add_line(str)$/;"	f
s:add_lines	nvim/autoload/plugged/incsearch.vim/test/autonohlsearch.vim	/^function! s:add_lines(lines)$/;"	f
s:add_lines	nvim/autoload/plugged/incsearch.vim/test/cancel.vim	/^function! s:add_lines(lines)$/;"	f
s:add_lines	nvim/autoload/plugged/incsearch.vim/test/count.vim	/^function! s:add_lines(lines)$/;"	f
s:add_lines	nvim/autoload/plugged/incsearch.vim/test/default_behaviors.vim	/^function! s:add_lines(lines)$/;"	f
s:add_lines	nvim/autoload/plugged/incsearch.vim/test/error_warning_emulation.vim	/^function! s:add_lines(lines)$/;"	f
s:add_lines	nvim/autoload/plugged/incsearch.vim/test/fold.vim	/^function! s:add_lines(lines)$/;"	f
s:add_lines	nvim/autoload/plugged/incsearch.vim/test/highlight.vim	/^function! s:add_lines(lines)$/;"	f
s:add_lines	nvim/autoload/plugged/incsearch.vim/test/incremental_next_prev.vim	/^function! s:add_lines(lines)$/;"	f
s:add_lines	nvim/autoload/plugged/incsearch.vim/test/insert_register.vim	/^function! s:add_lines(lines)$/;"	f
s:add_lines	nvim/autoload/plugged/incsearch.vim/test/jumplist.vim	/^function! s:add_lines(lines)$/;"	f
s:add_lines	nvim/autoload/plugged/incsearch.vim/test/magic_option.vim	/^function! s:add_lines(lines)$/;"	f
s:add_lines	nvim/autoload/plugged/incsearch.vim/test/module.vim	/^function! s:add_lines(lines)$/;"	f
s:add_lines	nvim/autoload/plugged/incsearch.vim/test/n_and_N.vim	/^function! s:add_lines(lines)$/;"	f
s:add_lines	nvim/autoload/plugged/incsearch.vim/test/nomagic.vim	/^function! s:add_lines(lines)$/;"	f
s:add_lines	nvim/autoload/plugged/incsearch.vim/test/operator_pending_behavior.vim	/^function! s:add_lines(lines)$/;"	f
s:add_lines	nvim/autoload/plugged/incsearch.vim/test/register.vim	/^function! s:add_lines(lines)$/;"	f
s:add_lines	nvim/autoload/plugged/incsearch.vim/test/repetition.vim	/^function! s:add_lines(lines)$/;"	f
s:add_lines	nvim/autoload/plugged/incsearch.vim/test/scroll.vim	/^function! s:add_lines(lines)$/;"	f
s:add_lines	nvim/autoload/plugged/incsearch.vim/test/visual_behavior.vim	/^function! s:add_lines(lines)$/;"	f
s:add_lines	nvim/autoload/plugged/incsearch.vim/test/visual_emulation.vim	/^function! s:add_lines(lines)$/;"	f
s:add_section	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/default.vim	/^  function! s:add_section(builder, context, key)$/;"	f
s:add_snippet_attribute	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/parser.vim	/^function! s:add_snippet_attribute(snippets_file, line, linenr, snippet_dict) abort$/;"	f
s:added_db_files	nvim/autoload/plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^let s:added_db_files = {}$/;"	v
s:added_dbs	nvim/autoload/plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^let s:added_dbs = []$/;"	v
s:ag_handler	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:ag_handler(lines, has_column)$/;"	f
s:ag_to_qf	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:ag_to_qf(line, has_column)$/;"	f
s:airline_a_commandline	nvim/autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_a_commandline = [ '#0000ff' , '#0cff00' , 17  , 40 ]$/;"	v
s:airline_a_inactive	nvim/autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_a_inactive = [ '#4e4e4e' , '#1c1c1c' , 239 , 234 , '' ]$/;"	v
s:airline_a_insert	nvim/autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_a_insert = [ '#00005f' , '#00dfff' , 17  , 45  ]$/;"	v
s:airline_a_normal	nvim/autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_a_normal   = [ '#00005f' , '#dfff00' , 17  , 190 ]$/;"	v
s:airline_a_visual	nvim/autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_a_visual = [ '#000000' , '#ffaf00' , 232 , 214 ]$/;"	v
s:airline_ale_count	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! s:airline_ale_count(cnt, symbol)$/;"	f
s:airline_ale_get_line_number	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! s:airline_ale_get_line_number(cnt, type) abort$/;"	f
s:airline_b_commandline	nvim/autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_b_commandline = [ '#ffffff' , '#444444' , 255 , 238 ]$/;"	v
s:airline_b_inactive	nvim/autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_b_inactive = [ '#4e4e4e' , '#262626' , 239 , 235 , '' ]$/;"	v
s:airline_b_insert	nvim/autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_b_insert = [ '#ffffff' , '#005fff' , 255 , 27  ]$/;"	v
s:airline_b_normal	nvim/autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_b_normal   = [ '#ffffff' , '#444444' , 255 , 238 ]$/;"	v
s:airline_b_visual	nvim/autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_b_visual = [ '#000000' , '#ff5f00' , 232 , 202 ]$/;"	v
s:airline_c_commandline	nvim/autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_c_commandline = [ '#9cffd3' , '#202020' , 85  , 234 ]$/;"	v
s:airline_c_inactive	nvim/autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_c_inactive = [ '#4e4e4e' , '#303030' , 239 , 236 , '' ]$/;"	v
s:airline_c_insert	nvim/autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_c_insert = [ '#ffffff' , '#000080' , 15  , 17  ]$/;"	v
s:airline_c_normal	nvim/autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_c_normal   = [ '#9cffd3' , '#202020' , 85  , 234 ]$/;"	v
s:airline_c_visual	nvim/autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_c_visual = [ '#ffffff' , '#5f0000' , 15  , 52  ]$/;"	v
s:airline_extensions	nvim/autoload/plugged/vim-airline/plugin/airline.vim	/^function! s:airline_extensions()$/;"	f
s:airline_initialized	nvim/autoload/plugged/vim-airline/plugin/airline.vim	/^let s:airline_initialized = 0$/;"	v
s:airline_languageclient_count	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! s:airline_languageclient_count(cnt, symbol)$/;"	f
s:airline_languageclient_get_line_number	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! s:airline_languageclient_get_line_number(type) abort$/;"	f
s:airline_lsp_count	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/lsp.vim	/^function! s:airline_lsp_count(cnt, symbol) abort$/;"	f
s:airline_lsp_get_line_number	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/lsp.vim	/^function! s:airline_lsp_get_line_number(cnt, type) abort$/;"	f
s:airline_nvimlsp_count	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/nvimlsp.vim	/^function! s:airline_nvimlsp_count(cnt, symbol) abort$/;"	f
s:airline_refresh	nvim/autoload/plugged/vim-airline/plugin/airline.vim	/^function! s:airline_refresh(...)$/;"	f
s:airline_tagbar_last_lookup_time	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^let s:airline_tagbar_last_lookup_time = 0$/;"	v
s:airline_tagbar_last_lookup_val	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^let s:airline_tagbar_last_lookup_val = ''$/;"	v
s:airline_theme	nvim/autoload/plugged/vim-airline/plugin/airline.vim	/^function! s:airline_theme(...)$/;"	f
s:airline_toggle	nvim/autoload/plugged/vim-airline/plugin/airline.vim	/^function! s:airline_toggle()$/;"	f
s:ale_refresh	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! s:ale_refresh()$/;"	f
s:align_lists	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:align_lists(lists)$/;"	f
s:align_pairs	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:align_pairs(list)$/;"	f
s:all	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:all(f, xs) abort$/;"	f
s:all	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:all(f, xs) abort$/;"	f
s:and	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:and(xs) abort$/;"	f
s:and	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:and(xs) abort$/;"	f
s:ansi	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:ansi(str, group, default, ...)$/;"	f
s:ansi	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:ansi = {'black': 30, 'red': 31, 'green': 32, 'yellow': 33, 'blue': 34, 'magenta': 35, 'cya/;"	v
s:any	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:any(f, xs) abort$/;"	f
s:any	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:any(f, xs) abort$/;"	f
s:append_ul	nvim/autoload/plug.vim	/^function! s:append_ul(lnum, text)$/;"	f
s:as_key_config	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Keymapping.vim	/^function! s:as_key_config(config)$/;"	f
s:as_keymapping	nvim/autoload/plugged/incsearch.vim/plugin/incsearch.vim	/^function! s:as_keymapping(key) abort$/;"	f
s:as_windo	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Window.vim	/^function! s:as_windo(base)$/;"	f
s:ask	nvim/autoload/plug.vim	/^function! s:ask(message, ...)$/;"	f
s:ask_no_interrupt	nvim/autoload/plug.vim	/^function! s:ask_no_interrupt(...)$/;"	f
s:assert	nvim/autoload/plugged/incsearch.vim/test/autonohlsearch.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	nvim/autoload/plugged/incsearch.vim/test/cancel.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	nvim/autoload/plugged/incsearch.vim/test/count.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	nvim/autoload/plugged/incsearch.vim/test/default_behaviors.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	nvim/autoload/plugged/incsearch.vim/test/default_settings.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	nvim/autoload/plugged/incsearch.vim/test/error_warning_emulation.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	nvim/autoload/plugged/incsearch.vim/test/fold.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	nvim/autoload/plugged/incsearch.vim/test/highlight.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	nvim/autoload/plugged/incsearch.vim/test/history.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	nvim/autoload/plugged/incsearch.vim/test/incremental_next_prev.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	nvim/autoload/plugged/incsearch.vim/test/insert_register.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	nvim/autoload/plugged/incsearch.vim/test/jumplist.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	nvim/autoload/plugged/incsearch.vim/test/magic_option.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	nvim/autoload/plugged/incsearch.vim/test/module.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	nvim/autoload/plugged/incsearch.vim/test/n_and_N.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	nvim/autoload/plugged/incsearch.vim/test/nomagic.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	nvim/autoload/plugged/incsearch.vim/test/operator_pending_behavior.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	nvim/autoload/plugged/incsearch.vim/test/register.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	nvim/autoload/plugged/incsearch.vim/test/repetition.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	nvim/autoload/plugged/incsearch.vim/test/scroll.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	nvim/autoload/plugged/incsearch.vim/test/util.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	nvim/autoload/plugged/incsearch.vim/test/visual_behavior.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	nvim/autoload/plugged/incsearch.vim/test/visual_emulation.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	nvim/autoload/plugged/neosnippet.vim/test/functions.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	nvim/autoload/plugged/vim-devicons/test/default_setting.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	nvim/autoload/plugged/vim-devicons/test/fileformat.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	nvim/autoload/plugged/vim-devicons/test/filetype.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	nvim/autoload/plugged/vim-highlightedyank/test/test-highlightedyank.vim	/^function! s:assert(a1, a2, kind) abort  "{{{$/;"	f
s:assert.eq_with_default	nvim/autoload/plugged/incsearch.vim/test/default_behaviors.vim	/^function! s:assert.eq_with_default(command, default_command, pattern)$/;"	f
s:assert.equal_line	nvim/autoload/plugged/incsearch.vim/test/visual_emulation.vim	/^function! s:assert.equal_line(line)$/;"	f
s:assert.equal_matches	nvim/autoload/plugged/incsearch.vim/test/visual_emulation.vim	/^function! s:assert.equal_matches(pattern, ...)$/;"	f
s:assert.equal_pos_char	nvim/autoload/plugged/incsearch.vim/test/visual_emulation.vim	/^function! s:assert.equal_pos_char(char)$/;"	f
s:assert.equal_view	nvim/autoload/plugged/incsearch.vim/test/visual_emulation.vim	/^function! s:assert.equal_view(view)$/;"	f
s:assert.not_eq_with_default	nvim/autoload/plugged/incsearch.vim/test/default_behaviors.vim	/^function! s:assert.not_eq_with_default(command, default_command, pattern)$/;"	f
s:assign_name	nvim/autoload/plug.vim	/^function! s:assign_name()$/;"	f
s:assoc	nvim/autoload/plug.vim	/^function! s:assoc(dict, key, val)$/;"	f
s:attach_on_insert_leave	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/autocmd.vim	/^function! s:attach_on_insert_leave() abort$/;"	f
s:augroup	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:augroup(name) dict abort "{{{$/;"	f
s:auto_nohlsearch	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/autocmd.vim	/^function! s:auto_nohlsearch(nest) abort$/;"	f
s:b	nvim/autoload/plugged/vim-buftabline/plugin/buftabline.vim	/^	let s:b = s:n == -1 ? -1 : s:n - 1$/;"	v
s:backward_word	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/IgnoreRegexpBackwardWord.vim	/^function! s:backward_word(str, ...)$/;"	f
s:bang	nvim/autoload/plug.vim	/^function! s:bang(cmd, ...)$/;"	f
s:bar	nvim/autoload/plug.vim	/^function! s:bar()$/;"	f
s:base	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^let s:base = {$/;"	v
s:base	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^	let s:base.variables.modules = s:Signals.make()$/;"	v
s:base	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^let s:base = {$/;"	v
s:base	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Signals.vim	/^let s:base = {$/;"	v
s:base	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/String.vim	/^let s:base = {}$/;"	v
s:base.__empty	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.__empty(...)$/;"	f
s:base.__execute	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.__execute(command)$/;"	f
s:base.__execute__	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.__execute__(cmd)$/;"	f
s:base.__finish	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.__finish()$/;"	f
s:base.__get_keymapping	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.__get_keymapping()$/;"	f
s:base.__init	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.__init()$/;"	f
s:base.__init_variables	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.__init_variables()$/;"	f
s:base.__input	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.__input(input, ...)$/;"	f
s:base.__input_char	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.__input_char(char)$/;"	f
s:base.__inputting	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.__inputting()$/;"	f
s:base.__is_exit	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.__is_exit()$/;"	f
s:base.__keymapping__	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.__keymapping__()$/;"	f
s:base.__main	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.__main(...)$/;"	f
s:base.__update	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.__update()$/;"	f
s:base.add	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^function! s:base.add(name, group, pattern, ...)$/;"	f
s:base.as_windo	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^function! s:base.as_windo()$/;"	f
s:base.backward	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.backward()$/;"	f
s:base.backward	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/String.vim	/^function! s:base.backward()$/;"	f
s:base.backward_word	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.backward_word(...)$/;"	f
s:base.call	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Signals.vim	/^function! s:base.call(func, ...)$/;"	f
s:base.callevent	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.callevent(event)$/;"	f
s:base.char	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.char()$/;"	f
s:base.clear	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^function! s:base.clear(name)$/;"	f
s:base.clear_all	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^function! s:base.clear_all()$/;"	f
s:base.cmap	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.cmap(lhs, rhs)$/;"	f
s:base.cnoremap	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.cnoremap(lhs, rhs)$/;"	f
s:base.connect	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.connect(module, ...)$/;"	f
s:base.connect	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Signals.vim	/^function! s:base.connect(slot)$/;"	f
s:base.cunmap	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.cunmap(lhs)$/;"	f
s:base.delete	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^function! s:base.delete(name)$/;"	f
s:base.delete_all	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^function! s:base.delete_all()$/;"	f
s:base.delete_by	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^function! s:base.delete_by(expr)$/;"	f
s:base.disable	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^function! s:base.disable(name)$/;"	f
s:base.disable_all	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^function! s:base.disable_all()$/;"	f
s:base.disable_keymapping	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.disable_keymapping()$/;"	f
s:base.disconnect	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.disconnect(name)$/;"	f
s:base.disconnect	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Signals.vim	/^function! s:base.disconnect(slot)$/;"	f
s:base.disconnect_by	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Signals.vim	/^function! s:base.disconnect_by(expr)$/;"	f
s:base.draw	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.draw()$/;"	f
s:base.enable	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^function! s:base.enable(name)$/;"	f
s:base.enable_all	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^function! s:base.enable_all()$/;"	f
s:base.enable_keymapping	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.enable_keymapping()$/;"	f
s:base.enable_list	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^function! s:base.enable_list(...)$/;"	f
s:base.execute	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.execute(...)$/;"	f
s:base.exit	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.exit(...)$/;"	f
s:base.exit_code	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.exit_code()$/;"	f
s:base.find_by	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Signals.vim	/^function! s:base.find_by(expr)$/;"	f
s:base.find_first_by	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Signals.vim	/^function! s:base.find_first_by(expr)$/;"	f
s:base.forward	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.forward()$/;"	f
s:base.forward	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/String.vim	/^function! s:base.forward()$/;"	f
s:base.get	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.get(...)$/;"	f
s:base.get_hl_id	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^function! s:base.get_hl_id(name, ...)$/;"	f
s:base.get_module	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.get_module(name)$/;"	f
s:base.get_prompt	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.get_prompt()$/;"	f
s:base.get_slot	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Signals.vim	/^function! s:base.get_slot(val)$/;"	f
s:base.get_suffix	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.get_suffix()$/;"	f
s:base.get_tap_key	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.get_tap_key()$/;"	f
s:base.getchar	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.getchar(...)$/;"	f
s:base.getline	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.getline()$/;"	f
s:base.getpos	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.getpos()$/;"	f
s:base.highlight	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^function! s:base.highlight(name, group, pattern, ...)$/;"	f
s:base.hl_cursor_off	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.hl_cursor_off()$/;"	f
s:base.hl_cursor_on	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.hl_cursor_on()$/;"	f
s:base.hl_list	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^function! s:base.hl_list()$/;"	f
s:base.input	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/String.vim	/^function! s:base.input(str)$/;"	f
s:base.input_key	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.input_key()$/;"	f
s:base.input_key_stack	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.input_key_stack()$/;"	f
s:base.input_key_stack_pop	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.input_key_stack_pop()$/;"	f
s:base.input_key_stack_string	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.input_key_stack_string()$/;"	f
s:base.insert	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.insert(word, ...)$/;"	f
s:base.is_added	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^function! s:base.is_added(name)$/;"	f
s:base.is_enable_keymapping	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.is_enable_keymapping()$/;"	f
s:base.is_enabled	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^function! s:base.is_enabled(name, ...)$/;"	f
s:base.is_exit	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.is_exit()$/;"	f
s:base.is_input	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.is_input(key, ...)$/;"	f
s:base.keymapping	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.keymapping()$/;"	f
s:base.length	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/String.vim	/^function! s:base.length()$/;"	f
s:base.next	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/String.vim	/^function! s:base.next()$/;"	f
s:base.pos	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/String.vim	/^function! s:base.pos()$/;"	f
s:base.pos_char	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/String.vim	/^function! s:base.pos_char()$/;"	f
s:base.prev	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/String.vim	/^function! s:base.prev()$/;"	f
s:base.remove	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/String.vim	/^function! s:base.remove(index)$/;"	f
s:base.remove_next	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/String.vim	/^function! s:base.remove_next()$/;"	f
s:base.remove_pos	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/String.vim	/^function! s:base.remove_pos()$/;"	f
s:base.remove_prev	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/String.vim	/^function! s:base.remove_prev()$/;"	f
s:base.set	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/String.vim	/^function! s:base.set(item)$/;"	f
s:base.set_input_key_stack	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.set_input_key_stack(stack)$/;"	f
s:base.set_pos	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/String.vim	/^function! s:base.set_pos(pos)$/;"	f
s:base.set_prompt	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.set_prompt(prompt)$/;"	f
s:base.set_str	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/String.vim	/^function! s:base.set_str(str)$/;"	f
s:base.set_suffix	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.set_suffix(str)$/;"	f
s:base.setchar	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.setchar(char, ...)$/;"	f
s:base.setline	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.setline(line)$/;"	f
s:base.setpos	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.setpos(pos)$/;"	f
s:base.slots	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Signals.vim	/^function! s:base.slots()$/;"	f
s:base.sort_by	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Signals.vim	/^function! s:base.sort_by(expr)$/;"	f
s:base.start	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.start(...)$/;"	f
s:base.str	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/String.vim	/^function! s:base.str()$/;"	f
s:base.tap_keyinput	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.tap_keyinput(key)$/;"	f
s:base.to_list	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^function! s:base.to_list()$/;"	f
s:base.to_list_by	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^function! s:base.to_list_by(expr)$/;"	f
s:base.untap_keyinput	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:base.untap_keyinput(key)$/;"	f
s:base.update	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^function! s:base.update(name)$/;"	f
s:base.update_all	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^function! s:base.update_all()$/;"	f
s:base.variables.modules.get_slot	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^	function! s:base.variables.modules.get_slot(val)$/;"	f
s:base_spec	nvim/autoload/plug.vim	/^let s:base_spec = { 'branch': '', 'frozen': 0 }$/;"	v
s:basic16	nvim/autoload/plugged/vim-airline/autoload/airline/msdos.vim	/^let s:basic16 = [$/;"	v
s:batchfile	nvim/autoload/plug.vim	/^  function! s:batchfile(cmd)$/;"	f
s:better_whitespace_initialized	nvim/autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^let s:better_whitespace_initialized = 0$/;"	v
s:bin	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^    let s:bin.preview = fnamemodify(s:bin.preview, ':8')$/;"	v
s:bin	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^    let s:bin.preview = split(system('for %A in ("'.s:bin.preview.'") do @echo %~sA'), "\\n")[0]$/;"	v
s:bin	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:bin = {$/;"	v
s:bin_dir	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:bin_dir = expand('<sfile>:p:h:h:h').'\/bin\/'$/;"	v
s:bin_dir	nvim/autoload/plugged/minimap.vim/autoload/minimap/vim.vim	/^let s:bin_dir = expand('<sfile>:p:h:h:h').'\/bin\/'$/;"	v
s:binary_search	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:binary_search(list, value, ...) abort$/;"	f
s:binary_search	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:binary_search(list, value, ...) abort$/;"	f
s:blink	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^function! s:blink(highlight, hi_group, duration) abort "{{{$/;"	f
s:bracketed_paste	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/modules/bracketed_paste.vim	/^let s:bracketed_paste =  {$/;"	v
s:bracketed_paste.on_enter	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/modules/bracketed_paste.vim	/^function! s:bracketed_paste.on_enter(cmdline) abort$/;"	f
s:bracketed_paste.on_leave	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/modules/bracketed_paste.vim	/^function! s:bracketed_paste.on_leave(cmdline) abort$/;"	f
s:break	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:break(f, xs) abort$/;"	f
s:break	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:break(f, xs) abort$/;"	f
s:btags_sink	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:btags_sink(lines)$/;"	f
s:btags_source	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:btags_source(tag_cmds)$/;"	f
s:buf_min_count	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^let s:buf_min_count = get(g:, 'airline#extensions#tabline#buffer_min_count', 0)$/;"	v
s:buf_modified_symbol	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^let s:buf_modified_symbol = g:airline_symbols.modified$/;"	v
s:buf_nr_format	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^let s:buf_nr_format = get(g:, 'airline#extensions#tabline#buffer_nr_format', '%s: ')$/;"	v
s:buf_nr_show	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^let s:buf_nr_show = get(g:, 'airline#extensions#tabline#buffer_nr_show', 0)$/;"	v
s:buffer_enter_handler	nvim/autoload/plugged/minimap.vim/autoload/minimap/vim.vim	/^function! s:buffer_enter_handler() abort$/;"	f
s:buffer_line_handler	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:buffer_line_handler(lines)$/;"	f
s:buffer_lines	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:buffer_lines(query)$/;"	f
s:buflisted	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:buflisted()$/;"	f
s:bufnr	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Gift.vim	/^function! s:bufnr(expr)$/;"	f
s:bufnr	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Gift/Window.vim	/^function! s:bufnr(nr)$/;"	f
s:bufopen	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:bufopen(lines)$/;"	f
s:build_command	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! s:build_command(color)$/;"	f
s:build_sections	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/default.vim	/^function! s:build_sections(builder, context, keys)$/;"	f
s:builder	nvim/autoload/plugged/vim-airline/t/builder.vim	/^    let s:builder = airline#builder#new({'active': 0})$/;"	v
s:builder	nvim/autoload/plugged/vim-airline/t/builder.vim	/^    let s:builder = airline#builder#new({'active': 1})$/;"	v
s:builder	nvim/autoload/plugged/vim-airline/t/extensions_default.vim	/^    let s:builder = airline#builder#new({'active': 1})$/;"	v
s:bulk_input_char	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/modules/bulk_input_char.vim	/^let s:bulk_input_char = {$/;"	v
s:bulk_input_char.on_char_pre	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/modules/bulk_input_char.vim	/^function! s:bulk_input_char.on_char_pre(cmdline) abort$/;"	f
s:cache_command	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Doautocmd.vim	/^let s:cache_command = {}$/;"	v
s:cache_project_root	nvim/autoload/plugged/vim-gutentags/autoload/gutentags.vim	/^function! s:cache_project_root(path) abort$/;"	f
s:cache_sid	nvim/autoload/plugged/incsearch.vim/autoload/vital/incsearch.vim	/^let s:cache_sid = {}$/;"	v
s:cache_sid	nvim/autoload/plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^let s:cache_sid = {}$/;"	v
s:cache_sid	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^let s:cache_sid = {}$/;"	v
s:cached_translate	nvim/autoload/plugged/editorconfig-vim/autoload/editorconfig_core/fnmatch.vim	/^function! s:cached_translate(pat)$/;"	f
s:call	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Signals.vim	/^function! s:call(list, func, ...)$/;"	f
s:cancel_highlight	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^function! s:cancel_highlight(id, event) abort  "{{{$/;"	f
s:capture	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Digraphs.vim	/^function! s:capture(cmd)$/;"	f
s:capture	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Highlight.vim	/^function! s:capture(name)$/;"	f
s:capture	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Keymapping.vim	/^function! s:capture(...)$/;"	f
s:capture	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Message.vim	/^function! s:capture(command) abort$/;"	f
s:capture_list	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Keymapping.vim	/^function! s:capture_list(...)$/;"	f
s:carbonNowSh	nvim/autoload/plugged/vim-carbon-now-sh/plugin/vim-carbon-now-sh.vim	/^function! s:carbonNowSh() range$/;"	f
s:cd	nvim/autoload/plugged/vim-rooter/plugin/rooter.vim	/^function! s:cd(dir)$/;"	f
s:centerbuf	nvim/autoload/plugged/vim-buftabline/plugin/buftabline.vim	/^let s:centerbuf = winbufnr(0)$/;"	v
s:char_range	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:char_range(from, to) abort$/;"	f
s:char_range	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:char_range(from, to) abort$/;"	f
s:characterRequiresUrlEncoding	nvim/autoload/plugged/vim-carbon-now-sh/plugin/vim-carbon-now-sh.vim	/^function! s:characterRequiresUrlEncoding(character) "{{{$/;"	f
s:check_assertions	nvim/autoload/plugged/editorconfig-vim/autoload/editorconfig_core/handler.vim	/^function! s:check_assertions(job)$/;"	f
s:check_back_space	.config/nvim/configs/coc.vim	/^function! s:check_back_space() abort$/;"	f
s:check_defined	nvim/autoload/plugged/vim-airline/autoload/airline/init.vim	/^function! s:check_defined(variable, default)$/;"	f
s:check_defined_section	nvim/autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^function! s:check_defined_section(name)$/;"	f
s:check_mixed_indent	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! s:check_mixed_indent()$/;"	f
s:check_mixed_indent_file	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! s:check_mixed_indent_file()$/;"	f
s:check_old_cache	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/System/Cache/Deprecated.vim	/^function! s:check_old_cache(cache_dir, filename) abort$/;"	f
s:check_requirements	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:check_requirements()$/;"	f
s:check_ruby	nvim/autoload/plug.vim	/^function! s:check_ruby()$/;"	f
s:checked	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:checked = 0$/;"	v
s:checkout	nvim/autoload/plug.vim	/^function! s:checkout(spec)$/;"	f
s:chomp	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:chomp(str)$/;"	f
s:chomp	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:chomp(str) abort "{{{$/;"	f
s:chop	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:chop(str) abort "{{{$/;"	f
s:chsh	nvim/autoload/plug.vim	/^function! s:chsh(swap)$/;"	f
s:clean	nvim/autoload/plug.vim	/^function! s:clean(force)$/;"	f
s:clean_jobs	nvim/autoload/plugged/vim-airline/autoload/airline/async.vim	/^let s:clean_jobs     = {}$/;"	v
s:cleanup_cmdline	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^function! s:cleanup_cmdline() abort$/;"	f
s:clear	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/Dict.vim	/^function! s:clear(dict) abort$/;"	f
s:clear	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:clear(list) abort$/;"	f
s:clear	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:clear(list) abort$/;"	f
s:clear	nvim/autoload/plugged/vim-airline/t/init.vim	/^function! s:clear()$/;"	f
s:clear_autocmds	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^function! s:clear_autocmds() abort "{{{$/;"	f
s:clear_dummy_cursor	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^function! s:clear_dummy_cursor(dummycursor) abort  "{{{$/;"	f
s:cli	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/cli.vim	/^let s:cli = vital#incsearch#import('Over.Commandline').make_default('\/')$/;"	v
s:cli	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/extend.vim	/^let s:cli = {$/;"	v
s:cli.__keymapping__	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/cli.vim	/^function! s:cli.__keymapping__() abort$/;"	f
s:cli._build_search_cmd	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/extend.vim	/^function! s:cli._build_search_cmd(pattern, ...) abort$/;"	f
s:cli._call_execute_event	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/extend.vim	/^function! s:cli._call_execute_event(...) abort$/;"	f
s:cli._combine_pattern	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/extend.vim	/^function! s:cli._combine_pattern(pattern, offset) abort$/;"	f
s:cli._convert	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/extend.vim	/^function! s:cli._convert(pattern) abort$/;"	f
s:cli._exit_incsearch	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/extend.vim	/^function! s:cli._exit_incsearch(...) abort$/;"	f
s:cli._generate_command	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/extend.vim	/^function! s:cli._generate_command(input) abort$/;"	f
s:cli._parse_pattern	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/extend.vim	/^function! s:cli._parse_pattern() abort$/;"	f
s:clock	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/clock.vim	/^let s:clock = {$/;"	v
s:clock.elapsed	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/clock.vim	/^function! s:clock.elapsed() dict abort "{{{$/;"	f
s:clock.pause	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/clock.vim	/^function! s:clock.pause() dict abort "{{{$/;"	f
s:clock.start	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/clock.vim	/^function! s:clock.start() dict abort  "{{{$/;"	f
s:clock.stop	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/clock.vim	/^function! s:clock.stop() dict abort  "{{{$/;"	f
s:close	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Gift/Window.vim	/^function! s:close(nr, close_cmd)$/;"	f
s:close_window	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Gift.vim	/^function! s:close_window(expr, ...)$/;"	f
s:close_window	nvim/autoload/plugged/minimap.vim/autoload/minimap/vim.vim	/^function! s:close_window() abort$/;"	f
s:close_window_by	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Gift.vim	/^function! s:close_window_by(expr, ...)$/;"	f
s:close_window_last	nvim/autoload/plugged/minimap.vim/autoload/minimap/vim.vim	/^function! s:close_window_last() abort$/;"	f
s:cmd_history_sink	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:cmd_history_sink(lines)$/;"	f
s:cmdheight	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/DrawCommandline.vim	/^let s:cmdheight = {}$/;"	v
s:cmdheight.get	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:cmdheight.get()$/;"	f
s:cmdheight.restore	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:cmdheight.restore()$/;"	f
s:cmdheight.save	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:cmdheight.save()$/;"	f
s:cntr	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^let s:cntr = 0$/;"	v
s:coc_git_enabled	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:coc_git_enabled() abort$/;"	f
s:color_template	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^let s:color_template = get(g:, 'airline#extensions#ctrlp#color_template', 'insert')$/;"	v
s:color_template	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/promptline.vim	/^let s:color_template = get(g:, 'airline#extensions#promptline#color_template', 'normal')$/;"	v
s:color_template	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tmuxline.vim	/^let s:color_template = get(g:, 'airline#extensions#tmuxline#color_template', 'normal')$/;"	v
s:column	nvim/autoload/plugged/vim-devicons/autoload/vimfiler/columns/devicons.vim	/^let s:column = {$/;"	v
s:column.define_syntax	nvim/autoload/plugged/vim-devicons/autoload/vimfiler/columns/devicons.vim	/^function! s:column.define_syntax(context) abort "{{{$/;"	f
s:column.get	nvim/autoload/plugged/vim-devicons/autoload/vimfiler/columns/devicons.vim	/^function! s:column.get(file, context) abort$/;"	f
s:column.length	nvim/autoload/plugged/vim-devicons/autoload/vimfiler/columns/devicons.vim	/^function! s:column.length(files, context) abort$/;"	f
s:column_display	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/csv.vim	/^let s:column_display = get(g:, 'airline#extensions#csv#column_display', 'Number')$/;"	v
s:combinations	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:combinations(list, r) abort$/;"	f
s:combinations	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:combinations(list, r) abort$/;"	f
s:command	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Capture.vim	/^function! s:command(cmd, ...)$/;"	f
s:command_l1_bg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:command_l1_bg = s:palette.yellow$/;"	v
s:command_l1_fg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:command_l1_fg = s:palette.bg0$/;"	v
s:command_l2_bg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:command_l2_bg = s:palette.bg4$/;"	v
s:command_l2_fg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:command_l2_fg = s:palette.fg$/;"	v
s:command_middle_bg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:command_middle_bg = s:palette.bg1$/;"	v
s:command_middle_fg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:command_middle_fg = s:palette.fg$/;"	v
s:command_r1_bg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:command_r1_bg = s:palette.yellow$/;"	v
s:command_r1_fg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:command_r1_fg = s:palette.bg0$/;"	v
s:command_r2_bg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:command_r2_bg = s:palette.bg4$/;"	v
s:command_r2_fg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:command_r2_fg = s:palette.fg$/;"	v
s:command_sink	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:command_sink(lines)$/;"	f
s:commandline_mid_bg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:commandline_mid_bg = s:palette.bg1$/;"	v
s:commandline_mid_fg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:commandline_mid_fg = s:palette.fg$/;"	v
s:commandline_mod_bg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:commandline_mod_bg = s:palette.bg1$/;"	v
s:commandline_mod_fg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:commandline_mod_fg = s:palette.orange$/;"	v
s:commandline_side_bg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:commandline_side_bg = s:palette.orange$/;"	v
s:commandline_side_fg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:commandline_side_fg = s:palette.bg0$/;"	v
s:commandline_sub_bg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:commandline_sub_bg = s:palette.bg4$/;"	v
s:commandline_sub_fg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:commandline_sub_fg = s:palette.fg$/;"	v
s:commit_mode	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/vimagit.vim	/^let s:commit_mode = {'ST': 'STAGING', 'CC': 'COMMIT', 'CA': 'AMEND'}$/;"	v
s:commits	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:commits(buffer_local, args)$/;"	f
s:commits_sink	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:commits_sink(lines)$/;"	f
s:common_head	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:common_head(strs) abort$/;"	f
s:compare_git_uri	nvim/autoload/plug.vim	/^function! s:compare_git_uri(a, b)$/;"	f
s:compare_pos	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/util.vim	/^function! s:compare_pos(x, y) abort$/;"	f
s:complete_insert	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:complete_insert(lines)$/;"	f
s:complete_trigger	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:complete_trigger()$/;"	f
s:concat	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:concat(list) abort$/;"	f
s:concat	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:concat(list) abort$/;"	f
s:config	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/config.vim	/^let s:config = {$/;"	v
s:configuration	nvim/autoload/plugged/sonokai/after/ftplugin/dosini/sonokai.vim	/^let s:configuration = sonokai#get_configuration()$/;"	v
s:configuration	nvim/autoload/plugged/sonokai/after/ftplugin/help/sonokai.vim	/^let s:configuration = sonokai#get_configuration()$/;"	v
s:configuration	nvim/autoload/plugged/sonokai/after/ftplugin/html/sonokai.vim	/^let s:configuration = sonokai#get_configuration()$/;"	v
s:configuration	nvim/autoload/plugged/sonokai/after/ftplugin/javascriptreact/sonokai.vim	/^let s:configuration = sonokai#get_configuration()$/;"	v
s:configuration	nvim/autoload/plugged/sonokai/after/ftplugin/markdown/sonokai.vim	/^let s:configuration = sonokai#get_configuration()$/;"	v
s:configuration	nvim/autoload/plugged/sonokai/after/ftplugin/python/sonokai.vim	/^let s:configuration = sonokai#get_configuration()$/;"	v
s:configuration	nvim/autoload/plugged/sonokai/after/ftplugin/rst/sonokai.vim	/^let s:configuration = sonokai#get_configuration()$/;"	v
s:configuration	nvim/autoload/plugged/sonokai/after/ftplugin/toml/sonokai.vim	/^let s:configuration = sonokai#get_configuration()$/;"	v
s:configuration	nvim/autoload/plugged/sonokai/after/ftplugin/typescriptreact/sonokai.vim	/^let s:configuration = sonokai#get_configuration()$/;"	v
s:configuration	nvim/autoload/plugged/sonokai/after/ftplugin/undotree/sonokai.vim	/^let s:configuration = sonokai#get_configuration()$/;"	v
s:configuration	nvim/autoload/plugged/sonokai/after/ftplugin/vim-plug/sonokai.vim	/^let s:configuration = sonokai#get_configuration()$/;"	v
s:configuration	nvim/autoload/plugged/sonokai/after/ftplugin/vim/sonokai.vim	/^let s:configuration = sonokai#get_configuration()$/;"	v
s:configuration	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:configuration = sonokai#get_configuration()$/;"	v
s:configuration	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:configuration = sonokai#get_configuration()$/;"	v
s:configuration	nvim/autoload/plugged/sonokai/colors/sonokai.vim	/^let s:configuration = sonokai#get_configuration()$/;"	v
s:conflict_marker	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! s:conflict_marker()$/;"	f
s:conj	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:conj(xs, x) abort$/;"	f
s:conj	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:conj(xs, x) abort$/;"	f
s:cons	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:cons(x, xs) abort$/;"	f
s:cons	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:cons(x, xs) abort$/;"	f
s:contains_multibyte	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:contains_multibyte(str) abort "{{{$/;"	f
s:contexts	nvim/autoload/plugged/vim-airline/autoload/airline.vim	/^let s:contexts = {}$/;"	v
s:core_funcrefs	nvim/autoload/plugged/vim-airline/autoload/airline.vim	/^let s:core_funcrefs = [$/;"	v
s:count_pattern	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/util.vim	/^function! s:count_pattern(pattern, ...) abort$/;"	f
s:cpo_save	nvim/autoload/plug.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/autoload/plugged/fzf.vim/plugin/fzf.vim	/^let s:cpo_save = &cpo$/;"	v
s:create	nvim/autoload/plugged/vim-airline/autoload/airline/section.vim	/^function! s:create(parts, append)$/;"	f
s:csi	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:csi(color, fg)$/;"	f
s:ctrlspace	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:ctrlspace = get(g:, 'CtrlSpaceLoaded', 0)$/;"	v
s:current	nvim/autoload/plugged/vim-rooter/plugin/rooter.vim	/^function! s:current()$/;"	f
s:current_bufnr	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:current_bufnr = -1$/;"	v
s:current_bufnr	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^let s:current_bufnr = -1$/;"	v
s:current_bufnr	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^let s:current_bufnr = -1$/;"	v
s:current_bufnr	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^let s:current_bufnr = -1$/;"	v
s:current_highlight	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/highlight.vim	/^let s:current_highlight = highlightedyank#highlight#new('None', [0, 1, 1, 0],$/;"	v
s:current_modified	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:current_modified = 0$/;"	v
s:current_modified	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^let s:current_modified = 0$/;"	v
s:current_modified	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^let s:current_modified = 0$/;"	v
s:current_modified	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^let s:current_modified = 0$/;"	v
s:current_tabcnt	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:current_tabcnt = -1$/;"	v
s:current_tabline	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:current_tabline = ''$/;"	v
s:current_tabline	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^let s:current_tabline = ''$/;"	v
s:current_tabline	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^let s:current_tabline = ''$/;"	v
s:current_tabnr	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^let s:current_tabnr = -1$/;"	v
s:current_tabnr	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^let s:current_tabnr = -1$/;"	v
s:current_tabnr	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^let s:current_tabnr = -1$/;"	v
s:current_visible_buffers	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:current_visible_buffers = []$/;"	v
s:cursor_move_handler	nvim/autoload/plugged/minimap.vim/autoload/minimap/vim.vim	/^function! s:cursor_move_handler() abort$/;"	f
s:debug	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^    let s:debug = 1$/;"	v
s:debug	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^let s:debug = 0$/;"	v
s:debugfile	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^let s:debugfile = $HOME.'\/undotree_debug.log'$/;"	v
s:decimal_group	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/default.vim	/^  let s:decimal_group = ''$/;"	v
s:decimal_group	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/default.vim	/^  let s:decimal_group = ','$/;"	v
s:decimal_group	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/default.vim	/^  let s:decimal_group = '.'$/;"	v
s:decimal_group	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/readingtime.vim	/^  let s:decimal_group = ''$/;"	v
s:decimal_group	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/readingtime.vim	/^  let s:decimal_group = ','$/;"	v
s:decimal_group	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/readingtime.vim	/^  let s:decimal_group = '.'$/;"	v
s:deepextend	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/util.vim	/^function! s:deepextend(expr1, expr2) abort$/;"	f
s:default	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Maker.vim	/^function! s:default(...)$/;"	f
s:default_action	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:default_action = {$/;"	v
s:default_checks	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:default_checks = ['indent', 'trailing', 'mixed-indent-file', 'conflicts']$/;"	v
s:default_highlight	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/highlight.vim	/^let s:default_highlight = {$/;"	v
s:default_highlight	nvim/autoload/plugged/vim-highlightedyank/plugin/highlightedyank.vim	/^function! s:default_highlight() abort$/;"	f
s:default_keymappings	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/config.vim	/^let s:default_keymappings = {$/;"	v
s:default_register	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^function! s:default_register() abort  "{{{$/;"	f
s:default_shell	nvim/autoload/plugged/minimap.vim/autoload/minimap/vim.vim	/^    let s:default_shell = 'cmd.exe'$/;"	v
s:default_shell	nvim/autoload/plugged/minimap.vim/autoload/minimap/vim.vim	/^    let s:default_shell = 'sh'$/;"	v
s:define_commands	nvim/autoload/plug.vim	/^function! s:define_commands()$/;"	f
s:defs	nvim/autoload/plugged/fzf.vim/plugin/fzf.vim	/^function! s:defs(commands)$/;"	f
s:delete	nvim/autoload/plug.vim	/^function! s:delete(range, force)$/;"	f
s:delete	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/System/Cache/Deprecated.vim	/^function! s:delete(cache_dir, filename) abort$/;"	f
s:delete_augroup	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:delete_augroup(name) abort "{{{$/;"	f
s:delete_op	nvim/autoload/plug.vim	/^function! s:delete_op(type, ...)$/;"	f
s:deletefile	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/System/Cache/Deprecated.vim	/^function! s:deletefile(cache_dir, filename) abort$/;"	f
s:denite_ver	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/denite.vim	/^let s:denite_ver = (exists('*denite#get_status_mode') ? 2 : 3)$/;"	v
s:diagnostics	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^let s:diagnostics = {}$/;"	v
s:diagnostics_for_buffer	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! s:diagnostics_for_buffer()$/;"	f
s:dictfunction	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/util.vim	/^function! s:dictfunction(dictfunc, dict) abort$/;"	f
s:did_check_exe	nvim/autoload/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:did_check_exe = 0$/;"	v
s:diff	nvim/autoload/plug.vim	/^function! s:diff()$/;"	f
s:diff_cmd	nvim/autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^let s:diff_cmd=g:diff_binary.' -a --unchanged-group-format="" --old-group-format="" --new-group-/;"	v
s:diffidx	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:diffidx(a, b) abort$/;"	f
s:diffpanel	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^let s:diffpanel = s:new(s:panel)$/;"	v
s:diffpanel.BindAu	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! s:diffpanel.BindAu() abort$/;"	f
s:diffpanel.CleanUpHighlight	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! s:diffpanel.CleanUpHighlight() abort$/;"	f
s:diffpanel.GetStatusLine	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! s:diffpanel.GetStatusLine() abort$/;"	f
s:diffpanel.Hide	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! s:diffpanel.Hide() abort$/;"	f
s:diffpanel.Init	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! s:diffpanel.Init() abort$/;"	f
s:diffpanel.ParseDiff	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! s:diffpanel.ParseDiff(diffresult, targetBufnr) abort$/;"	f
s:diffpanel.Show	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! s:diffpanel.Show() abort$/;"	f
s:diffpanel.Toggle	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! s:diffpanel.Toggle() abort$/;"	f
s:diffpanel.Update	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! s:diffpanel.Update(seq,targetBufnr,targetid) abort$/;"	f
s:digraph	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Digraphs.vim	/^function! s:digraph() abort$/;"	f
s:dirpath	nvim/autoload/plug.vim	/^  function! s:dirpath(path)$/;"	f
s:dirsep	nvim/autoload/plugged/vim-buftabline/plugin/buftabline.vim	/^let s:dirsep = fnamemodify(getcwd(),':p')[-1:]$/;"	v
s:display_git_branch	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:display_git_branch()$/;"	f
s:display_hg_branch	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:display_hg_branch()$/;"	f
s:do	nvim/autoload/plug.vim	/^function! s:do(pull, force, todo)$/;"	f
s:do_vim_enter	nvim/autoload/plugged/vim-airline/plugin/airline.vim	/^function! s:do_vim_enter()$/;"	f
s:doautocmd	nvim/autoload/plug.vim	/^function! s:doautocmd(...)$/;"	f
s:doautocmd_user	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Doautocmd.vim	/^function! s:doautocmd_user(prefix, command)$/;"	f
s:dobufread	nvim/autoload/plug.vim	/^function! s:dobufread(names)$/;"	f
s:done	nvim/autoload/plugged/vim-rooter/test/runner.vim	/^  let s:done += 1$/;"	v
s:done	nvim/autoload/plugged/vim-rooter/test/runner.vim	/^let s:done = 0$/;"	v
s:drop_while	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:drop_while(f, xs) abort$/;"	f
s:dstring	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:dstring(expr) abort$/;"	f
s:dump_bytes	nvim/autoload/plugged/editorconfig-vim/autoload/editorconfig_core/fnmatch.vim	/^function! s:dump_bytes(text)$/;"	f
s:dump_chars	nvim/autoload/plugged/editorconfig-vim/autoload/editorconfig_core/fnmatch.vim	/^function! s:dump_chars(text)$/;"	f
s:echo	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Message.vim	/^function! s:echo(hl, msg) abort$/;"	f
s:echomsg	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Message.vim	/^function! s:echomsg(hl, msg) abort$/;"	f
s:edit_content	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Buffer.vim	/^function! s:edit_content(content, ...) abort$/;"	f
s:edit_options	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/commands.vim	/^let s:edit_options = [$/;"	v
s:editorconfig_core_mode	nvim/autoload/plugged/editorconfig-vim/plugin/editorconfig.vim	/^    let s:editorconfig_core_mode = ''$/;"	v
s:editorconfig_core_mode	nvim/autoload/plugged/editorconfig-vim/plugin/editorconfig.vim	/^    let s:editorconfig_core_mode = g:EditorConfig_core_mode$/;"	v
s:editorconfig_exec_path	nvim/autoload/plugged/editorconfig-vim/plugin/editorconfig.vim	/^    let s:editorconfig_exec_path = ''$/;"	v
s:editorconfig_exec_path	nvim/autoload/plugged/editorconfig-vim/plugin/editorconfig.vim	/^    let s:editorconfig_exec_path = g:EditorConfig_exec_path$/;"	v
s:emacs	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/KeyMapping.vim	/^let s:emacs = {$/;"	v
s:emacs.keymapping	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/KeyMapping.vim	/^function! s:emacs.keymapping(cmdline)$/;"	f
s:emacs_like	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/cli.vim	/^let s:emacs_like = s:KeyMapping.make_emacs()$/;"	v
s:emacs_like._condition	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/cli.vim	/^function! s:emacs_like._condition() abort$/;"	f
s:emulate_search_error	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^function! s:emulate_search_error(direction, ...) abort$/;"	f
s:emulate_search_warning	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^function! s:emulate_search_warning(direction, from, to) abort$/;"	f
s:enabled	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/localsearch.vim	/^let s:enabled = get(g:, 'airline#extensions#localsearch#enabled', 1)$/;"	v
s:enabled	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:enabled = get(g:, 'airline#extensions#whitespace#enabled', 1)$/;"	v
s:ends_with	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:ends_with(str, suffix) abort$/;"	f
s:environment	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Guard.vim	/^let s:environment = {}$/;"	v
s:environment.restore	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Guard.vim	/^function! s:environment.restore() abort$/;"	f
s:eol_whitespace_pattern	nvim/autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^    let s:eol_whitespace_pattern .= '\\|[' . s:whitespace_chars . ']\\+\\ze[\\u0009]'$/;"	v
s:eol_whitespace_pattern	nvim/autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^    let s:eol_whitespace_pattern = '[^\\u0009' . s:whitespace_chars . ']\\@1<=' . s:eol_whitespa/;"	v
s:eol_whitespace_pattern	nvim/autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^let s:eol_whitespace_pattern = '[\\u0009' . s:whitespace_chars . ']\\+$'$/;"	v
s:err	nvim/autoload/plug.vim	/^function! s:err(msg)$/;"	f
s:errmsg	nvim/autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^let s:errmsg='please set g:current_line_whitespace_disabled_{soft,hard} and reload better whites/;"	v
s:error	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Exception.vim	/^function! s:error(text, where)$/;"	f
s:error	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Message.vim	/^function! s:error(msg) abort$/;"	f
s:error_bg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:error_bg = s:palette.bg_red$/;"	v
s:error_fg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:error_fg = s:palette.bg0$/;"	v
s:error_symbol	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/coc.vim	/^let s:error_symbol = get(g:, 'airline#extensions#coc#error_symbol', 'E:')$/;"	v
s:error_symbol	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^let s:error_symbol = get(g:, 'airline#extensions#languageclient#error_symbol', 'E:')$/;"	v
s:error_symbol	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/neomake.vim	/^let s:error_symbol = get(g:, 'airline#extensions#neomake#error_symbol', 'E:')$/;"	v
s:error_symbol	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^let s:error_symbol = get(g:, 'airline#extensions#syntastic#error_symbol', 'E:')$/;"	v
s:error_symbol	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/ycm.vim	/^let s:error_symbol = get(g:, 'airline#extensions#ycm#error_symbol', 'E:')$/;"	v
s:errorbg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:errorbg = s:palette.bg_red$/;"	v
s:errored	nvim/autoload/plugged/vim-rooter/test/runner.vim	/^      let s:errored = 0$/;"	v
s:errored	nvim/autoload/plugged/vim-rooter/test/runner.vim	/^let s:errored = 0$/;"	v
s:errorfg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:errorfg = s:palette.bg0$/;"	v
s:errors	nvim/autoload/plugged/vim-rooter/test/runner.vim	/^      let s:errors += 1$/;"	v
s:errors	nvim/autoload/plugged/vim-rooter/test/runner.vim	/^  let s:errors += 1$/;"	v
s:errors	nvim/autoload/plugged/vim-rooter/test/runner.vim	/^let s:errors = 0$/;"	v
s:esc	nvim/autoload/plug.vim	/^function! s:esc(path)$/;"	f
s:escape	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:escape(path)$/;"	f
s:escape_file_searching	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:escape_file_searching(buffer_name) abort$/;"	f
s:escape_file_searching	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:escape_file_searching(buffer_name) abort$/;"	f
s:escape_pattern	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:escape_pattern(str) abort$/;"	f
s:escape_pattern	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:escape_pattern(str) abort$/;"	f
s:escape_pattern	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:escape_pattern(str) abort$/;"	f
s:escape_regex	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Incsearch.vim	/^function! s:escape_regex(pattern)$/;"	f
s:escape_special_key	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Keymapping.vim	/^function! s:escape_special_key(key)$/;"	f
s:escape_unbalanced_left_r	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/util.vim	/^function! s:escape_unbalanced_left_r(pattern) abort$/;"	f
s:escaped_backslash	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^let s:escaped_backslash     = '\\m\\%(^\\|[^\\\\]\\)\\%(\\\\\\\\\\)*'$/;"	v
s:escaped_backslash	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/util.vim	/^let s:escaped_backslash = '\\m\\%(^\\|[^\\\\]\\)\\%(\\\\\\\\\\)*\\zs'$/;"	v
s:escrtp	nvim/autoload/plug.vim	/^function! s:escrtp(path)$/;"	f
s:eval	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:eval(dict, key, arg)$/;"	f
s:eval_snippet	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/view.vim	/^function! s:eval_snippet(snippet_text) abort$/;"	f
s:evaluate_tabline	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! s:evaluate_tabline(tabline)$/;"	f
s:excmds	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:excmds()$/;"	f
s:exec	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! s:exec(cmd) abort$/;"	f
s:exec_separator	nvim/autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^function! s:exec_separator(dict, from, to, inverse, suffix)$/;"	f
s:exec_silent	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! s:exec_silent(cmd) abort$/;"	f
s:execute	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Gift.vim	/^function! s:execute(expr, execute)$/;"	f
s:execute	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Gift/Window.vim	/^function! s:execute(nr, expr)$/;"	f
s:exists	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Gift/Window.vim	/^function! s:exists(nr)$/;"	f
s:exists	nvim/autoload/plugged/incsearch.vim/autoload/vital/incsearch.vim	/^function! s:exists(name) abort dict$/;"	f
s:exists	nvim/autoload/plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^function! s:exists(name) abort dict$/;"	f
s:exists	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^function! s:exists(name) abort dict$/;"	f
s:exitIfLast	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! s:exitIfLast() abort$/;"	f
s:expand_placeholder	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/view.vim	/^function! s:expand_placeholder(start, end, holder_cnt, line, ...) abort$/;"	f
s:expand_target_placeholder	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/view.vim	/^function! s:expand_target_placeholder(line, col) abort$/;"	f
s:ext	nvim/autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^let s:ext = {}$/;"	v
s:ext	nvim/autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^let s:ext._theme_funcrefs = []$/;"	v
s:ext.add_inactive_statusline_func	nvim/autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^function! s:ext.add_inactive_statusline_func(name) dict$/;"	f
s:ext.add_statusline_func	nvim/autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^function! s:ext.add_statusline_func(name) dict$/;"	f
s:ext.add_statusline_funcref	nvim/autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^function! s:ext.add_statusline_funcref(function) dict$/;"	f
s:ext.add_theme_func	nvim/autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^function! s:ext.add_theme_func(name) dict$/;"	f
s:extend	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:extend(base, extra)$/;"	f
s:extend	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Capture.vim	/^function! s:extend(dict, src)$/;"	f
s:extend_opts	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:extend_opts(dict, eopts, prepend)$/;"	f
s:extract_name	nvim/autoload/plug.vim	/^function! s:extract_name(str, prefix, suffix)$/;"	f
s:fail	nvim/autoload/plugged/vim-rooter/test/runner.vim	/^      let s:fail += 1$/;"	v
s:fail	nvim/autoload/plugged/vim-rooter/test/runner.vim	/^let s:fail = 0$/;"	v
s:file_options	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:file_options(prefix)$/;"	f
s:file_source	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:file_source(prefix)$/;"	f
s:file_split_prefix	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:file_split_prefix(prefix)$/;"	f
s:filereadable	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/System/Cache/Deprecated.vim	/^function! s:filereadable(cache_dir, filename) abort$/;"	f
s:filetype_overrides	nvim/autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^  let s:filetype_overrides['nerdtree'] = [ get(g:, 'NERDTreeStatusline', 'NERD'), '' ]$/;"	v
s:filetype_overrides	nvim/autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^  let s:filetype_overrides['nerdtree'] = ['NERDTree', '']$/;"	v
s:filetype_overrides	nvim/autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^let s:filetype_overrides = {$/;"	v
s:filetype_regex_overrides	nvim/autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^let s:filetype_regex_overrides = {}$/;"	v
s:fill_quickfix	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:fill_quickfix(list, ...)$/;"	f
s:filters.filter	nvim/autoload/plugged/vim-devicons/autoload/devicons/plugins/unite.vim	/^  function! s:filters.filter(candidates, context) abort$/;"	f
s:find	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:find(list, default, f) abort$/;"	f
s:find	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Gift.vim	/^function! s:find(expr)$/;"	f
s:find	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:find(list, default, f) abort$/;"	f
s:find_by	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Gift.vim	/^function! s:find_by(expr)$/;"	f
s:find_index	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:find_index(xs, f, ...) abort$/;"	f
s:find_index	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:find_index(xs, f, ...) abort$/;"	f
s:find_indices	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:find_indices(xs, f, ...) abort$/;"	f
s:find_indices	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:find_indices(xs, f, ...) abort$/;"	f
s:find_last_index	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:find_last_index(xs, f, ...) abort$/;"	f
s:find_last_index	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:find_last_index(xs, f, ...) abort$/;"	f
s:find_name	nvim/autoload/plug.vim	/^function! s:find_name(lnum)$/;"	f
s:find_open_window	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:find_open_window(b)$/;"	f
s:finish	nvim/autoload/plug.vim	/^function! s:finish(pull)$/;"	f
s:finish_bindings	nvim/autoload/plug.vim	/^function! s:finish_bindings()$/;"	f
s:first_line	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:first_line(lines)$/;"	f
s:flags	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^let s:flags = get(g:, 'airline#extensions#tagbar#flags', '')$/;"	v
s:flatten	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:flatten(list, ...) abort$/;"	f
s:flatten	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Gift.vim	/^function! s:flatten(list)$/;"	f
s:flatten	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Gift/Window.vim	/^function! s:flatten(list)$/;"	f
s:flatten	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:flatten(list, ...) abort$/;"	f
s:fmt_excmd	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:fmt_excmd = '   '.s:blue('%-38s', 'Statement').'%s'$/;"	v
s:fname_prefix	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:fname_prefix(str)$/;"	f
s:fnamecollapse	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^let s:fnamecollapse = get(g:, 'airline#extensions#tabline#fnamecollapse', 1)$/;"	v
s:fnamecollapse	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/formatters/short_path.vim	/^let s:fnamecollapse = get(g:, 'airline#extensions#tabline#fnamecollapse', 1)$/;"	v
s:fnametruncate	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^let s:fnametruncate = get(g:, 'airline#extensions#tabline#fnametruncate', 0)$/;"	v
s:focusgained_ignore_time	nvim/autoload/plugged/vim-airline/autoload/airline/util.vim	/^let s:focusgained_ignore_time = 0$/;"	v
s:foldl	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/Dict.vim	/^function! s:foldl(f, init, dict) abort$/;"	f
s:foldl	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:foldl(f, init, xs) abort$/;"	f
s:foldl	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:foldl(f, init, xs) abort$/;"	f
s:foldl1	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:foldl1(f, xs) abort$/;"	f
s:foldl1	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:foldl1(f, xs) abort$/;"	f
s:foldr	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/Dict.vim	/^function! s:foldr(f, init, dict) abort$/;"	f
s:foldr	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:foldr(f, init, xs) abort$/;"	f
s:foldr	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:foldr(f, init, xs) abort$/;"	f
s:foldr1	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:foldr1(f, xs) abort$/;"	f
s:foldr1	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:foldr1(f, xs) abort$/;"	f
s:format_cmd	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:format_cmd(line)$/;"	f
s:format_excmd	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:format_excmd(ex)$/;"	f
s:format_git_log	nvim/autoload/plug.vim	/^function! s:format_git_log(line)$/;"	f
s:format_mark	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:format_mark(line)$/;"	f
s:format_message	nvim/autoload/plug.vim	/^function! s:format_message(bullet, name, message)$/;"	f
s:format_name	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/branch.vim	/^  function! s:format_name(name)$/;"	f
s:format_win	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:format_win(tab, win, buf)$/;"	f
s:format_wordcount	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^      function! s:format_wordcount(_)$/;"	f
s:format_wordcount	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^function! s:format_wordcount(wordcount)$/;"	f
s:formatter	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^      let s:formatter = 'default'$/;"	v
s:formatter	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^let s:formatter = get(g:, 'airline#extensions#wordcount#formatter', 'default')$/;"	v
s:from_list	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/Dict.vim	/^function! s:from_list(list) abort$/;"	f
s:funcmanage	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/util.vim	/^function! s:funcmanage() abort$/;"	f
s:funcmanage	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/util.vim	/^let s:funcmanage = {}$/;"	v
s:funcs	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^let s:funcs =  keys(filter(copy(s:global), "type(v:val) == type(function('tr'))"))$/;"	v
s:function	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^  function! s:function(name)$/;"	f
s:function	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^  function! s:function(name)$/;"	f
s:functions	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/util.vim	/^let s:functions = [$/;"	v
s:fzf	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:fzf(name, opts, extra)$/;"	f
s:fzf_restore_colors	nvim/autoload/plugged/fzf.vim/plugin/fzf.vim	/^  function! s:fzf_restore_colors()$/;"	f
s:fzf_vim_term	nvim/autoload/plugged/fzf.vim/plugin/fzf.vim	/^  function! s:fzf_vim_term()$/;"	f
s:generate_minimap	nvim/autoload/plugged/minimap.vim/autoload/minimap/vim.vim	/^function! s:generate_minimap(mmwinnr, bufnr, fname, ftype) abort$/;"	f
s:generate_wildignore_options	nvim/autoload/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:generate_wildignore_options() abort$/;"	f
s:get	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules.vim	/^function! s:get(name)$/;"	f
s:get	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Highlight.vim	/^function! s:get(name, ...)$/;"	f
s:get	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank.vim	/^function! s:get(name, default) abort  "{{{$/;"	f
s:get	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^function! s:get(id) abort "{{{$/;"	f
s:get	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^function! s:get(name, default) abort  "{{{$/;"	f
s:getBrowser	nvim/autoload/plugged/vim-carbon-now-sh/plugin/vim-carbon-now-sh.vim	/^function! s:getBrowser() "{{{$/;"	f
s:getDistro	nvim/autoload/plugged/vim-devicons/plugin/webdevicons.vim	/^function s:getDistro()$/;"	f
s:getOptions	nvim/autoload/plugged/vim-carbon-now-sh/plugin/vim-carbon-now-sh.vim	/^function! s:getOptions() "{{{$/;"	f
s:getUniqueID	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! s:getUniqueID() abort$/;"	f
s:getVisualSelection	nvim/autoload/plugged/vim-carbon-now-sh/plugin/vim-carbon-now-sh.vim	/^function! s:getVisualSelection() "{{{$/;"	f
s:get_accented_line	nvim/autoload/plugged/vim-airline/autoload/airline/builder.vim	/^function! s:get_accented_line(self, group, contents)$/;"	f
s:get_airline_themes	nvim/autoload/plugged/vim-airline/plugin/airline.vim	/^function! s:get_airline_themes(a, l, p)$/;"	f
s:get_array	nvim/autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^function! s:get_array(fg, bg, opts)$/;"	f
s:get_blockwidth	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/highlight.vim	/^function! s:get_blockwidth(start, end, type) abort "{{{$/;"	f
s:get_cmdline	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Doautocmd.vim	/^function! s:get_cmdline()$/;"	f
s:get_cmdline_cword	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/InsertRegister.vim	/^function! s:get_cmdline_cword(backward, cword)$/;"	f
s:get_color	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:get_color(attr, ...)$/;"	f
s:get_color_map	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! s:get_color_map()$/;"	f
s:get_completed_snippets	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! s:get_completed_snippets(cur_text, col) abort$/;"	f
s:get_counts	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/neomake.vim	/^function! s:get_counts()$/;"	f
s:get_ctags_executable	nvim/autoload/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:get_ctags_executable(proj_dir) abort$/;"	f
s:get_diagnostics	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! s:get_diagnostics()$/;"	f
s:get_filenames	nvim/autoload/plugged/editorconfig-vim/autoload/editorconfig_core/handler.vim	/^function! s:get_filenames(path, config_filename)$/;"	f
s:get_git_root	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:get_git_root()$/;"	f
s:get_hit_enter_max_length	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Message.vim	/^function! s:get_hit_enter_max_length() abort$/;"	f
s:get_hunks_changes	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_changes() abort$/;"	f
s:get_hunks_coc	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_coc() abort$/;"	f
s:get_hunks_empty	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_empty() abort$/;"	f
s:get_hunks_gitgutter	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_gitgutter() abort$/;"	f
s:get_hunks_signify	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_signify() abort$/;"	f
s:get_input	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^function! s:get_input(cli) abort$/;"	f
s:get_keyword_pos	nvim/autoload/plugged/neosnippet.vim/autoload/unite/sources/neosnippet.vim	/^function! s:get_keyword_pos(cur_text) abort$/;"	f
s:get_last_selected	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Buffer.vim	/^function! s:get_last_selected() abort$/;"	f
s:get_last_status	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Process.vim	/^function! s:get_last_status() abort$/;"	f
s:get_list	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/helpers.vim	/^function! s:get_list() abort$/;"	f
s:get_list	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/util.vim	/^function! s:get_list() abort$/;"	f
s:get_max_col	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/util.vim	/^function! s:get_max_col(expr) abort$/;"	f
s:get_mode	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! s:get_mode()$/;"	f
s:get_module	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline.vim	/^function! s:get_module(...)$/;"	f
s:get_number	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! s:get_number(index)$/;"	f
s:get_order_blockwise	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/highlight.vim	/^function! s:get_order_blockwise(start, end, blockwidth) abort "{{{$/;"	f
s:get_order_charwise	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/highlight.vim	/^function! s:get_order_charwise(start, end) abort  "{{{$/;"	f
s:get_order_linewise	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/highlight.vim	/^function! s:get_order_linewise(start, end) abort  "{{{$/;"	f
s:get_pid	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^function! s:get_pid() abort "{{{$/;"	f
s:get_pos_char	nvim/autoload/plugged/incsearch.vim/test/autonohlsearch.vim	/^function! s:get_pos_char()$/;"	f
s:get_pos_char	nvim/autoload/plugged/incsearch.vim/test/cancel.vim	/^function! s:get_pos_char()$/;"	f
s:get_pos_char	nvim/autoload/plugged/incsearch.vim/test/count.vim	/^function! s:get_pos_char()$/;"	f
s:get_pos_char	nvim/autoload/plugged/incsearch.vim/test/default_behaviors.vim	/^function! s:get_pos_char()$/;"	f
s:get_pos_char	nvim/autoload/plugged/incsearch.vim/test/error_warning_emulation.vim	/^function! s:get_pos_char()$/;"	f
s:get_pos_char	nvim/autoload/plugged/incsearch.vim/test/highlight.vim	/^function! s:get_pos_char()$/;"	f
s:get_pos_char	nvim/autoload/plugged/incsearch.vim/test/incremental_next_prev.vim	/^function! s:get_pos_char()$/;"	f
s:get_pos_char	nvim/autoload/plugged/incsearch.vim/test/insert_register.vim	/^function! s:get_pos_char()$/;"	f
s:get_pos_char	nvim/autoload/plugged/incsearch.vim/test/jumplist.vim	/^function! s:get_pos_char()$/;"	f
s:get_pos_char	nvim/autoload/plugged/incsearch.vim/test/magic_option.vim	/^function! s:get_pos_char()$/;"	f
s:get_pos_char	nvim/autoload/plugged/incsearch.vim/test/module.vim	/^function! s:get_pos_char()$/;"	f
s:get_pos_char	nvim/autoload/plugged/incsearch.vim/test/n_and_N.vim	/^function! s:get_pos_char()$/;"	f
s:get_pos_char	nvim/autoload/plugged/incsearch.vim/test/nomagic.vim	/^function! s:get_pos_char()$/;"	f
s:get_pos_char	nvim/autoload/plugged/incsearch.vim/test/operator_pending_behavior.vim	/^function! s:get_pos_char()$/;"	f
s:get_pos_char	nvim/autoload/plugged/incsearch.vim/test/register.vim	/^function! s:get_pos_char()$/;"	f
s:get_pos_char	nvim/autoload/plugged/incsearch.vim/test/repetition.vim	/^function! s:get_pos_char()$/;"	f
s:get_pos_char	nvim/autoload/plugged/incsearch.vim/test/scroll.vim	/^function! s:get_pos_char()$/;"	f
s:get_pos_char	nvim/autoload/plugged/incsearch.vim/test/visual_behavior.vim	/^function! s:get_pos_char()$/;"	f
s:get_pos_char	nvim/autoload/plugged/incsearch.vim/test/visual_emulation.vim	/^function! s:get_pos_char()$/;"	f
s:get_pos_with_default	nvim/autoload/plugged/incsearch.vim/test/default_behaviors.vim	/^function! s:get_pos_with_default(command, default_command, pattern)$/;"	f
s:get_prelude	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/util.vim	/^function! s:get_prelude() abort$/;"	f
s:get_process	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/util.vim	/^function! s:get_process() abort$/;"	f
s:get_region	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank.vim	/^function! s:get_region(regtype, regcontents) abort "{{{$/;"	f
s:get_region	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^function! s:get_region(curpos, count, input) abort  "{{{$/;"	f
s:get_region_block	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank.vim	/^function! s:get_region_block(regcontents) abort "{{{$/;"	f
s:get_region_char	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank.vim	/^function! s:get_region_char(regcontents) abort "{{{$/;"	f
s:get_region_line	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank.vim	/^function! s:get_region_line(regcontents) abort "{{{$/;"	f
s:get_section	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/default.vim	/^function! s:get_section(winnr, key, ...)$/;"	f
s:get_selected_text	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Buffer.vim	/^function! s:get_selected_text(...) abort$/;"	f
s:get_separator_change	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! s:get_separator_change(new_group, old_group, end_group, sep_size, alt_sep_size)$/;"	f
s:get_separator_change_with_end	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! s:get_separator_change_with_end(new_group, old_group, new_end_group, old_end_group, se/;"	f
s:get_seperator	nvim/autoload/plugged/vim-airline/autoload/airline/builder.vim	/^function! s:get_seperator(self, prev_group, group, side)$/;"	f
s:get_snippet_candidates	nvim/autoload/plugged/neosnippet.vim/autoload/unite/sources/neosnippet_file.vim	/^function! s:get_snippet_candidates(dirs) abort$/;"	f
s:get_sources_filetypes	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/helpers.vim	/^function! s:get_sources_filetypes(filetype) abort$/;"	f
s:get_string	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/util.vim	/^function! s:get_string() abort$/;"	f
s:get_syn	nvim/autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^function! s:get_syn(group, what)$/;"	f
s:get_transitioned_seperator	nvim/autoload/plugged/vim-airline/autoload/airline/builder.vim	/^function! s:get_transitioned_seperator(self, prev_group, group, side)$/;"	f
s:get_user_data	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! s:get_user_data(cur_text) abort$/;"	f
s:get_wordcount	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^  function! s:get_wordcount(visual_mode_active)$/;"	f
s:getchar	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Input.vim	/^function! s:getchar(...)$/;"	f
s:getchar	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:getchar(...) abort$/;"	f
s:getchar	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:getchar(...) abort$/;"	f
s:getchar_safe	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:getchar_safe(...) abort$/;"	f
s:getchar_safe	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:getchar_safe(...) abort$/;"	f
s:getfilename	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/System/Cache/Deprecated.vim	/^function! s:getfilename(cache_dir, filename) abort$/;"	f
s:gettime	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! s:gettime(time) abort$/;"	f
s:getvar	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Gift/Window.vim	/^function! s:getvar(nr, varname, ...)$/;"	f
s:getwinvar	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Gift.vim	/^function! s:getwinvar(uniq_winnr, varname, ...)$/;"	f
s:git_dir	nvim/autoload/plug.vim	/^function! s:git_dir(dir) abort$/;"	f
s:git_local_branch	nvim/autoload/plug.vim	/^function! s:git_local_branch(dir) abort$/;"	f
s:git_origin_branch	nvim/autoload/plug.vim	/^function! s:git_origin_branch(spec)$/;"	f
s:git_origin_url	nvim/autoload/plug.vim	/^function! s:git_origin_url(dir) abort$/;"	f
s:git_revision	nvim/autoload/plug.vim	/^function! s:git_revision(dir) abort$/;"	f
s:git_validate	nvim/autoload/plug.vim	/^function! s:git_validate(spec, check_branch)$/;"	f
s:git_version_requirement	nvim/autoload/plug.vim	/^function! s:git_version_requirement(...)$/;"	f
s:glob	nvim/autoload/plug.vim	/^function! s:glob(from, pattern)$/;"	f
s:glob	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^  function! s:glob(expr) abort$/;"	f
s:glob	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^  function! s:glob(expr) abort$/;"	f
s:glob_dir	nvim/autoload/plug.vim	/^function! s:glob_dir(path)$/;"	f
s:global	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^let s:global = deepcopy(s:base)$/;"	v
s:globpath	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^  function! s:globpath(path, expr) abort$/;"	f
s:globpath	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^  function! s:globpath(path, expr) abort$/;"	f
s:glow	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^function! s:glow(highlight, hi_group, duration) abort "{{{$/;"	f
s:go	nvim/autoload/plugged/vim-commentary/plugin/commentary.vim	/^function! s:go(...) abort$/;"	f
s:got_out_of_cmdwindow	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^function! s:got_out_of_cmdwindow() abort "{{{$/;"	f
s:group_by	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:group_by(xs, f) abort$/;"	f
s:group_by	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:group_by(xs, f) abort$/;"	f
s:group_list	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Highlight.vim	/^function! s:group_list()$/;"	f
s:group_not_done	nvim/autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^function! s:group_not_done(list, name)$/;"	f
s:guard	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Guard.vim	/^let s:guard = {}$/;"	v
s:guard.restore	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Guard.vim	/^function! s:guard.restore() abort$/;"	f
s:gui2cui	nvim/autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^function! s:gui2cui(rgb, fallback)$/;"	f
s:hardRefreshNerdTree	nvim/autoload/plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:hardRefreshNerdTree()$/;"	f
s:has	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:has(list, value) abort$/;"	f
s:has	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:has(list, value) abort$/;"	f
s:has	nvim/autoload/plugged/vim-rooter/plugin/rooter.vim	/^function! s:has(dir, identifier)$/;"	f
s:has_attr	nvim/autoload/plugged/nvim-treesitter/plugin/nvim-treesitter.vim	/^function s:has_attr(attr, mode)$/;"	f
s:has_common_items	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:has_common_items(list1, list2) abort$/;"	f
s:has_common_items	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:has_common_items(list1, list2) abort$/;"	f
s:has_index	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:has_index(list, index) abort$/;"	f
s:has_index	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:has_index(list, index) abort$/;"	f
s:has_keeppattern	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^let s:has_keeppattern = v:version > 704 || v:version == 704 && has('patch083')$/;"	v
s:has_strcharpart	nvim/autoload/plugged/vim-airline/autoload/airline/util.vim	/^let s:has_strcharpart = exists('*strcharpart')$/;"	v
s:has_strchars	nvim/autoload/plugged/vim-airline/autoload/airline/util.vim	/^let s:has_strchars = exists('*strchars')$/;"	v
s:has_vimproc	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Process.vim	/^function! s:has_vimproc() abort$/;"	f
s:hash	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:hash(str) abort$/;"	f
s:hash_match	nvim/autoload/plug.vim	/^function! s:hash_match(a, b)$/;"	f
s:head_format	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/branch.vim	/^let s:head_format = get(g:, 'airline#extensions#branch#format', 0)$/;"	v
s:helpless	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^    let s:helpless = ['" Press ? for help.']$/;"	v
s:helpless	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^    let s:helpless = []$/;"	v
s:helpmore	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^let s:helpmore = ['"    ===== Marks ===== ',$/;"	v
s:helptag_sink	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:helptag_sink(line)$/;"	f
s:hi	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/highlight.vim	/^let s:hi = vital#incsearch#import('Coaster.Highlight').make()$/;"	v
s:hi	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/modules/incsearch.vim	/^let s:hi = g:incsearch#highlight#_hi$/;"	v
s:highlight	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank.vim	/^function! s:highlight(operator, regtype, regcontents, marks) abort "{{{$/;"	f
s:highlight	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/highlight.vim	/^let s:highlight = {$/;"	v
s:highlight	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^let s:highlight = {$/;"	v
s:highlight._quench_by_CmdWinLeave	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/highlight.vim	/^function! s:highlight._quench_by_CmdWinLeave() abort "{{{$/;"	f
s:highlight._quench_now	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/highlight.vim	/^function! s:highlight._quench_now() abort "{{{$/;"	f
s:highlight.add	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/highlight.vim	/^function! s:highlight.add(...) dict abort "{{{$/;"	f
s:highlight.delete	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/highlight.vim	/^function! s:highlight.delete() dict abort "{{{$/;"	f
s:highlight.empty	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^function! s:highlight.empty() abort "{{{$/;"	f
s:highlight.is_in_highlight_window	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/highlight.vim	/^function! s:highlight.is_in_highlight_window() abort "{{{$/;"	f
s:highlight.persist	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^function! s:highlight.persist() dict abort  "{{{$/;"	f
s:highlight.quench	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^function! s:highlight.quench() dict abort "{{{$/;"	f
s:highlight.quench_timer	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^function! s:highlight.quench_timer(time) dict abort "{{{$/;"	f
s:highlight.show	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^function! s:highlight.show(...) dict abort "{{{$/;"	f
s:highlight.switch	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/highlight.vim	/^function! s:highlight.switch() abort "{{{$/;"	f
s:highlight_groups	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^let s:highlight_groups = ['hid', 0, '', 'sel', 'mod_unsel', 0, 'mod_unsel', 'mod']$/;"	v
s:highlight_groups	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^let s:highlight_groups = ['hid', 0, '', 'sel', 'mod_unsel', 0, 'mod_unsel', 'mod']$/;"	v
s:highlight_keys	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:highlight_keys(str)$/;"	f
s:highlight_line	nvim/autoload/plugged/minimap.vim/autoload/minimap/vim.vim	/^function! s:highlight_line(winid, pos) abort$/;"	f
s:highlight_order_blockwise	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^function! s:highlight_order_blockwise(region) abort "{{{$/;"	f
s:highlight_order_charwise	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^function! s:highlight_order_charwise(region) abort  "{{{$/;"	f
s:highlight_order_linewise	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^function! s:highlight_order_linewise(region) abort  "{{{$/;"	f
s:highlight_yanked_region	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^function! s:highlight_yanked_region(region) abort "{{{$/;"	f
s:history	nvim/autoload/plugged/fzf.vim/plugin/fzf.vim	/^function! s:history(arg, extra, bang)$/;"	f
s:history_sink	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:history_sink(type, lines)$/;"	f
s:history_source	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:history_source(type)$/;"	f
s:hl_group_exists	nvim/autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^function! s:hl_group_exists(group)$/;"	f
s:hl_groups	nvim/autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^let s:hl_groups = {}$/;"	v
s:hook_list	nvim/autoload/plugged/editorconfig-vim/autoload/editorconfig.vim	/^let s:hook_list = []$/;"	v
s:hooks	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Doautocmd.vim	/^let s:hooks = [$/;"	v
s:hooks_camel	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Doautocmd.vim	/^let s:hooks_camel = [$/;"	v
s:hunk_symbols	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^let s:hunk_symbols = get(g:, 'airline#extensions#hunks#hunk_symbols', ['+', '~', '-'])$/;"	v
s:iTerm_escape_template	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let s:iTerm_escape_template = '\\033]Pl%s\\033\\\\'$/;"	v
s:iconv	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:iconv(expr, from, to) abort$/;"	f
s:iconv	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Process.vim	/^function! s:iconv(expr, from, to) abort$/;"	f
s:ignored_filetypes	nvim/autoload/plugged/minimap.vim/autoload/minimap/vim.vim	/^function! s:ignored_filetypes() abort$/;"	f
s:import	nvim/autoload/plugged/incsearch.vim/autoload/vital/incsearch.vim	/^function! s:import(name, ...) abort dict$/;"	f
s:import	nvim/autoload/plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^function! s:import(name, ...) abort dict$/;"	f
s:import	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^function! s:import(name, ...) abort dict$/;"	f
s:inactive_funcrefs	nvim/autoload/plugged/vim-airline/autoload/airline.vim	/^let s:inactive_funcrefs = []$/;"	v
s:inactive_l1_bg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:inactive_l1_bg = s:palette.bg4$/;"	v
s:inactive_l1_fg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:inactive_l1_fg = s:palette.fg$/;"	v
s:inactive_l2_bg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:inactive_l2_bg = s:palette.bg4$/;"	v
s:inactive_l2_fg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:inactive_l2_fg = s:palette.fg$/;"	v
s:inactive_mid_bg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:inactive_mid_bg = s:palette.bg1$/;"	v
s:inactive_mid_fg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:inactive_mid_fg = s:palette.fg$/;"	v
s:inactive_middle_bg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:inactive_middle_bg = s:palette.bg1$/;"	v
s:inactive_middle_fg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:inactive_middle_fg = s:palette.fg$/;"	v
s:inactive_mod_bg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:inactive_mod_bg = s:palette.bg1$/;"	v
s:inactive_mod_fg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:inactive_mod_fg = s:palette.orange$/;"	v
s:inactive_r1_bg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:inactive_r1_bg = s:palette.bg4$/;"	v
s:inactive_r1_fg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:inactive_r1_fg = s:palette.fg$/;"	v
s:inactive_r2_bg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:inactive_r2_bg = s:palette.bg4$/;"	v
s:inactive_r2_fg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:inactive_r2_fg = s:palette.fg$/;"	v
s:inactive_side_bg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:inactive_side_bg = s:palette.bg4$/;"	v
s:inactive_side_fg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:inactive_side_fg = s:palette.fg$/;"	v
s:inactive_sub_bg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:inactive_sub_bg = s:palette.bg4$/;"	v
s:inactive_sub_fg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:inactive_sub_fg = s:palette.fg$/;"	v
s:inc	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/modules/incsearch.vim	/^let s:inc = {$/;"	v
s:inc.on_char	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/modules/incsearch.vim	/^function! s:inc.on_char(cmdline) abort$/;"	f
s:inc.on_char_pre	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/modules/incsearch.vim	/^function! s:inc.on_char_pre(cmdline) abort$/;"	f
s:inc.on_enter	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/modules/incsearch.vim	/^function! s:inc.on_enter(cmdline) abort$/;"	f
s:inc.on_leave	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/modules/incsearch.vim	/^function! s:inc.on_leave(cmdline) abort$/;"	f
s:inc.priority	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/modules/incsearch.vim	/^function! s:inc.priority(event) abort$/;"	f
s:include_snippets	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/parser.vim	/^function! s:include_snippets(globs) abort$/;"	f
s:incsearch_exit	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/modules/exit.vim	/^let s:incsearch_exit = {$/;"	v
s:incsearch_exit.on_char_pre	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/modules/exit.vim	/^function! s:incsearch_exit.on_char_pre(cmdline) abort$/;"	f
s:indent_snippet	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/view.vim	/^function! s:indent_snippet(begin, end, base_indent, options) abort$/;"	f
s:index	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/String.vim	/^function! s:index(haystack, needle, ...)$/;"	f
s:infer_properties	nvim/autoload/plug.vim	/^function! s:infer_properties(name, repo)$/;"	f
s:inherit	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:inherit(sub, super, ...) abort "{{{$/;"	f
s:init	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^let s:init=0$/;"	v
s:init	nvim/autoload/plugged/vim-airline/plugin/airline.vim	/^function! s:init()$/;"	f
s:init_buffer	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:init_buffer()$/;"	f
s:init_hl	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/highlight.vim	/^function! s:init_hl() abort$/;"	f
s:initialize	nvim/autoload/plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:initialize()$/;"	f
s:initialize_cache	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/init.vim	/^function! s:initialize_cache() abort$/;"	f
s:initialize_options	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/commands.vim	/^function! s:initialize_options(options) abort$/;"	f
s:initialize_others	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/init.vim	/^function! s:initialize_others() abort$/;"	f
s:initialized	nvim/autoload/plugged/editorconfig-vim/plugin/editorconfig.vim	/^let s:initialized = 0$/;"	v
s:inject_snippet	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:inject_snippet(line)$/;"	f
s:input	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/InsertRegister.vim	/^function! s:input(cmdline)$/;"	f
s:input_helper	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:input_helper(funcname, args) abort$/;"	f
s:input_helper	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:input_helper(funcname, args) abort$/;"	f
s:input_safe	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:input_safe(...) abort$/;"	f
s:input_safe	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:input_safe(...) abort$/;"	f
s:insert_l1_bg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:insert_l1_bg = s:palette.bg_green$/;"	v
s:insert_l1_fg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:insert_l1_fg = s:palette.bg0$/;"	v
s:insert_l2_bg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:insert_l2_bg = s:palette.bg4$/;"	v
s:insert_l2_fg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:insert_l2_fg = s:palette.fg$/;"	v
s:insert_mid_bg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:insert_mid_bg = s:palette.bg1$/;"	v
s:insert_mid_fg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:insert_mid_fg = s:palette.fg$/;"	v
s:insert_middle_bg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:insert_middle_bg = s:palette.bg1$/;"	v
s:insert_middle_fg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:insert_middle_fg = s:palette.fg$/;"	v
s:insert_mod_bg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:insert_mod_bg = s:palette.bg1$/;"	v
s:insert_mod_fg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:insert_mod_fg = s:palette.green$/;"	v
s:insert_r1_bg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:insert_r1_bg = s:palette.bg_green$/;"	v
s:insert_r1_fg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:insert_r1_fg = s:palette.bg0$/;"	v
s:insert_r2_bg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:insert_r2_bg = s:palette.bg4$/;"	v
s:insert_r2_fg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:insert_r2_fg = s:palette.fg$/;"	v
s:insert_side_bg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:insert_side_bg = s:palette.bg_green$/;"	v
s:insert_side_fg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:insert_side_fg = s:palette.bg0$/;"	v
s:insert_sub_bg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:insert_sub_bg = s:palette.bg4$/;"	v
s:insert_sub_fg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:insert_sub_fg = s:palette.fg$/;"	v
s:install	nvim/autoload/plug.vim	/^function! s:install(force, names)$/;"	f
s:instance	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Guard.vim	/^let s:instance = {}$/;"	v
s:instance.restore	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Guard.vim	/^function! s:instance.restore() abort$/;"	f
s:intersect	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:intersect(list1, list2) abort$/;"	f
s:intersect	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:intersect(list1, list2) abort$/;"	f
s:invoke_funcrefs	nvim/autoload/plugged/vim-airline/autoload/airline.vim	/^function! s:invoke_funcrefs(context, funcrefs)$/;"	f
s:is	nvim/autoload/plugged/vim-rooter/plugin/rooter.vim	/^function! s:is(dir, identifier)$/;"	f
s:isDarwin	nvim/autoload/plugged/vim-devicons/plugin/webdevicons.vim	/^function s:isDarwin()$/;"	f
s:is_AppleTerminal	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let s:is_AppleTerminal = exists('$TERM_PROGRAM') && $TERM_PROGRAM =~# 'Apple_Terminal'$/;"	v
s:is_ahead	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/highlight.vim	/^function! s:is_ahead(pos1, pos2) abort  "{{{$/;"	f
s:is_ahead	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^function! s:is_ahead(pos1, pos2) abort  "{{{$/;"	f
s:is_ahead	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^function! s:is_ahead(pos1, pos2) abort  "{{{$/;"	f
s:is_beginning_of_line	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/helpers.vim	/^function! s:is_beginning_of_line(cur_text) abort$/;"	f
s:is_branch_empty	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:is_branch_empty() abort$/;"	f
s:is_cmdwin	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Buffer.vim	/^  function! s:is_cmdwin() abort$/;"	f
s:is_cygwin	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:is_cygwin() abort$/;"	f
s:is_cygwin	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_cygwin	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:is_cygwin() abort$/;"	f
s:is_cygwin	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_dict	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:is_dict(Value) abort$/;"	f
s:is_dict	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:is_dict(Value) abort$/;"	f
s:is_empty	nvim/autoload/plugged/neosnippet.vim/indent/neosnippet.vim	/^function! s:is_empty(line)$/;"	f
s:is_excluded_window	nvim/autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^function! s:is_excluded_window()$/;"	f
s:is_extended	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^function! s:is_extended() abort "{{{$/;"	f
s:is_float	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:is_float(Value) abort$/;"	f
s:is_float	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:is_float(Value) abort$/;"	f
s:is_funcref	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:is_funcref(Value) abort$/;"	f
s:is_funcref	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:is_funcref(Value) abort$/;"	f
s:is_good	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let s:is_good = !has('gui_running') && !s:is_win && !s:is_AppleTerminal$/;"	v
s:is_highlighted	nvim/autoload/plugged/vim-highlightedyank/test/test-highlightedyank.vim	/^function! s:is_highlighted(lnum) abort$/;"	f
s:is_iTerm	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let s:is_iTerm = exists('$TERM_PROGRAM') && $TERM_PROGRAM =~# 'iTerm.app'$/;"	v
s:is_in_cmdline_window	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/highlight.vim	/^function! s:is_in_cmdline_window() abort "{{{$/;"	f
s:is_in_cmdline_window	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^  function! s:is_in_cmdline_window() abort$/;"	f
s:is_input_waiting	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:is_input_waiting(keymapping, input)$/;"	f
s:is_list	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:is_list(Value) abort$/;"	f
s:is_list	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:is_list(Value) abort$/;"	f
s:is_local_plug	nvim/autoload/plug.vim	/^  function! s:is_local_plug(repo)$/;"	f
s:is_mac	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:is_mac() abort$/;"	f
s:is_mac	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_mac	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:is_mac() abort$/;"	f
s:is_mac	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_managed	nvim/autoload/plug.vim	/^function! s:is_managed(name)$/;"	f
s:is_number	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:is_number(Value) abort$/;"	f
s:is_number	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:is_number(Value) abort$/;"	f
s:is_numeric	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:is_numeric(Value) abort$/;"	f
s:is_numeric	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Type.vim	/^function! s:is_numeric(value) abort$/;"	f
s:is_numeric	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:is_numeric(Value) abort$/;"	f
s:is_pos_less_equal	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/util.vim	/^function! s:is_pos_less_equal(x, y) abort$/;"	f
s:is_pos_less_equal	nvim/autoload/plugged/incsearch.vim/test/default_behaviors.vim	/^function! s:is_pos_less_equal(x, y) " x <= y$/;"	f
s:is_pos_more_equal	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/util.vim	/^function! s:is_pos_more_equal(x, y) abort$/;"	f
s:is_predicate	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Type.vim	/^function! s:is_predicate(value) abort$/;"	f
s:is_preview_window_open	nvim/autoload/plug.vim	/^function! s:is_preview_window_open()$/;"	f
s:is_special	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Type.vim	/^function! s:is_special(value) abort$/;"	f
s:is_string	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:is_string(Value) abort$/;"	f
s:is_string	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:is_string(Value) abort$/;"	f
s:is_unix	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:is_unix() abort$/;"	f
s:is_unix	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_unix	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:is_unix() abort$/;"	f
s:is_unix	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_unix	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Process.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_updated	nvim/autoload/plug.vim	/^function! s:is_updated(dir)$/;"	f
s:is_visual	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/util.vim	/^function! s:is_visual(mode) abort$/;"	f
s:is_vital_vim	nvim/autoload/plugged/incsearch.vim/autoload/vital/incsearch.vim	/^let s:is_vital_vim = s:plugin_name is# 'vital'$/;"	v
s:is_vital_vim	nvim/autoload/plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^let s:is_vital_vim = s:plugin_name is# 'vital'$/;"	v
s:is_vital_vim	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^let s:is_vital_vim = s:plugin_name is# 'vital'$/;"	v
s:is_win	nvim/autoload/plug.vim	/^let s:is_win = has('win32')$/;"	v
s:is_win	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win	nvim/autoload/plugged/fzf.vim/plugin/fzf.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win	nvim/autoload/plugged/vim-highlightedyank/test/test-highlightedyank.vim	/^let s:is_win = has('win32') || system('uname') =~# '\\%(MSYS\\|MINGW\\)'$/;"	v
s:is_win32term	nvim/autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^let s:is_win32term = (has('win32') || has('win64')) &&$/;"	v
s:is_windows	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:is_windows() abort$/;"	f
s:is_windows	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:is_windows	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:is_windows() abort$/;"	f
s:is_windows	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:is_windows	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Process.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:isabsolute	nvim/autoload/plug.vim	/^function! s:isabsolute(dir) abort$/;"	f
s:job_abort	nvim/autoload/plug.vim	/^function! s:job_abort()$/;"	f
s:job_cb	nvim/autoload/plug.vim	/^function! s:job_cb(fn, job, ch, data)$/;"	f
s:job_exit_cb	nvim/autoload/plug.vim	/^function! s:job_exit_cb(self, data) abort$/;"	f
s:job_out_cb	nvim/autoload/plug.vim	/^function! s:job_out_cb(self, data) abort$/;"	f
s:join_posix_lines	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:join_posix_lines(lines, ...) abort$/;"	f
s:jump	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:jump(t, w)$/;"	f
s:jump	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Gift/Window.vim	/^function! s:jump(nr)$/;"	f
s:jump_to_tab	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! s:jump_to_tab(offset)$/;"	f
s:jump_window	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Gift.vim	/^function! s:jump_window(expr)$/;"	f
s:justify_equal_spacing	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:justify_equal_spacing(str, width, ...) abort$/;"	f
s:keeppattern	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^let s:keeppattern = (s:has_keeppattern ? 'keeppattern' : '')$/;"	v
s:key_mapping	nvim/autoload/plugged/incsearch.vim/plugin/incsearch.vim	/^function! s:key_mapping(lhs, rhs, noremap) abort$/;"	f
s:key_sink	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:key_sink(line)$/;"	f
s:keymap	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/config.vim	/^function! s:keymap() abort$/;"	f
s:keymap	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^let s:keymap += [['ClearHistory','C','Clear undo history (with confirmation)']]$/;"	v
s:keymap	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^let s:keymap += [['Close','q','Close undotree panel']]$/;"	v
s:keymap	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^let s:keymap += [['DiffToggle','D','Toggle the diff panel']]$/;"	v
s:keymap	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^let s:keymap += [['Enter','<2-LeftMouse>','Move to the current state']]$/;"	v
s:keymap	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^let s:keymap += [['Enter','<cr>','Move to the current state']]$/;"	v
s:keymap	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^let s:keymap += [['FocusTarget','<tab>','Set Focus back to the editor']]$/;"	v
s:keymap	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^let s:keymap += [['Help','?','Toggle quick help']]$/;"	v
s:keymap	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^let s:keymap += [['NextSavedState','>','Move to the next saved state']]$/;"	v
s:keymap	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^let s:keymap += [['NextState','K','Move to the next undo state']]$/;"	v
s:keymap	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^let s:keymap += [['PreviousSavedState','<','Move to the previous saved state']]$/;"	v
s:keymap	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^let s:keymap += [['PreviousState','J','Move to the previous undo state']]$/;"	v
s:keymap	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^let s:keymap += [['Redo','<c-r>','Redo']]$/;"	v
s:keymap	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^let s:keymap += [['TimestampToggle','T','Toggle relative timestamp']]$/;"	v
s:keymap	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^let s:keymap += [['Undo','u','Undo']]$/;"	v
s:keymap	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^let s:keymap = []$/;"	v
s:keymap	nvim/autoload/plugged/vim-highlightedyank/plugin/highlightedyank.vim	/^  function! s:keymap() abort$/;"	f
s:keyseq	nvim/autoload/plugged/vim-highlightedyank/test/test-highlightedyank.vim	/^    let s:keyseq = printf(s:test.keyseq, s:register.keyseq)$/;"	v
s:keyword_filter	nvim/autoload/plugged/neosnippet.vim/autoload/neocomplcache/sources/snippets_complete.vim	/^function! s:keyword_filter(snippets, cur_keyword_str) abort$/;"	f
s:known_files	nvim/autoload/plugged/vim-gutentags/autoload/gutentags.vim	/^let s:known_files = []$/;"	v
s:known_projects	nvim/autoload/plugged/vim-gutentags/autoload/gutentags.vim	/^let s:known_projects = {}$/;"	v
s:languageclient_refresh	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! s:languageclient_refresh()$/;"	f
s:last_mode	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let s:last_mode = ''$/;"	v
s:last_modified	nvim/autoload/plugged/sonokai/colors/sonokai.vim	/^let s:last_modified = 'Mon 29 Jun 2020 10:07:19 AM UTC'$/;"	v
s:last_non_empty_line	nvim/autoload/plug.vim	/^function! s:last_non_empty_line(lines)$/;"	f
s:last_wildignores	nvim/autoload/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:last_wildignores = ''$/;"	v
s:lastline	nvim/autoload/plug.vim	/^function! s:lastline(msg)$/;"	f
s:layout	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/default.vim	/^let s:layout = get(g:, 'airline#extensions#default#layout', [$/;"	v
s:layout_keys	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:layout_keys = ['window', 'up', 'down', 'left', 'right']$/;"	v
s:lazy	nvim/autoload/plug.vim	/^function! s:lazy(plug, opt)$/;"	f
s:lazy_config	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/config.vim	/^function! s:lazy_config() abort$/;"	f
s:legacy_airline_ale_get_line_number	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! s:legacy_airline_ale_get_line_number(cnt, type) abort$/;"	f
s:length	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/String.vim	/^function! s:length(str)$/;"	f
s:levenshtein_distance	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:levenshtein_distance(str1, str2) abort$/;"	f
s:lhs_key_list	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Keymapping.vim	/^function! s:lhs_key_list(...)$/;"	f
s:line_handler	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:line_handler(lines)$/;"	f
s:lines	nvim/autoload/plug.vim	/^function! s:lines(msg)$/;"	f
s:lines	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:lines(str) abort$/;"	f
s:links_to	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Highlight.vim	/^function! s:links_to(highlight)$/;"	f
s:load	nvim/autoload/plugged/incsearch.vim/autoload/vital/incsearch.vim	/^function! s:load(...) abort dict$/;"	f
s:load	nvim/autoload/plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^function! s:load(...) abort dict$/;"	f
s:load	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^function! s:load(...) abort dict$/;"	f
s:load_plugin	nvim/autoload/plug.vim	/^function! s:load_plugin(spec)$/;"	f
s:loaded	nvim/autoload/plug.vim	/^let s:loaded = get(s:, 'loaded', {})$/;"	v
s:loaded	nvim/autoload/plugged/incsearch.vim/autoload/vital/incsearch.vim	/^let s:loaded = {}$/;"	v
s:loaded	nvim/autoload/plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^let s:loaded = {}$/;"	v
s:loaded	nvim/autoload/plugged/vim-airline/autoload/airline/init.vim	/^let s:loaded = 0$/;"	v
s:loaded	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^let s:loaded = {}$/;"	v
s:loaded_ext	nvim/autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^let s:loaded_ext = []$/;"	v
s:loaded_names	nvim/autoload/plug.vim	/^function! s:loaded_names()$/;"	f
s:lod	nvim/autoload/plug.vim	/^function! s:lod(names, types, ...)$/;"	f
s:lod_cmd	nvim/autoload/plug.vim	/^function! s:lod_cmd(cmd, bang, l1, l2, args, names)$/;"	f
s:lod_ft	nvim/autoload/plug.vim	/^function! s:lod_ft(pat, names)$/;"	f
s:lod_map	nvim/autoload/plug.vim	/^function! s:lod_map(map, names, with_prefix, prefix)$/;"	f
s:log	nvim/autoload/plug.vim	/^function! s:log(bullet, name, lines)$/;"	f
s:log	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! s:log(msg) abort$/;"	f
s:log4	nvim/autoload/plug.vim	/^function! s:log4(name, msg)$/;"	f
s:logpos	nvim/autoload/plug.vim	/^function! s:logpos(name)$/;"	f
s:lpad	nvim/autoload/plug.vim	/^function! s:lpad(str, len)$/;"	f
s:mac_gui	nvim/autoload/plug.vim	/^let s:mac_gui = has('gui_macvim') && has('gui_running')$/;"	v
s:make	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^function! s:make()$/;"	f
s:make	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/Dict.vim	/^function! s:make(keys, values, ...) abort$/;"	f
s:make	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:make(...)$/;"	f
s:make	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules.vim	/^function! s:make(name, ...)$/;"	f
s:make	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/AsyncUpdate.vim	/^function! s:make()$/;"	f
s:make	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/BufferComplete.vim	/^function! s:make()$/;"	f
s:make	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Cancel.vim	/^function! s:make()$/;"	f
s:make	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/CursorMove.vim	/^function! s:make()$/;"	f
s:make	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Delete.vim	/^function! s:make()$/;"	f
s:make	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Digraphs.vim	/^function! s:make()$/;"	f
s:make	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Doautocmd.vim	/^function! s:make(prefix)$/;"	f
s:make	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:make()$/;"	f
s:make	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/ExceptionExit.vim	/^function! s:make(...)$/;"	f
s:make	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/ExceptionMessage.vim	/^function! s:make(...)$/;"	f
s:make	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Execute.vim	/^function! s:make()$/;"	f
s:make	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Exit.vim	/^function! s:make()$/;"	f
s:make	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/HistAdd.vim	/^function! s:make(...)$/;"	f
s:make	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/History.vim	/^function! s:make(...)$/;"	f
s:make	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/IgnoreRegexpBackwardWord.vim	/^function! s:make()$/;"	f
s:make	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Incsearch.vim	/^function! s:make(...)$/;"	f
s:make	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/InsertRegister.vim	/^function! s:make()$/;"	f
s:make	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/LiteralInsert.vim	/^function! s:make()$/;"	f
s:make	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/NoInsert.vim	/^function! s:make(chars)$/;"	f
s:make	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Paste.vim	/^function! s:make()$/;"	f
s:make	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Redraw.vim	/^function! s:make()$/;"	f
s:make	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Scroll.vim	/^function! s:make()$/;"	f
s:make	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Signals.vim	/^function! s:make()$/;"	f
s:make	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/String.vim	/^function! s:make(...)$/;"	f
s:make_default	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline.vim	/^function! s:make_default(...)$/;"	f
s:make_emacs	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/KeyMapping.vim	/^function! s:make_emacs()$/;"	f
s:make_index	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/Dict.vim	/^function! s:make_index(list, ...) abort$/;"	f
s:make_module	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline.vim	/^function! s:make_module(...)$/;"	f
s:make_plain	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^function! s:make_plain()$/;"	f
s:make_search	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Execute.vim	/^function! s:make_search(...)$/;"	f
s:make_special_chars	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/NoInsert.vim	/^function! s:make_special_chars()$/;"	f
s:make_standard	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline.vim	/^function! s:make_standard(...)$/;"	f
s:make_standard_search	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline.vim	/^function! s:make_standard_search(...)$/;"	f
s:make_standard_search_back	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline.vim	/^function! s:make_standard_search_back(...)$/;"	f
s:make_uniq_nr	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Gift/Tabpage.vim	/^function! s:make_uniq_nr()$/;"	f
s:make_uniq_nr	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Gift/Window.vim	/^function! s:make_uniq_nr()$/;"	f
s:make_vim_cmdline_mapping	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/KeyMapping.vim	/^function! s:make_vim_cmdline_mapping()$/;"	f
s:manual_update_tags	nvim/autoload/plugged/vim-gutentags/autoload/gutentags.vim	/^function! s:manual_update_tags(bang) abort$/;"	f
s:map_accum	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:map_accum(expr, xs, init) abort$/;"	f
s:map_accum	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:map_accum(expr, xs, init) abort$/;"	f
s:map_keys	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! s:map_keys()$/;"	f
s:mapkeys	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        fun! s:mapkeys(keys, plug)$/;"	f
s:mark_sink	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:mark_sink(lines)$/;"	f
s:match	nvim/autoload/plugged/vim-rooter/plugin/rooter.vim	/^function s:match(dir, pattern)$/;"	f
s:match_key	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Keymapping.vim	/^function! s:match_key(keymapping, key)$/;"	f
s:matchaddpos	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^  function! s:matchaddpos(group, pos) abort$/;"	f
s:matchdelete_all	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/highlight.vim	/^function! s:matchdelete_all(ids) abort "{{{$/;"	f
s:matches_filename	nvim/autoload/plugged/editorconfig-vim/autoload/editorconfig_core/ini.vim	/^function! s:matches_filename(config_filename, target_filename, glob)$/;"	f
s:max_by	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/Dict.vim	/^function! s:max_by(dict, expr) abort$/;"	f
s:max_by	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:max_by(list, expr) abort$/;"	f
s:max_by	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:max_by(list, expr) abort$/;"	f
s:me	nvim/autoload/plug.vim	/^  let s:me = resolve(expand('<sfile>:p'))$/;"	v
s:merge_opts	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:merge_opts(dict, eopts)$/;"	f
s:messages	nvim/autoload/plugged/vim-rooter/test/runner.vim	/^let s:messages = []$/;"	v
s:min_by	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/Dict.vim	/^function! s:min_by(dict, expr) abort$/;"	f
s:min_by	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:min_by(list, expr) abort$/;"	f
s:min_by	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:min_by(list, expr) abort$/;"	f
s:min_version	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:min_version = '0.23.0'$/;"	v
s:minimap_buffer_enter_handler	nvim/autoload/plugged/minimap.vim/autoload/minimap/vim.vim	/^function! s:minimap_buffer_enter_handler() abort$/;"	f
s:minimap_cache	nvim/autoload/plugged/minimap.vim/autoload/minimap/vim.vim	/^let s:minimap_cache = {}$/;"	v
s:minimap_gen	nvim/autoload/plugged/minimap.vim/autoload/minimap/vim.vim	/^    let s:minimap_gen = s:bin_dir.'minimap_generator.bat'$/;"	v
s:minimap_gen	nvim/autoload/plugged/minimap.vim/autoload/minimap/vim.vim	/^    let s:minimap_gen = s:bin_dir.'minimap_generator.sh'$/;"	v
s:minimap_move	nvim/autoload/plugged/minimap.vim/autoload/minimap/vim.vim	/^function! s:minimap_move() abort$/;"	f
s:minimap_win_enter	nvim/autoload/plugged/minimap.vim/autoload/minimap/vim.vim	/^function! s:minimap_win_enter() abort$/;"	f
s:modep	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Keymapping.vim	/^let s:modep = "[nvoicsxl]"$/;"	v
s:modify_end	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank.vim	/^function! s:modify_end(end) abort "{{{$/;"	f
s:modify_region	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^function! s:modify_region(region) abort "{{{$/;"	f
s:module	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/AsyncUpdate.vim	/^let s:module = {$/;"	v
s:module	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/BufferComplete.vim	/^let s:module = {$/;"	v
s:module	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Cancel.vim	/^let s:module = {$/;"	v
s:module	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/CursorMove.vim	/^let s:module = {$/;"	v
s:module	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Delete.vim	/^let s:module = {$/;"	v
s:module	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Digraphs.vim	/^let s:module = {$/;"	v
s:module	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Doautocmd.vim	/^let s:module = {$/;"	v
s:module	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/DrawCommandline.vim	/^let s:module = {$/;"	v
s:module	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/ExceptionExit.vim	/^let s:module = {$/;"	v
s:module	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/ExceptionMessage.vim	/^let s:module = {$/;"	v
s:module	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Execute.vim	/^let s:module = {$/;"	v
s:module	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Exit.vim	/^let s:module = {$/;"	v
s:module	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/HistAdd.vim	/^let s:module = {$/;"	v
s:module	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/History.vim	/^let s:module = {$/;"	v
s:module	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/IgnoreRegexpBackwardWord.vim	/^let s:module = {$/;"	v
s:module	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Incsearch.vim	/^let s:module = {$/;"	v
s:module	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/InsertRegister.vim	/^let s:module = {$/;"	v
s:module	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/LiteralInsert.vim	/^let s:module = {$/;"	v
s:module	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/NoInsert.vim	/^let s:module = {$/;"	v
s:module	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Paste.vim	/^let s:module = {$/;"	v
s:module	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Redraw.vim	/^let s:module = {$/;"	v
s:module	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Scroll.vim	/^let s:module = {$/;"	v
s:module.complete	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/BufferComplete.vim	/^function! s:module.complete(cmdline)$/;"	f
s:module.execute	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Execute.vim	/^function! s:module.execute(cmdline)$/;"	f
s:module.get_complete_words	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/BufferComplete.vim	/^function! s:module.get_complete_words()$/;"	f
s:module.histories	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/History.vim	/^function! s:module.histories()$/;"	f
s:module.is_no_insert	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/NoInsert.vim	/^function! s:module.is_no_insert(char)$/;"	f
s:module.message	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/ExceptionMessage.vim	/^function! s:module.message(...)$/;"	f
s:module.on_char	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Digraphs.vim	/^function! s:module.on_char(cmdline)$/;"	f
s:module.on_char	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Incsearch.vim	/^function! s:module.on_char(cmdline)$/;"	f
s:module.on_char	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/InsertRegister.vim	/^function! s:module.on_char(cmdline)$/;"	f
s:module.on_char_pre	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/BufferComplete.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
s:module.on_char_pre	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Cancel.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
s:module.on_char_pre	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/CursorMove.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
s:module.on_char_pre	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Delete.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
s:module.on_char_pre	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Digraphs.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
s:module.on_char_pre	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Execute.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
s:module.on_char_pre	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Exit.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
s:module.on_char_pre	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/History.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
s:module.on_char_pre	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/InsertRegister.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
s:module.on_char_pre	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/LiteralInsert.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
s:module.on_char_pre	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/NoInsert.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
s:module.on_char_pre	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Paste.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
s:module.on_char_pre	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Scroll.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
s:module.on_draw	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:module.on_draw(cmdline)$/;"	f
s:module.on_draw_pre	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/BufferComplete.vim	/^function! s:module.on_draw_pre(...)$/;"	f
s:module.on_draw_pre	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:module.on_draw_pre(cmdline)$/;"	f
s:module.on_draw_pre	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/ExceptionMessage.vim	/^function! s:module.on_draw_pre(cmdline)$/;"	f
s:module.on_enter	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/AsyncUpdate.vim	/^function! s:module.on_enter(cmdline)$/;"	f
s:module.on_enter	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/History.vim	/^function! s:module.on_enter(...)$/;"	f
s:module.on_enter	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/IgnoreRegexpBackwardWord.vim	/^function! s:module.on_enter(cmdline)$/;"	f
s:module.on_enter	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Incsearch.vim	/^function! s:module.on_enter(...)$/;"	f
s:module.on_enter	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/InsertRegister.vim	/^function! s:module.on_enter(...)$/;"	f
s:module.on_enter	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Redraw.vim	/^function! s:module.on_enter(...)$/;"	f
s:module.on_exception	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/ExceptionExit.vim	/^function! s:module.on_exception(cmdline)$/;"	f
s:module.on_exception	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/ExceptionMessage.vim	/^function! s:module.on_exception(cmdline)$/;"	f
s:module.on_execute	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Redraw.vim	/^function! s:module.on_execute(...)$/;"	f
s:module.on_execute_failed	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Redraw.vim	/^function! s:module.on_execute_failed(...)$/;"	f
s:module.on_execute_pre	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:module.on_execute_pre(...)$/;"	f
s:module.on_execute_pre	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Redraw.vim	/^function! s:module.on_execute_pre(cmdline)$/;"	f
s:module.on_leave	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/BufferComplete.vim	/^function! s:module.on_leave(cmdline)$/;"	f
s:module.on_leave	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Digraphs.vim	/^function! s:module.on_leave(cmdline)$/;"	f
s:module.on_leave	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:module.on_leave(...)$/;"	f
s:module.on_leave	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/ExceptionMessage.vim	/^function! s:module.on_leave(cmdline)$/;"	f
s:module.on_leave	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/HistAdd.vim	/^function! s:module.on_leave(cmdline)$/;"	f
s:module.on_leave	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Incsearch.vim	/^function! s:module.on_leave(...)$/;"	f
s:module.on_leave	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Redraw.vim	/^function! s:module.on_leave(cmdline)$/;"	f
s:module.redraw	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Redraw.vim	/^function! s:module.redraw(cmdline)$/;"	f
s:module.reset	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/InsertRegister.vim	/^function! s:module.reset()$/;"	f
s:module.search_hl_off	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Incsearch.vim	/^function! s:module.search_hl_off()$/;"	f
s:module.search_hl_on	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Incsearch.vim	/^function! s:module.search_hl_on(pattern)$/;"	f
s:module_management	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/modules/module_management.vim	/^let s:module_management =  {$/;"	v
s:module_management.on_enter	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/modules/module_management.vim	/^function! s:module_management.on_enter(cmdline) abort$/;"	f
s:module_management.priority	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/modules/module_management.vim	/^function! s:module_management.priority(event) abort$/;"	f
s:modules	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/cli.vim	/^let s:modules = vital#incsearch#import('Over.Commandline.Modules')$/;"	v
s:modules	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/modules/insert_register.vim	/^let s:modules = vital#incsearch#import('Over.Commandline.Modules')$/;"	v
s:modules	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Maker.vim	/^let s:modules = [$/;"	v
s:modules	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/All.vim	/^let s:modules =  map(split(globpath(expand("<sfile>:p:h"), "\/*.vim"), "\\n"), "fnamemodify(v:va/;"	v
s:motionwise2visualmode	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^function! s:motionwise2visualmode(motionwise) abort "{{{$/;"	f
s:move_cursor	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/modules/incsearch.vim	/^function! s:move_cursor(cli, pattern, ...) abort$/;"	f
s:mq_jobs	nvim/autoload/plugged/vim-airline/autoload/airline/async.vim	/^let s:mq_jobs        = {}$/;"	v
s:names	nvim/autoload/plug.vim	/^function! s:names(...)$/;"	f
s:names	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/branch.vim	/^let s:names = {'0': 'index', '1': 'orig', '2':'fetch', '3':'merge'}$/;"	v
s:nbs	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:nbs = nr2char(0x2007)$/;"	v
s:need_trans	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Process.vim	/^let s:need_trans = v:version < 704 || (v:version == 704 && !has('patch122'))$/;"	v
s:neoterm_id	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/term.vim	/^function! s:neoterm_id(bufnr) abort$/;"	f
s:new	nvim/autoload/plugged/incsearch.vim/autoload/vital/incsearch.vim	/^function! s:new(plugin_name) abort$/;"	f
s:new	nvim/autoload/plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^function! s:new(plugin_name) abort$/;"	f
s:new	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! s:new(obj) abort$/;"	f
s:new	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^function! s:new(plugin_name) abort$/;"	f
s:new_airline_ale_get_line_number	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! s:new_airline_ale_get_line_number(cnt, type) abort$/;"	f
s:new_window	nvim/autoload/plug.vim	/^function! s:new_window()$/;"	f
s:node	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^let s:node = {}$/;"	v
s:node.Init	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! s:node.Init() abort$/;"	f
s:nomodeline	nvim/autoload/plugged/vim-airline/autoload/airline/util.vim	/^let s:nomodeline = (v:version > 703 || (v:version == 703 && has("patch438"))) ? '<nomodeline>' :/;"	v
s:nomodeline	nvim/autoload/plugged/vim-rooter/plugin/rooter.vim	/^let s:nomodeline = (v:version > 703 || (v:version == 703 && has('patch442'))) ? '<nomodeline>' :/;"	v
s:non_escaped_backslash	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^let s:non_escaped_backslash = '\\m\\%(\\%(^\\|[^\\\\]\\)\\%(\\\\\\\\\\)*\\)\\@<=\\\\'$/;"	v
s:non_escaped_backslash	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/extend.vim	/^let s:non_escaped_backslash = '\\m\\%(\\%(^\\|[^\\\\]\\)\\%(\\\\\\\\\\)*\\)\\@<=\\\\'$/;"	v
s:non_escaped_backslash	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/IgnoreRegexpBackwardWord.vim	/^let s:non_escaped_backslash = '\\m\\%(\\%(^\\|[^\\\\]\\)\\%(\\\\\\\\\\)*\\)\\@<=\\\\'$/;"	v
s:non_zero_only	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^let s:non_zero_only = get(g:, 'airline#extensions#hunks#non_zero_only', 0)$/;"	v
s:normal	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^let s:normal = {}$/;"	v
s:normal	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^let s:normal['"']  = s:SID . '(highlightedyank-doublequote)'$/;"	v
s:normal	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^let s:normal['g@'] = s:SID . '(highlightedyank-g@)'$/;"	v
s:normal	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^let s:normal['gv'] = s:SID . '(highlightedyank-gv)'$/;"	v
s:normal	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^let s:normal['y']  = s:SID . '(highlightedyank-y)'$/;"	v
s:normal_l1_bg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:normal_l1_bg = s:palette.bg_blue$/;"	v
s:normal_l1_fg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:normal_l1_fg = s:palette.bg0$/;"	v
s:normal_l2_bg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:normal_l2_bg = s:palette.bg4$/;"	v
s:normal_l2_fg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:normal_l2_fg = s:palette.fg$/;"	v
s:normal_mid_bg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:normal_mid_bg = s:palette.bg1$/;"	v
s:normal_mid_fg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:normal_mid_fg = s:palette.fg$/;"	v
s:normal_middle_bg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:normal_middle_bg = s:palette.bg1$/;"	v
s:normal_middle_fg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:normal_middle_fg = s:palette.fg$/;"	v
s:normal_mod_bg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:normal_mod_bg = s:palette.bg1$/;"	v
s:normal_mod_fg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:normal_mod_fg = s:palette.blue$/;"	v
s:normal_r1_bg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:normal_r1_bg = s:palette.bg_blue$/;"	v
s:normal_r1_fg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:normal_r1_fg = s:palette.bg0$/;"	v
s:normal_r2_bg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:normal_r2_bg = s:palette.bg4$/;"	v
s:normal_r2_fg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:normal_r2_fg = s:palette.fg$/;"	v
s:normal_side_bg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:normal_side_bg = s:palette.bg_blue$/;"	v
s:normal_side_fg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:normal_side_fg = s:palette.bg0$/;"	v
s:normal_sub_bg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:normal_sub_bg = s:palette.bg4$/;"	v
s:normal_sub_fg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:normal_sub_fg = s:palette.fg$/;"	v
s:nr2byte	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:nr2byte(nr) abort$/;"	f
s:nr2enc_char	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:nr2enc_char(charcode) abort$/;"	f
s:nr2hex	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:nr2hex(nr) abort$/;"	f
s:nsplit	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:nsplit(expr, n, ...) abort$/;"	f
s:number_map	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:number_map = &encoding == 'utf-8'$/;"	v
s:number_map	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:number_map = {$/;"	v
s:numbering	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Gift/Tabpage.vim	/^function! s:numbering(...)$/;"	f
s:numbering	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Gift/Window.vim	/^function! s:numbering(...)$/;"	f
s:nvim	nvim/autoload/plug.vim	/^let s:nvim = has('nvim-0.2') || (has('nvim') && exists('*jobwait') && !s:is_win)$/;"	v
s:nvim_cb	nvim/autoload/plug.vim	/^function! s:nvim_cb(job_id, data, event) dict abort$/;"	f
s:nvim_job_exit_wrapper	nvim/autoload/plugged/vim-gutentags/autoload/gutentags.vim	/^    function! s:nvim_job_exit_wrapper(real_cb, job, exit_code, event_type) abort$/;"	f
s:nvim_job_out_wrapper	nvim/autoload/plugged/vim-gutentags/autoload/gutentags.vim	/^    function! s:nvim_job_out_wrapper(real_cb, job, lines, event_type) abort$/;"	f
s:nvim_mq_job_handler	nvim/autoload/plugged/vim-airline/autoload/airline/async.vim	/^  function! s:nvim_mq_job_handler(job_id, data, event) dict$/;"	f
s:nvim_output_handler	nvim/autoload/plugged/vim-airline/autoload/airline/async.vim	/^  function! s:nvim_output_handler(job_id, data, event) dict$/;"	f
s:nvim_po_job_handler	nvim/autoload/plugged/vim-airline/autoload/airline/async.vim	/^  function! s:nvim_po_job_handler(job_id, data, event) dict$/;"	f
s:nvim_untracked_job_handler	nvim/autoload/plugged/vim-airline/autoload/airline/async.vim	/^  function! s:nvim_untracked_job_handler(job_id, data, event) dict$/;"	f
s:old_width	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/DrawCommandline.vim	/^let s:old_width = 0$/;"	v
s:omit	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/Dict.vim	/^function! s:omit(dict, keys) abort$/;"	f
s:on_char	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/modules/incsearch.vim	/^function! s:on_char(cmdline) abort$/;"	f
s:on_char_pre	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/modules/incsearch.vim	/^function! s:on_char_pre(cmdline) abort$/;"	f
s:on_colorscheme_changed	nvim/autoload/plugged/vim-airline/plugin/airline.vim	/^function! s:on_colorscheme_changed()$/;"	f
s:on_cursor_moved	nvim/autoload/plugged/vim-airline/plugin/airline.vim	/^function! s:on_cursor_moved()$/;"	f
s:on_exit_clean	nvim/autoload/plugged/vim-airline/autoload/airline/async.vim	/^function! s:on_exit_clean(...) dict abort$/;"	f
s:on_exit_mq	nvim/autoload/plugged/vim-airline/autoload/airline/async.vim	/^  function! s:on_exit_mq(channel) dict abort$/;"	f
s:on_exit_po	nvim/autoload/plugged/vim-airline/autoload/airline/async.vim	/^  function! s:on_exit_po(channel) dict abort$/;"	f
s:on_exit_untracked	nvim/autoload/plugged/vim-airline/autoload/airline/async.vim	/^  function! s:on_exit_untracked(channel) dict abort$/;"	f
s:on_focus_gained	nvim/autoload/plugged/vim-airline/plugin/airline.vim	/^function! s:on_focus_gained()$/;"	f
s:on_searching	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/modules/incsearch.vim	/^function! s:on_searching(func, ...) abort$/;"	f
s:on_stdout	nvim/autoload/plugged/vim-airline/autoload/airline/async.vim	/^  function! s:on_stdout(channel, msg) dict abort$/;"	f
s:on_window_changed	nvim/autoload/plugged/vim-airline/plugin/airline.vim	/^function! s:on_window_changed(event)$/;"	f
s:open	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:open(cmd, target)$/;"	f
s:open	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Buffer.vim	/^function! s:open(buffer, ...) abort$/;"	f
s:open_window	nvim/autoload/plugged/minimap.vim/autoload/minimap/vim.vim	/^function! s:open_window() abort$/;"	f
s:openable_bufnr_list	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Gift.vim	/^function! s:openable_bufnr_list()$/;"	f
s:operator_get_region	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^function! s:operator_get_region(motionwise) abort "{{{$/;"	f
s:option	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Guard.vim	/^let s:option = {}$/;"	v
s:option.restore	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Guard.vim	/^function! s:option.restore() abort$/;"	f
s:optionxform	nvim/autoload/plugged/editorconfig-vim/autoload/editorconfig_core/ini.vim	/^function! s:optionxform(optionstr)$/;"	f
s:or	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:or(xs) abort$/;"	f
s:or	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:or(xs) abort$/;"	f
s:p	nvim/autoload/plugged/fzf.vim/plugin/fzf.vim	/^function! s:p(...)$/;"	f
s:p	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^  let s:p.command.left = [ [ s:command_l1_fg, s:command_l1_bg ], [ s:command_l2_fg, s:command_l2/;"	v
s:p	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^  let s:p.command.right = [ [ s:command_r1_fg, s:command_r1_bg ], [ s:command_r2_fg, s:command_r/;"	v
s:p	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^  let s:p.insert.left = [ [ s:insert_l1_fg, s:insert_l1_bg ], [ s:insert_l2_fg, s:insert_l2_bg ]/;"	v
s:p	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^  let s:p.insert.right = [ [ s:insert_r1_fg, s:insert_r1_bg ], [ s:insert_r2_fg, s:insert_r2_bg /;"	v
s:p	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^  let s:p.normal.left = [ [ s:normal_l1_fg, s:normal_l1_bg ], [ s:normal_l2_fg, s:normal_l2_bg ]/;"	v
s:p	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^  let s:p.normal.right = [ [ s:normal_r1_fg, s:normal_r1_bg ], [ s:normal_r2_fg, s:normal_r2_bg /;"	v
s:p	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^  let s:p.replace.left = [ [ s:replace_l1_fg, s:replace_l1_bg ], [ s:replace_l2_fg, s:replace_l2/;"	v
s:p	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^  let s:p.replace.right = [ [ s:replace_r1_fg, s:replace_r1_bg ], [ s:replace_r2_fg, s:replace_r/;"	v
s:p	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^  let s:p.tabline.tabsel = [ [ s:tab_sel_fg, s:tab_sel_bg ] ]$/;"	v
s:p	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^  let s:p.terminal.left = [ [ s:terminal_l1_fg, s:terminal_l1_bg ], [ s:terminal_l2_fg, s:termin/;"	v
s:p	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^  let s:p.terminal.right = [ [ s:terminal_r1_fg, s:terminal_r1_bg ], [ s:terminal_r2_fg, s:termi/;"	v
s:p	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^  let s:p.visual.left = [ [ s:visual_l1_fg, s:visual_l1_bg ], [ s:visual_l2_fg, s:visual_l2_bg ]/;"	v
s:p	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^  let s:p.visual.right = [ [ s:visual_r1_fg, s:visual_r1_bg ], [ s:visual_r2_fg, s:visual_r2_bg /;"	v
s:p	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'command': {/;"	v
s:p	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:p.command.left = [ [ s:command_l1_fg, s:command_l1_bg, 'bold' ], [ s:command_l2_fg, s:comm/;"	v
s:p	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:p.command.middle = [ [ s:command_middle_fg, s:command_middle_bg ] ]$/;"	v
s:p	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:p.command.right = [ [ s:command_r1_fg, s:command_r1_bg, 'bold' ], [ s:command_r2_fg, s:com/;"	v
s:p	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:p.inactive.left = [ [ s:inactive_l1_fg, s:inactive_l1_bg ], [ s:inactive_l2_fg, s:inactive/;"	v
s:p	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:p.inactive.middle = [ [ s:inactive_middle_fg, s:inactive_middle_bg ] ]$/;"	v
s:p	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:p.inactive.right = [ [ s:inactive_r1_fg, s:inactive_r1_bg ], [ s:inactive_r2_fg, s:inactiv/;"	v
s:p	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:p.insert.left = [ [ s:insert_l1_fg, s:insert_l1_bg, 'bold' ], [ s:insert_l2_fg, s:insert_l/;"	v
s:p	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:p.insert.middle = [ [ s:insert_middle_fg, s:insert_middle_bg ] ]$/;"	v
s:p	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:p.insert.right = [ [ s:insert_r1_fg, s:insert_r1_bg, 'bold' ], [ s:insert_r2_fg, s:insert_/;"	v
s:p	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:p.normal.error = [ [ s:errorfg, s:errorbg ] ]$/;"	v
s:p	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:p.normal.left = [ [ s:normal_l1_fg, s:normal_l1_bg, 'bold' ], [ s:normal_l2_fg, s:normal_l/;"	v
s:p	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:p.normal.middle = [ [ s:normal_middle_fg, s:normal_middle_bg ] ]$/;"	v
s:p	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:p.normal.right = [ [ s:normal_r1_fg, s:normal_r1_bg, 'bold' ], [ s:normal_r2_fg, s:normal_/;"	v
s:p	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:p.normal.warning = [ [ s:warningfg, s:warningbg ] ]$/;"	v
s:p	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:p.replace.left = [ [ s:replace_l1_fg, s:replace_l1_bg, 'bold' ], [ s:replace_l2_fg, s:repl/;"	v
s:p	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:p.replace.middle = [ [ s:replace_middle_fg, s:replace_middle_bg ] ]$/;"	v
s:p	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:p.replace.right = [ [ s:replace_r1_fg, s:replace_r1_bg, 'bold' ], [ s:replace_r2_fg, s:rep/;"	v
s:p	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:p.tabline.left = [ [ s:tab_l_fg, s:tab_l_bg] ]$/;"	v
s:p	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:p.tabline.middle = [ [ s:tab_middle_fg, s:tab_middle_bg] ]$/;"	v
s:p	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:p.tabline.right = [ [ s:tab_r_fg, s:tab_r_bg] ]$/;"	v
s:p	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:p.tabline.tabsel = [ [ s:tab_sel_fg, s:tab_sel_bg, 'bold' ] ]$/;"	v
s:p	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:p.terminal.left = [ [ s:terminal_l1_fg, s:terminal_l1_bg, 'bold' ], [ s:terminal_l2_fg, s:/;"	v
s:p	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:p.terminal.middle = [ [ s:terminal_middle_fg, s:terminal_middle_bg ] ]$/;"	v
s:p	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:p.terminal.right = [ [ s:terminal_r1_fg, s:terminal_r1_bg, 'bold' ], [ s:terminal_r2_fg, s/;"	v
s:p	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:p.visual.left = [ [ s:visual_l1_fg, s:visual_l1_bg, 'bold' ], [ s:visual_l2_fg, s:visual_l/;"	v
s:p	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:p.visual.middle = [ [ s:visual_middle_fg, s:visual_middle_bg ] ]$/;"	v
s:p	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:p.visual.right = [ [ s:visual_r1_fg, s:visual_r1_bg, 'bold' ], [ s:visual_r2_fg, s:visual_/;"	v
s:pad_between_letters	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:pad_between_letters(str, width, ...) abort$/;"	f
s:pad_both_sides	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:pad_both_sides(str, width, ...) abort$/;"	f
s:pad_left	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:pad_left(str, width, ...) abort$/;"	f
s:pad_right	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:pad_right(str, width, ...) abort$/;"	f
s:padding_by_displaywidth	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:padding_by_displaywidth(expr, width, float) abort$/;"	f
s:palette	nvim/autoload/plugged/sonokai/after/ftplugin/dosini/sonokai.vim	/^let s:palette = sonokai#get_palette(s:configuration.style)$/;"	v
s:palette	nvim/autoload/plugged/sonokai/after/ftplugin/help/sonokai.vim	/^let s:palette = sonokai#get_palette(s:configuration.style)$/;"	v
s:palette	nvim/autoload/plugged/sonokai/after/ftplugin/html/sonokai.vim	/^let s:palette = sonokai#get_palette(s:configuration.style)$/;"	v
s:palette	nvim/autoload/plugged/sonokai/after/ftplugin/javascriptreact/sonokai.vim	/^let s:palette = sonokai#get_palette(s:configuration.style)$/;"	v
s:palette	nvim/autoload/plugged/sonokai/after/ftplugin/markdown/sonokai.vim	/^let s:palette = sonokai#get_palette(s:configuration.style)$/;"	v
s:palette	nvim/autoload/plugged/sonokai/after/ftplugin/python/sonokai.vim	/^let s:palette = sonokai#get_palette(s:configuration.style)$/;"	v
s:palette	nvim/autoload/plugged/sonokai/after/ftplugin/rst/sonokai.vim	/^let s:palette = sonokai#get_palette(s:configuration.style)$/;"	v
s:palette	nvim/autoload/plugged/sonokai/after/ftplugin/toml/sonokai.vim	/^let s:palette = sonokai#get_palette(s:configuration.style)$/;"	v
s:palette	nvim/autoload/plugged/sonokai/after/ftplugin/typescriptreact/sonokai.vim	/^let s:palette = sonokai#get_palette(s:configuration.style)$/;"	v
s:palette	nvim/autoload/plugged/sonokai/after/ftplugin/undotree/sonokai.vim	/^let s:palette = sonokai#get_palette(s:configuration.style)$/;"	v
s:palette	nvim/autoload/plugged/sonokai/after/ftplugin/vim-plug/sonokai.vim	/^let s:palette = sonokai#get_palette(s:configuration.style)$/;"	v
s:palette	nvim/autoload/plugged/sonokai/after/ftplugin/vim/sonokai.vim	/^let s:palette = sonokai#get_palette(s:configuration.style)$/;"	v
s:palette	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:palette = sonokai#get_palette(s:configuration.style)$/;"	v
s:palette	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:palette = sonokai#get_palette(s:configuration.style)$/;"	v
s:palette	nvim/autoload/plugged/sonokai/colors/sonokai.vim	/^let s:palette = sonokai#get_palette(s:configuration.style)$/;"	v
s:panel	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^let s:panel = {}$/;"	v
s:panel.Hide	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! s:panel.Hide() abort$/;"	f
s:panel.Init	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! s:panel.Init() abort$/;"	f
s:panel.IsVisible	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! s:panel.IsVisible() abort$/;"	f
s:panel.SetFocus	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! s:panel.SetFocus() abort$/;"	f
s:parent	nvim/autoload/plugged/vim-rooter/plugin/rooter.vim	/^function! s:parent(dir)$/;"	f
s:parse	nvim/autoload/plugged/editorconfig-vim/autoload/editorconfig_core/ini.vim	/^function! s:parse(config_filename, target_filename, lines)$/;"	f
s:parse	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Highlight.vim	/^function! s:parse(highlight)$/;"	f
s:parse	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/parser.vim	/^function! s:parse(snippets_file) abort$/;"	f
s:parse_cmdarg	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Buffer.vim	/^function! s:parse_cmdarg(...) abort$/;"	f
s:parse_lhs	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Keymapping.vim	/^function! s:parse_lhs(text, ...)$/;"	f
s:parse_lhs_list	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Keymapping.vim	/^function! s:parse_lhs_list(...)$/;"	f
s:parse_options	nvim/autoload/plug.vim	/^function! s:parse_options(arg)$/;"	f
s:parse_snippet_name	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/parser.vim	/^function! s:parse_snippet_name(snippets_file, line, linenr, dup_check) abort$/;"	f
s:parse_to_name	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Highlight.vim	/^function! s:parse_to_name(highlight)$/;"	f
s:partition	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:partition(f, xs) abort$/;"	f
s:partition	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:partition(f, xs) abort$/;"	f
s:parts	nvim/autoload/plugged/vim-airline/autoload/airline/parts.vim	/^let s:parts = {}$/;"	v
s:path	nvim/autoload/plug.vim	/^  function! s:path(path)$/;"	f
s:path	nvim/autoload/plugged/sonokai/colors/sonokai.vim	/^let s:path = expand('<sfile>:p') " the path of this script$/;"	v
s:path2directory	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:path2directory(path) abort$/;"	f
s:path2directory	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:path2directory(path) abort$/;"	f
s:path2project_directory	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:path2project_directory(path, ...) abort$/;"	f
s:path2project_directory	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:path2project_directory(path, ...) abort$/;"	f
s:pattern_saver	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/modules/pattern_saver.vim	/^let s:pattern_saver =  {$/;"	v
s:pattern_saver.on_enter	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/modules/pattern_saver.vim	/^function! s:pattern_saver.on_enter(cmdline) abort$/;"	f
s:pattern_saver.on_leave	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/modules/pattern_saver.vim	/^function! s:pattern_saver.on_leave(cmdline) abort$/;"	f
s:paused	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^let s:paused = []$/;"	v
s:permutations	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:permutations(list, ...) abort$/;"	f
s:permutations	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:permutations(list, ...) abort$/;"	f
s:persist	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^function! s:persist(highlight, hi_group) abort  "{{{$/;"	f
s:pick	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/Dict.vim	/^function! s:pick(dict, keys) abort$/;"	f
s:pid	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^let s:pid = 0$/;"	v
s:plain	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Maker.vim	/^function! s:plain()$/;"	f
s:pluck	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:pluck(dict, key, default)$/;"	f
s:plug_buf	nvim/autoload/plug.vim	/^let s:plug_buf = get(s:, 'plug_buf', -1)$/;"	v
s:plug_call	nvim/autoload/plug.vim	/^  function! s:plug_call(fn, ...)$/;"	f
s:plug_expand	nvim/autoload/plug.vim	/^function! s:plug_expand(fmt)$/;"	f
s:plug_fnamemodify	nvim/autoload/plug.vim	/^function! s:plug_fnamemodify(fname, mods)$/;"	f
s:plug_getcwd	nvim/autoload/plug.vim	/^function! s:plug_getcwd()$/;"	f
s:plug_src	nvim/autoload/plug.vim	/^let s:plug_src = 'https:\/\/github.com\/junegunn\/vim-plug.git'$/;"	v
s:plug_tab	nvim/autoload/plug.vim	/^let s:plug_tab = get(s:, 'plug_tab', -1)$/;"	v
s:plug_tempname	nvim/autoload/plug.vim	/^function! s:plug_tempname()$/;"	f
s:plug_window_exists	nvim/autoload/plug.vim	/^function! s:plug_window_exists()$/;"	f
s:plugin_home	nvim/autoload/plugged/vim-devicons/plugin/webdevicons.vim	/^let s:plugin_home = expand('<sfile>:p:h:h')$/;"	v
s:plugin_name	nvim/autoload/plugged/incsearch.vim/autoload/vital/incsearch.vim	/^function! s:plugin_name() abort dict$/;"	f
s:plugin_name	nvim/autoload/plugged/incsearch.vim/autoload/vital/incsearch.vim	/^let s:plugin_name = expand('<sfile>:t:r')$/;"	v
s:plugin_name	nvim/autoload/plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^function! s:plugin_name() abort dict$/;"	f
s:plugin_name	nvim/autoload/plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^let s:plugin_name = expand('<sfile>:t:r')$/;"	v
s:plugin_name	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^function! s:plugin_name() abort dict$/;"	f
s:plugin_name	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^let s:plugin_name = expand('<sfile>:t:r')$/;"	v
s:po_jobs	nvim/autoload/plugged/vim-airline/autoload/airline/async.vim	/^let s:po_jobs        = {}$/;"	v
s:po_output	nvim/autoload/plugged/vim-airline/autoload/airline/async.vim	/^function! s:po_output(buf, file)$/;"	f
s:pop	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:pop(list) abort$/;"	f
s:pop	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:pop(list) abort$/;"	f
s:prefix	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Gift/Tabpage.vim	/^let s:prefix = expand("<sfile>:p:h:h:t")$/;"	v
s:prefix	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Gift/Window.vim	/^let s:prefix = expand("<sfile>:p:h:h:t")$/;"	v
s:prefix	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Exception.vim	/^let s:prefix = printf("vital-over(%s) Exception", s:vname)$/;"	v
s:prepare	nvim/autoload/plug.vim	/^function! s:prepare(...)$/;"	f
s:prepend_opts	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:prepend_opts(dict, eopts)$/;"	f
s:preprocess_values	nvim/autoload/plugged/editorconfig-vim/autoload/editorconfig_core/handler.vim	/^function! s:preprocess_values(job, opts)$/;"	f
s:preview_commit	nvim/autoload/plug.vim	/^function! s:preview_commit()$/;"	f
s:print_warning_msg	nvim/autoload/plugged/minimap.vim/autoload/minimap/vim.vim	/^function! s:print_warning_msg(msg) abort$/;"	f
s:process_options_file	nvim/autoload/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:process_options_file(proj_dir, path) abort$/;"	f
s:product	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:product(lists) abort$/;"	f
s:product	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:product(lists) abort$/;"	f
s:progress_bar	nvim/autoload/plug.vim	/^function! s:progress_bar(line, bar, total)$/;"	f
s:progress_opt	nvim/autoload/plug.vim	/^function! s:progress_opt(base)$/;"	f
s:project_root	nvim/autoload/plugged/incsearch.vim/autoload/vital/incsearch.vim	/^let s:project_root = expand('<sfile>:h:h:h')$/;"	v
s:project_root	nvim/autoload/plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^let s:project_root = expand('<sfile>:h:h:h')$/;"	v
s:project_root	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^let s:project_root = expand('<sfile>:h:h:h')$/;"	v
s:prompt_snapshot_file	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/promptline.vim	/^let s:prompt_snapshot_file = get(g:, 'airline#extensions#promptline#snapshot_file', '')$/;"	v
s:prototype	nvim/autoload/plugged/vim-airline/autoload/airline/builder.vim	/^let s:prototype = {}$/;"	v
s:prototype	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^let s:prototype = {}$/;"	v
s:prototype	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^let s:prototype.overflow_group = 'airline_tab'$/;"	v
s:prototype.add_raw	nvim/autoload/plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.add_raw(text) dict$/;"	f
s:prototype.add_section	nvim/autoload/plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.add_section(group, contents) dict$/;"	f
s:prototype.add_section_spaced	nvim/autoload/plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.add_section_spaced(group, contents) dict$/;"	f
s:prototype.build	nvim/autoload/plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.build() dict$/;"	f
s:prototype.build	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! s:prototype.build() dict$/;"	f
s:prototype.get_position	nvim/autoload/plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.get_position() dict$/;"	f
s:prototype.insert_raw	nvim/autoload/plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.insert_raw(text, position) dict$/;"	f
s:prototype.insert_section	nvim/autoload/plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.insert_section(group, contents, position) dict$/;"	f
s:prototype.insert_titles	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! s:prototype.insert_titles(current, first, last) dict$/;"	f
s:prototype.split	nvim/autoload/plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.split(...) dict$/;"	f
s:prototype.try_insert_title	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! s:prototype.try_insert_title(index, group, pos, sep_size, force) dict$/;"	f
s:push	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:push(list, val) abort$/;"	f
s:push	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:push(list, val) abort$/;"	f
s:put_dummy_cursor	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^function! s:put_dummy_cursor(curpos) abort "{{{$/;"	f
s:quench	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^function! s:quench(id) abort  "{{{$/;"	f
s:quench_paused	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^function! s:quench_paused(...) abort "{{{$/;"	f
s:quench_table	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^let s:quench_table = {}$/;"	v
s:query	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^function! s:query(count) abort "{{{$/;"	f
s:quit_by_error	nvim/autoload/plugged/vim-highlightedyank/test/test-highlightedyank.vim	/^function! s:quit_by_error() abort "{{{$/;"	f
s:rand	nvim/autoload/plugged/vim-airline/plugin/airline.vim	/^function! s:rand(max) abort$/;"	f
s:random_theme	nvim/autoload/plugged/vim-airline/plugin/airline.vim	/^function! s:random_theme() abort$/;"	f
s:re_escape	nvim/autoload/plugged/editorconfig-vim/autoload/editorconfig_core/fnmatch.vim	/^function! s:re_escape(text)$/;"	f
s:read_content	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Buffer.vim	/^function! s:read_content(content, ...) abort$/;"	f
s:readfile	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/System/Cache/Deprecated.vim	/^function! s:readfile(cache_dir, filename) abort$/;"	f
s:reap	nvim/autoload/plug.vim	/^function! s:reap(name)$/;"	f
s:record_diagnostics	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! s:record_diagnostics(state)$/;"	f
s:reduce_line	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:reduce_line(lines)$/;"	f
s:refresh_minimap	nvim/autoload/plugged/minimap.vim/autoload/minimap/vim.vim	/^function! s:refresh_minimap(force) abort$/;"	f
s:regexp_join	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/util.vim	/^function! s:regexp_join(ps) abort$/;"	f
s:register	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Guard.vim	/^let s:register = {}$/;"	v
s:register.restore	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Guard.vim	/^function! s:register.restore() abort$/;"	f
s:register_table	nvim/autoload/plugged/vim-highlightedyank/test/test-highlightedyank.vim	/^let s:register_table = [$/;"	v
s:regress_bar	nvim/autoload/plug.vim	/^function! s:regress_bar()$/;"	f
s:reload_plugins	nvim/autoload/plug.vim	/^function! s:reload_plugins()$/;"	f
s:remove_ansi_sequences	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:remove_ansi_sequences(text) abort$/;"	f
s:remove_layout	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:remove_layout(opts)$/;"	f
s:remove_rtp	nvim/autoload/plug.vim	/^function! s:remove_rtp()$/;"	f
s:remove_triggers	nvim/autoload/plug.vim	/^function! s:remove_triggers(name)$/;"	f
s:render_minimap	nvim/autoload/plugged/minimap.vim/autoload/minimap/vim.vim	/^function! s:render_minimap(mmwinnr, bufnr, fname, ftype) abort$/;"	f
s:reorg_rtp	nvim/autoload/plug.vim	/^function! s:reorg_rtp()$/;"	f
s:repair_posix_text	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:repair_posix_text(text, ...) abort$/;"	f
s:replace	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:replace(str, from, to) abort$/;"	f
s:replace_first	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:replace_first(str, from, to) abort$/;"	f
s:replace_l1_bg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:replace_l1_bg = s:palette.orange$/;"	v
s:replace_l1_fg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:replace_l1_fg = s:palette.bg0$/;"	v
s:replace_l2_bg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:replace_l2_bg = s:palette.bg4$/;"	v
s:replace_l2_fg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:replace_l2_fg = s:palette.fg$/;"	v
s:replace_mid_bg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:replace_mid_bg = s:palette.bg1$/;"	v
s:replace_mid_fg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:replace_mid_fg = s:palette.fg$/;"	v
s:replace_middle_bg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:replace_middle_bg = s:palette.bg1$/;"	v
s:replace_middle_fg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:replace_middle_fg = s:palette.fg$/;"	v
s:replace_mod_bg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:replace_mod_bg = s:palette.bg1$/;"	v
s:replace_mod_fg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:replace_mod_fg = s:palette.yellow$/;"	v
s:replace_r1_bg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:replace_r1_bg = s:palette.orange$/;"	v
s:replace_r1_fg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:replace_r1_fg = s:palette.bg0$/;"	v
s:replace_r2_bg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:replace_r2_bg = s:palette.bg4$/;"	v
s:replace_r2_fg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:replace_r2_fg = s:palette.fg$/;"	v
s:replace_side_bg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:replace_side_bg = s:palette.yellow$/;"	v
s:replace_side_fg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:replace_side_fg = s:palette.bg0$/;"	v
s:replace_sub_bg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:replace_sub_bg = s:palette.bg4$/;"	v
s:replace_sub_fg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:replace_sub_fg = s:palette.fg$/;"	v
s:replacement_expr	nvim/autoload/plugged/editorconfig-vim/autoload/editorconfig_core/fnmatch.vim	/^let s:replacement_expr =$/;"	v
s:reset_buffer	nvim/autoload/plugged/incsearch.vim/test/autonohlsearch.vim	/^function! s:reset_buffer()$/;"	f
s:reset_buffer	nvim/autoload/plugged/incsearch.vim/test/cancel.vim	/^function! s:reset_buffer()$/;"	f
s:reset_buffer	nvim/autoload/plugged/incsearch.vim/test/count.vim	/^function! s:reset_buffer()$/;"	f
s:reset_buffer	nvim/autoload/plugged/incsearch.vim/test/default_behaviors.vim	/^function! s:reset_buffer()$/;"	f
s:reset_buffer	nvim/autoload/plugged/incsearch.vim/test/error_warning_emulation.vim	/^function! s:reset_buffer()$/;"	f
s:reset_buffer	nvim/autoload/plugged/incsearch.vim/test/fold.vim	/^function! s:reset_buffer()$/;"	f
s:reset_buffer	nvim/autoload/plugged/incsearch.vim/test/highlight.vim	/^function! s:reset_buffer()$/;"	f
s:reset_buffer	nvim/autoload/plugged/incsearch.vim/test/incremental_next_prev.vim	/^function! s:reset_buffer()$/;"	f
s:reset_buffer	nvim/autoload/plugged/incsearch.vim/test/insert_register.vim	/^function! s:reset_buffer()$/;"	f
s:reset_buffer	nvim/autoload/plugged/incsearch.vim/test/jumplist.vim	/^function! s:reset_buffer()$/;"	f
s:reset_buffer	nvim/autoload/plugged/incsearch.vim/test/magic_option.vim	/^function! s:reset_buffer()$/;"	f
s:reset_buffer	nvim/autoload/plugged/incsearch.vim/test/module.vim	/^function! s:reset_buffer()$/;"	f
s:reset_buffer	nvim/autoload/plugged/incsearch.vim/test/n_and_N.vim	/^function! s:reset_buffer()$/;"	f
s:reset_buffer	nvim/autoload/plugged/incsearch.vim/test/nomagic.vim	/^function! s:reset_buffer()$/;"	f
s:reset_buffer	nvim/autoload/plugged/incsearch.vim/test/operator_pending_behavior.vim	/^function! s:reset_buffer()$/;"	f
s:reset_buffer	nvim/autoload/plugged/incsearch.vim/test/register.vim	/^function! s:reset_buffer()$/;"	f
s:reset_buffer	nvim/autoload/plugged/incsearch.vim/test/scroll.vim	/^function! s:reset_buffer()$/;"	f
s:reset_buffer	nvim/autoload/plugged/incsearch.vim/test/visual_behavior.vim	/^function! s:reset_buffer()$/;"	f
s:reset_buffer	nvim/autoload/plugged/incsearch.vim/test/visual_emulation.vim	/^function! s:reset_buffer()$/;"	f
s:reset_untracked_cache	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:reset_untracked_cache(shellcmdpost)$/;"	f
s:restore_options	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^function! s:restore_options(options) abort "{{{$/;"	f
s:restore_options	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^function! s:restore_options(options) abort "{{{$/;"	f
s:retry	nvim/autoload/plug.vim	/^function! s:retry()$/;"	f
s:reverse	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:reverse(str) abort$/;"	f
s:reverse_list	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:reverse_list(opts)$/;"	f
s:revert	nvim/autoload/plug.vim	/^function! s:revert()$/;"	f
s:rhs_key_list	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Keymapping.vim	/^function! s:rhs_key_list(...)$/;"	f
s:rm_rf	nvim/autoload/plug.vim	/^function! s:rm_rf(dir)$/;"	f
s:root	nvim/autoload/plugged/vim-rooter/plugin/rooter.vim	/^function! s:root()$/;"	f
s:rooter	nvim/autoload/plugged/vim-rooter/plugin/rooter.vim	/^function! s:rooter()$/;"	f
s:rootless	nvim/autoload/plugged/vim-rooter/plugin/rooter.vim	/^function! s:rootless()$/;"	f
s:rtp	nvim/autoload/plug.vim	/^function! s:rtp(spec)$/;"	f
s:runner_exe	nvim/autoload/plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^let s:runner_exe = gutentags#get_plat_file('update_scopedb')$/;"	v
s:runner_exe	nvim/autoload/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:runner_exe = '"' . gutentags#get_plat_file('update_tags') . '"'$/;"	v
s:save_cpo	nvim/autoload/plugged/completion-nvim/plugin/completion.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/diagnostic-nvim/plugin/diagnostic.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/autocmd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/cli.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/config.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/highlight.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/extend.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/modules/bracketed_paste.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/modules/bulk_input_char.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/modules/exit.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/modules/incsearch.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/modules/insert_register.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/modules/module_management.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/modules/pattern_saver.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/util.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Highlight.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Window.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/Dict.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Gift.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Gift/Tabpage.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Gift/Window.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Base.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Maker.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/All.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/AsyncUpdate.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/BufferComplete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Cancel.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/CursorMove.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Delete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Digraphs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Doautocmd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/DrawCommandline.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/ExceptionExit.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/ExceptionMessage.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Execute.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Exit.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/HistAdd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/History.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/IgnoreRegexpBackwardWord.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Incsearch.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/InsertRegister.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/KeyMapping.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/LiteralInsert.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/NoInsert.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Paste.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Redraw.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Scroll.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Exception.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Input.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Keymapping.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Signals.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/String.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Capture.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Highlight.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Keymapping.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Buffer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Guard.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Message.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/incsearch.vim/plugin/incsearch.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Process.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/System/Cache/Deprecated.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/vim-airline/plugin/airline.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/vim-devicons/autoload/vimfiler/columns/devicons.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/autoload/plugged/vim-devicons/plugin/webdevicons.vim	/^let s:save_cpo = &cpo$/;"	v
s:saved_cpo	nvim/autoload/plugged/editorconfig-vim/autoload/editorconfig.vim	/^let s:saved_cpo = &cpo$/;"	v
s:saved_cpo	nvim/autoload/plugged/editorconfig-vim/autoload/editorconfig_core.vim	/^let s:saved_cpo = &cpo$/;"	v
s:saved_cpo	nvim/autoload/plugged/editorconfig-vim/autoload/editorconfig_core/fnmatch.vim	/^let s:saved_cpo = &cpo$/;"	v
s:saved_cpo	nvim/autoload/plugged/editorconfig-vim/autoload/editorconfig_core/handler.vim	/^let s:saved_cpo = &cpo$/;"	v
s:saved_cpo	nvim/autoload/plugged/editorconfig-vim/autoload/editorconfig_core/ini.vim	/^let s:saved_cpo = &cpo$/;"	v
s:saved_cpo	nvim/autoload/plugged/editorconfig-vim/autoload/editorconfig_core/util.vim	/^let s:saved_cpo = &cpo$/;"	v
s:saved_cpo	nvim/autoload/plugged/editorconfig-vim/plugin/editorconfig.vim	/^let s:saved_cpo = &cpo$/;"	v
s:scan	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:scan(str, pattern) abort$/;"	f
s:script_path	nvim/autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^let s:script_path = tolower(resolve(expand('<sfile>:p:h')))$/;"	v
s:search	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^function! s:search(cli, input) abort$/;"	f
s:search	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Execute.vim	/^let s:search = deepcopy(s:module)$/;"	v
s:search	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Execute.vim	/^let s:search.prefix = "\/"$/;"	v
s:search	nvim/autoload/plugged/incsearch.vim/autoload/vital/incsearch.vim	/^function! s:search(pattern) abort dict$/;"	f
s:search	nvim/autoload/plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^function! s:search(pattern) abort dict$/;"	f
s:search	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^function! s:search(pattern) abort dict$/;"	f
s:search.execute	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Execute.vim	/^function! s:search.execute(cmdline)$/;"	f
s:search_history_sink	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:search_history_sink(lines)$/;"	f
s:search_sync_placeholder	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/view.vim	/^function! s:search_sync_placeholder(start, end, number) abort$/;"	f
s:section	nvim/autoload/plug.vim	/^function! s:section(flags)$/;"	f
s:section_a	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/term.vim	/^let s:section_a = airline#section#create_left(['terminal', 'tmode'])$/;"	v
s:section_is_empty	nvim/autoload/plugged/vim-airline/autoload/airline/builder.vim	/^function! s:section_is_empty(self, content)$/;"	f
s:section_truncate_width	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/default.vim	/^let s:section_truncate_width = get(g:, 'airline#extensions#default#section_truncate_width', {$/;"	v
s:section_use_groups	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/default.vim	/^let s:section_use_groups     = get(g:, 'airline#extensions#default#section_use_groupitems', 1)$/;"	v
s:section_z	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/term.vim	/^let s:section_z = airline#section#create(['linenr', 'maxlinenr'])$/;"	v
s:sections	nvim/autoload/plugged/vim-airline/autoload/airline.vim	/^let s:sections = ['a','b','c','gutter','x','y','z', 'error', 'warning']$/;"	v
s:sections	nvim/autoload/plugged/vim-airline/t/init.vim	/^let s:sections = ['a', 'b', 'c', 'gutter', 'x', 'y', 'z', 'warning']$/;"	v
s:select_tab	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! s:select_tab(buf_index)$/;"	f
s:separators	nvim/autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^let s:separators = {}$/;"	v
s:set	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Highlight.vim	/^function! s:set(name, config)$/;"	f
s:set	nvim/autoload/plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:set(var, default) abort$/;"	f
s:setCursorHold	nvim/autoload/plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:setCursorHold()$/;"	f
s:setDictionaries	nvim/autoload/plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:setDictionaries()$/;"	f
s:setSyntax	nvim/autoload/plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:setSyntax()$/;"	f
s:set_autocmds	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^function! s:set_autocmds(id) abort "{{{$/;"	f
s:set_clean_jobs_variable	nvim/autoload/plugged/vim-airline/autoload/airline/async.vim	/^function! s:set_clean_jobs_variable(vcs, file, id)$/;"	f
s:set_clean_variables	nvim/autoload/plugged/vim-airline/autoload/airline/async.vim	/^function! s:set_clean_variables(file, vcs, val)$/;"	f
s:set_current_window	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Gift.vim	/^function! s:set_current_window(expr)$/;"	f
s:set_cursor_color_for	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! s:set_cursor_color_for(mode)$/;"	f
s:set_default	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:set_default(var, val) abort$/;"	f
s:set_default	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:set_default(var, val) abort$/;"	f
s:set_prefix	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Gift/Tabpage.vim	/^function! s:set_prefix(prefix)$/;"	f
s:set_prefix	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Gift/Window.vim	/^function! s:set_prefix(prefix)$/;"	f
s:set_prefix	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Exception.vim	/^function! s:set_prefix(prefix)$/;"	f
s:set_search_reg	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^function! s:set_search_reg(pattern, command) abort$/;"	f
s:set_search_related_stuff	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^function! s:set_search_related_stuff(cli, cmd, ...) abort$/;"	f
s:set_snippet_dict	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/parser.vim	/^function! s:set_snippet_dict(snippet_dict, snippets, dup_check, snippets_file) abort$/;"	f
s:set_vimrepeat	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^function! s:set_vimrepeat(cmd) abort$/;"	f
s:setvar	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Gift/Window.vim	/^function! s:setvar(nr, varname, val)$/;"	f
s:setwinvar	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Gift.vim	/^function! s:setwinvar(uniq_winnr, varname, val)$/;"	f
s:severity_error	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^let s:severity_error = 1$/;"	v
s:severity_hint	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^let s:severity_hint = 4$/;"	v
s:severity_info	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^let s:severity_info = 3$/;"	v
s:severity_warning	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^let s:severity_warning = 2$/;"	v
s:sha1size	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/branch.vim	/^let s:sha1size = get(g:, 'airline#extensions#branch#sha1_len', 7)$/;"	v
s:shellesc_cmd	nvim/autoload/plug.vim	/^function! s:shellesc_cmd(arg, script)$/;"	f
s:shellesc_ps1	nvim/autoload/plug.vim	/^function! s:shellesc_ps1(arg)$/;"	f
s:shellesc_sh	nvim/autoload/plug.vim	/^function! s:shellesc_sh(arg)$/;"	f
s:shellescape	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Process.vim	/^  function! s:shellescape(...) abort$/;"	f
s:shellescape	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Process.vim	/^  function! s:shellescape(command) abort$/;"	f
s:shift	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:shift(list) abort$/;"	f
s:shift	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:shift(list) abort$/;"	f
s:shift_options	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^function! s:shift_options() abort "{{{$/;"	f
s:shift_options	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^function! s:shift_options() abort "{{{$/;"	f
s:shortpath	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:shortpath()$/;"	f
s:shouldFt	nvim/autoload/plugged/nvim-treesitter/ftdetect/query.vim	/^function! s:shouldFt(path)$/;"	f
s:show_buffers	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^let s:show_buffers = get(g:, 'airline#extensions#tabline#show_buffers', 1)$/;"	v
s:show_documentation	.config/nvim/configs/coc.vim	/^function! s:show_documentation()$/;"	f
s:show_line_numbers	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^let s:show_line_numbers = get(g:, 'airline#extensions#languageclient#show_line_numbers', 1)$/;"	v
s:show_message	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:show_message = get(g:, 'airline#extensions#whitespace#show_message', 1)$/;"	v
s:show_tabline	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^function! s:show_tabline(min_count, total_count)$/;"	f
s:sid	nvim/autoload/plugged/vim-buftabline/plugin/buftabline.vim	/^let s:sid = expand('<SID>')$/;"	v
s:sid2sfuncs	nvim/autoload/plugged/incsearch.vim/autoload/vital/incsearch.vim	/^function! s:sid2sfuncs(sid) abort$/;"	f
s:sid2sfuncs	nvim/autoload/plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^function! s:sid2sfuncs(sid) abort$/;"	f
s:sid2sfuncs	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^function! s:sid2sfuncs(sid) abort$/;"	f
s:signId	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^let s:signId = 2123654789$/;"	v
s:silent_after_search	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^function! s:silent_after_search(...) abort " arg: mode(1)$/;"	f
s:silent_feedkeys	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/util.vim	/^function! s:silent_feedkeys(expr, name, ...) abort$/;"	f
s:silent_feedkeys	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/Execute.vim	/^function! s:silent_feedkeys(expr, name, ...)$/;"	f
s:skip_check_ft	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:skip_check_ft = {'make': ['indent', 'mixed-indent-file'],$/;"	v
s:skip_next_auto_completion	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/view.vim	/^function! s:skip_next_auto_completion() abort$/;"	f
s:skip_symbol	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/formatters/unique_tail_improved.vim	/^let s:skip_symbol = '…'$/;"	v
s:smart_execute_command	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:smart_execute_command(action, word) abort$/;"	f
s:smart_execute_command	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:smart_execute_command(action, word) abort$/;"	f
s:smartbackword	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/cli.vim	/^let s:smartbackword = s:modules.get('IgnoreRegexpBackwardWord').make()$/;"	v
s:smartbackword._condition	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/cli.vim	/^function! s:smartbackword._condition() abort$/;"	f
s:snapshot	nvim/autoload/plug.vim	/^function! s:snapshot(force, ...) abort$/;"	f
s:snippets_expand	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! s:snippets_expand(cur_text, col) abort$/;"	f
s:snippets_expand_or_jump	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! s:snippets_expand_or_jump(cur_text, col) abort$/;"	f
s:snippets_jump_or_expand	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! s:snippets_jump_or_expand(cur_text, col) abort$/;"	f
s:softRefreshNerdTree	nvim/autoload/plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:softRefreshNerdTree()$/;"	f
s:sort	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:sort(list, expr) abort$/;"	f
s:sort	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:sort(list, expr) abort$/;"	f
s:sort_buffers	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:sort_buffers(...)$/;"	f
s:sort_by	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:sort_by(list, expr) abort$/;"	f
s:sort_by	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:sort_by(list, expr) abort$/;"	f
s:sort_num	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/util.vim	/^function! s:sort_num(xs) abort$/;"	f
s:sort_pos	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/util.vim	/^function! s:sort_pos(pos_list) abort$/;"	f
s:source	nvim/autoload/plug.vim	/^function! s:source(from, ...)$/;"	f
s:source	nvim/autoload/plugged/neosnippet.vim/autoload/neocomplcache/sources/snippets_complete.vim	/^let s:source = {$/;"	v
s:source	nvim/autoload/plugged/neosnippet.vim/autoload/neocomplete/sources/neosnippet.vim	/^let s:source = {$/;"	v
s:source	nvim/autoload/plugged/neosnippet.vim/autoload/unite/sources/neosnippet.vim	/^let s:source = {$/;"	v
s:source	nvim/autoload/plugged/neosnippet.vim/autoload/unite/sources/neosnippet.vim	/^let s:source.action_table = s:action_table$/;"	v
s:source.gather_candidates	nvim/autoload/plugged/neosnippet.vim/autoload/neocomplete/sources/neosnippet.vim	/^function! s:source.gather_candidates(context) abort$/;"	f
s:source.gather_candidates	nvim/autoload/plugged/neosnippet.vim/autoload/unite/sources/neosnippet.vim	/^function! s:source.gather_candidates(args, context) abort$/;"	f
s:source.get_complete_words	nvim/autoload/plugged/neosnippet.vim/autoload/neocomplcache/sources/snippets_complete.vim	/^function! s:source.get_complete_words(cur_keyword_pos, cur_keyword_str) abort$/;"	f
s:source.get_keyword_pos	nvim/autoload/plugged/neosnippet.vim/autoload/neocomplcache/sources/snippets_complete.vim	/^function! s:source.get_keyword_pos(cur_text) abort$/;"	f
s:source.hooks.on_init	nvim/autoload/plugged/neosnippet.vim/autoload/unite/sources/neosnippet.vim	/^function! s:source.hooks.on_init(args, context) abort$/;"	f
s:source.hooks.on_post_filter	nvim/autoload/plugged/neosnippet.vim/autoload/neocomplete/sources/neosnippet.vim	/^function! s:source.hooks.on_post_filter(context) abort$/;"	f
s:source.initialize	nvim/autoload/plugged/neosnippet.vim/autoload/neocomplcache/sources/snippets_complete.vim	/^function! s:source.initialize() abort$/;"	f
s:source_buffer_enter_handler	nvim/autoload/plugged/minimap.vim/autoload/minimap/vim.vim	/^function! s:source_buffer_enter_handler() abort$/;"	f
s:source_move	nvim/autoload/plugged/minimap.vim/autoload/minimap/vim.vim	/^function! s:source_move() abort$/;"	f
s:source_runtime	nvim/autoload/plugged/neosnippet.vim/autoload/unite/sources/neosnippet_file.vim	/^let s:source_runtime = {$/;"	v
s:source_runtime	nvim/autoload/plugged/neosnippet.vim/autoload/unite/sources/neosnippet_file.vim	/^let s:source_runtime.action_table.unite__new_candidate = {$/;"	v
s:source_runtime.action_table.unite__new_candidate.func	nvim/autoload/plugged/neosnippet.vim/autoload/unite/sources/neosnippet_file.vim	/^function! s:source_runtime.action_table.unite__new_candidate.func(candidate) abort$/;"	f
s:source_runtime.gather_candidates	nvim/autoload/plugged/neosnippet.vim/autoload/unite/sources/neosnippet_file.vim	/^function! s:source_runtime.gather_candidates(args, context) abort$/;"	f
s:source_user	nvim/autoload/plugged/neosnippet.vim/autoload/unite/sources/neosnippet_file.vim	/^let s:source_user = {$/;"	v
s:source_user	nvim/autoload/plugged/neosnippet.vim/autoload/unite/sources/neosnippet_file.vim	/^let s:source_user.action_table.unite__new_candidate = {$/;"	v
s:source_user.action_table.unite__new_candidate.func	nvim/autoload/plugged/neosnippet.vim/autoload/unite/sources/neosnippet_file.vim	/^function! s:source_user.action_table.unite__new_candidate.func(candidate) abort$/;"	f
s:source_user.gather_candidates	nvim/autoload/plugged/neosnippet.vim/autoload/unite/sources/neosnippet_file.vim	/^function! s:source_user.gather_candidates(args, context) abort$/;"	f
s:source_win_enter	nvim/autoload/plugged/minimap.vim/autoload/minimap/vim.vim	/^function! s:source_win_enter() abort$/;"	f
s:span	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:span(f, xs) abort$/;"	f
s:span	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:span(f, xs) abort$/;"	f
s:spawn	nvim/autoload/plug.vim	/^function! s:spawn(name, cmd, opts)$/;"	f
s:spawn	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Process.vim	/^function! s:spawn(expr, ...) abort$/;"	f
s:spc	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/dirvish.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/example.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/localsearch.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/obsession.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/poetv.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/term.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/vimtex.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/virtualenv.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/windowswap.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/ycm.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	nvim/autoload/plugged/vim-airline/autoload/airline/section.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	nvim/autoload/plugged/vim-airline/autoload/airline/util.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:split3	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:split3(expr, pattern) abort$/;"	f
s:split_by_displaywidth	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:split_by_displaywidth(expr, width, float, is_wrap) abort$/;"	f
s:split_by_keys	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/String.vim	/^function! s:split_by_keys(str)$/;"	f
s:split_leftright	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:split_leftright(expr, pattern) abort$/;"	f
s:split_posix_text	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:split_posix_text(text, ...) abort$/;"	f
s:split_rtp	nvim/autoload/plug.vim	/^function! s:split_rtp()$/;"	f
s:standard	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Maker.vim	/^function! s:standard(...)$/;"	f
s:standard_search	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Maker.vim	/^function! s:standard_search(...)$/;"	f
s:standard_search_back	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Maker.vim	/^function! s:standard_search_back(...)$/;"	f
s:starts_with	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:starts_with(str, prefix) abort$/;"	f
s:state	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank.vim	/^let s:state = s:ON$/;"	v
s:status	nvim/autoload/plug.vim	/^function! s:status()$/;"	f
s:status_load	nvim/autoload/plug.vim	/^function! s:status_load(lnum)$/;"	f
s:status_update	nvim/autoload/plug.vim	/^function! s:status_update() range$/;"	f
s:stay	nvim/autoload/plugged/incsearch.vim/autoload/incsearch.vim	/^function! s:stay(cli, input) abort$/;"	f
s:store	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Guard.vim	/^function! s:store(targets) abort$/;"	f
s:strchars	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^  function! s:strchars(str) abort$/;"	f
s:strchars	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^  let s:strchars = function('strchars')$/;"	v
s:strip	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:strip(str)$/;"	f
s:strip	nvim/autoload/plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:strip(input)$/;"	f
s:strip_white_space	nvim/autoload/plugged/vim-commentary/plugin/commentary.vim	/^function! s:strip_white_space(l,r,line) abort$/;"	f
s:strip_whitespace_pattern	nvim/autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^let s:strip_whitespace_pattern = s:eol_whitespace_pattern$/;"	v
s:strwidthpart	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:strwidthpart(str, width) abort$/;"	f
s:strwidthpart	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:strwidthpart(str, width) abort$/;"	f
s:strwidthpart	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:strwidthpart(str, width) abort$/;"	f
s:strwidthpart_reverse	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:strwidthpart_reverse(str, width) abort$/;"	f
s:strwidthpart_reverse	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:strwidthpart_reverse(str, width) abort$/;"	f
s:strwidthpart_reverse	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:strwidthpart_reverse(str, width) abort$/;"	f
s:sub	nvim/autoload/plugged/vim-rooter/plugin/rooter.vim	/^function! s:sub(dir, identifier)$/;"	f
s:substitute_last	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:substitute_last(expr, pat, sub) abort$/;"	f
s:substitute_path_separator	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:substitute_path_separator(path) abort$/;"	f
s:substitute_path_separator	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:substitute_path_separator(path) abort$/;"	f
s:substitute_placeholder_marker	nvim/autoload/plugged/neosnippet.vim/autoload/neosnippet/view.vim	/^function! s:substitute_placeholder_marker(start, end, snippet_holder_cnt) abort$/;"	f
s:suffix	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:suffix(left, suffix)$/;"	f
s:suite	nvim/autoload/plugged/incsearch.vim/test/autonohlsearch.vim	/^let s:suite = themis#suite('autonlsearch')$/;"	v
s:suite	nvim/autoload/plugged/incsearch.vim/test/cancel.vim	/^let s:suite = themis#suite('cancel')$/;"	v
s:suite	nvim/autoload/plugged/incsearch.vim/test/count.vim	/^let s:suite = themis#suite('count')$/;"	v
s:suite	nvim/autoload/plugged/incsearch.vim/test/default_behaviors.vim	/^let s:suite = themis#suite('default_behaviors')$/;"	v
s:suite	nvim/autoload/plugged/incsearch.vim/test/default_settings.vim	/^let s:suite = themis#suite('default_settings')$/;"	v
s:suite	nvim/autoload/plugged/incsearch.vim/test/error_warning_emulation.vim	/^let s:suite = themis#suite('error_warning_emulation')$/;"	v
s:suite	nvim/autoload/plugged/incsearch.vim/test/fold.vim	/^let s:suite = themis#suite('fold')$/;"	v
s:suite	nvim/autoload/plugged/incsearch.vim/test/highlight.vim	/^let s:suite = themis#suite('highlight')$/;"	v
s:suite	nvim/autoload/plugged/incsearch.vim/test/history.vim	/^let s:suite = themis#suite('history')$/;"	v
s:suite	nvim/autoload/plugged/incsearch.vim/test/incremental_next_prev.vim	/^let s:suite = themis#suite('incremental_next_prev')$/;"	v
s:suite	nvim/autoload/plugged/incsearch.vim/test/insert_register.vim	/^let s:suite = themis#suite('insert_register')$/;"	v
s:suite	nvim/autoload/plugged/incsearch.vim/test/jumplist.vim	/^let s:suite = themis#suite('jumplist')$/;"	v
s:suite	nvim/autoload/plugged/incsearch.vim/test/magic_option.vim	/^let s:suite = themis#suite('magic_option')$/;"	v
s:suite	nvim/autoload/plugged/incsearch.vim/test/module.vim	/^let s:suite = themis#suite('cancel')$/;"	v
s:suite	nvim/autoload/plugged/incsearch.vim/test/n_and_N.vim	/^let s:suite = themis#suite('n_and_N')$/;"	v
s:suite	nvim/autoload/plugged/incsearch.vim/test/nomagic.vim	/^let s:suite = themis#suite('nomagic')$/;"	v
s:suite	nvim/autoload/plugged/incsearch.vim/test/operator_pending_behavior.vim	/^let s:suite = themis#suite('operator_pending_behavior')$/;"	v
s:suite	nvim/autoload/plugged/incsearch.vim/test/register.vim	/^let s:suite = themis#suite('register')$/;"	v
s:suite	nvim/autoload/plugged/incsearch.vim/test/repetition.vim	/^let s:suite = themis#suite('repetition')$/;"	v
s:suite	nvim/autoload/plugged/incsearch.vim/test/scroll.vim	/^let s:suite = themis#suite('scroll')$/;"	v
s:suite	nvim/autoload/plugged/incsearch.vim/test/util.vim	/^let s:suite = themis#suite('util')$/;"	v
s:suite	nvim/autoload/plugged/incsearch.vim/test/visual_behavior.vim	/^let s:suite = themis#suite('visual_behaviors')$/;"	v
s:suite	nvim/autoload/plugged/incsearch.vim/test/visual_emulation.vim	/^let s:suite = themis#suite('visual_emulation')$/;"	v
s:suite	nvim/autoload/plugged/neosnippet.vim/test/functions.vim	/^let s:suite = themis#suite('toml')$/;"	v
s:suite	nvim/autoload/plugged/vim-devicons/test/default_setting.vim	/^let s:suite = themis#suite('Webdevicons-default-value')$/;"	v
s:suite	nvim/autoload/plugged/vim-devicons/test/fileformat.vim	/^let s:suite = themis#suite('WebDevIconsGetFileFormatSymbol')$/;"	v
s:suite	nvim/autoload/plugged/vim-devicons/test/filetype.vim	/^let s:suite = themis#suite('WebDevIconsGetFileTypeSymbol')$/;"	v
s:suite.CSSymbol	nvim/autoload/plugged/vim-devicons/test/filetype.vim	/^function! s:suite.CSSymbol()$/;"	f
s:suite.CSymbol	nvim/autoload/plugged/vim-devicons/test/filetype.vim	/^function! s:suite.CSymbol()$/;"	f
s:suite.ConfigOptions	nvim/autoload/plugged/vim-devicons/test/default_setting.vim	/^function! s:suite.ConfigOptions()$/;"	f
s:suite.CppSymbol	nvim/autoload/plugged/vim-devicons/test/filetype.vim	/^function! s:suite.CppSymbol()$/;"	f
s:suite.DBSymbol	nvim/autoload/plugged/vim-devicons/test/filetype.vim	/^function! s:suite.DBSymbol()$/;"	f
s:suite.DefaultIcon	nvim/autoload/plugged/vim-devicons/test/fileformat.vim	/^function! s:suite.DefaultIcon()$/;"	f
s:suite.DockerSymbol	nvim/autoload/plugged/vim-devicons/test/filetype.vim	/^function! s:suite.DockerSymbol()$/;"	f
s:suite.DropboxSymbol	nvim/autoload/plugged/vim-devicons/test/filetype.vim	/^function! s:suite.DropboxSymbol()$/;"	f
s:suite.E888__multi_after_zs_and_ze	nvim/autoload/plugged/incsearch.vim/test/error_warning_emulation.vim	/^function! s:suite.E888__multi_after_zs_and_ze()$/;"	f
s:suite.ElixirSymbol	nvim/autoload/plugged/vim-devicons/test/filetype.vim	/^function! s:suite.ElixirSymbol()$/;"	f
s:suite.ElmSymbol	nvim/autoload/plugged/vim-devicons/test/filetype.vim	/^function! s:suite.ElmSymbol()$/;"	f
s:suite.ErlangSymbol	nvim/autoload/plugged/vim-devicons/test/filetype.vim	/^function! s:suite.ErlangSymbol()$/;"	f
s:suite.ExtensionConfig	nvim/autoload/plugged/vim-devicons/test/default_setting.vim	/^function! s:suite.ExtensionConfig()$/;"	f
s:suite.FileNodesDefaultSymbol	nvim/autoload/plugged/vim-devicons/test/filetype.vim	/^function! s:suite.FileNodesDefaultSymbol()$/;"	f
s:suite.GearSymbol	nvim/autoload/plugged/vim-devicons/test/filetype.vim	/^function! s:suite.GearSymbol()$/;"	f
s:suite.GoSymbol	nvim/autoload/plugged/vim-devicons/test/filetype.vim	/^function! s:suite.GoSymbol()$/;"	f
s:suite.HaskellSymbol	nvim/autoload/plugged/vim-devicons/test/filetype.vim	/^function! s:suite.HaskellSymbol()$/;"	f
s:suite.JavaScriptSymbol	nvim/autoload/plugged/vim-devicons/test/filetype.vim	/^function! s:suite.JavaScriptSymbol()$/;"	f
s:suite.JavaSymbol	nvim/autoload/plugged/vim-devicons/test/filetype.vim	/^function! s:suite.JavaSymbol()$/;"	f
s:suite.JsonSymbol	nvim/autoload/plugged/vim-devicons/test/filetype.vim	/^function! s:suite.JsonSymbol()$/;"	f
s:suite.LicenseSymbol	nvim/autoload/plugged/vim-devicons/test/filetype.vim	/^function! s:suite.LicenseSymbol()$/;"	f
s:suite.LuaSymbol	nvim/autoload/plugged/vim-devicons/test/filetype.vim	/^function! s:suite.LuaSymbol()$/;"	f
s:suite.MacIcon	nvim/autoload/plugged/vim-devicons/test/fileformat.vim	/^function! s:suite.MacIcon()$/;"	f
s:suite.MarkdownSymbol	nvim/autoload/plugged/vim-devicons/test/filetype.vim	/^function! s:suite.MarkdownSymbol()$/;"	f
s:suite.NodeModuleSymbol	nvim/autoload/plugged/vim-devicons/test/filetype.vim	/^function! s:suite.NodeModuleSymbol()$/;"	f
s:suite.PhpSymbol	nvim/autoload/plugged/vim-devicons/test/filetype.vim	/^function! s:suite.PhpSymbol()$/;"	f
s:suite.PythonSymbol	nvim/autoload/plugged/vim-devicons/test/filetype.vim	/^function! s:suite.PythonSymbol()$/;"	f
s:suite.RSymbol	nvim/autoload/plugged/vim-devicons/test/filetype.vim	/^function! s:suite.RSymbol()$/;"	f
s:suite.ReactSymbol	nvim/autoload/plugged/vim-devicons/test/filetype.vim	/^function! s:suite.ReactSymbol()$/;"	f
s:suite.RssSymbol	nvim/autoload/plugged/vim-devicons/test/filetype.vim	/^function! s:suite.RssSymbol()$/;"	f
s:suite.RubySymbol	nvim/autoload/plugged/vim-devicons/test/filetype.vim	/^function! s:suite.RubySymbol()$/;"	f
s:suite.RustSymbol	nvim/autoload/plugged/vim-devicons/test/filetype.vim	/^function! s:suite.RustSymbol()$/;"	f
s:suite.ScalaSymbol	nvim/autoload/plugged/vim-devicons/test/filetype.vim	/^function! s:suite.ScalaSymbol()$/;"	f
s:suite.ShellSymbol	nvim/autoload/plugged/vim-devicons/test/filetype.vim	/^function! s:suite.ShellSymbol()$/;"	f
s:suite.SwiftSymbol	nvim/autoload/plugged/vim-devicons/test/filetype.vim	/^function! s:suite.SwiftSymbol()$/;"	f
s:suite.TexSymbol	nvim/autoload/plugged/vim-devicons/test/filetype.vim	/^function! s:suite.TexSymbol()$/;"	f
s:suite.TypeScript	nvim/autoload/plugged/vim-devicons/test/filetype.vim	/^function! s:suite.TypeScript()$/;"	f
s:suite.VimSymbol	nvim/autoload/plugged/vim-devicons/test/filetype.vim	/^function! s:suite.VimSymbol()$/;"	f
s:suite.VueSymbol	nvim/autoload/plugged/vim-devicons/test/filetype.vim	/^function! s:suite.VueSymbol()$/;"	f
s:suite.WindowsIcon	nvim/autoload/plugged/vim-devicons/test/fileformat.vim	/^function! s:suite.WindowsIcon()$/;"	f
s:suite.after	nvim/autoload/plugged/incsearch.vim/test/autonohlsearch.vim	/^function! s:suite.after()$/;"	f
s:suite.after	nvim/autoload/plugged/incsearch.vim/test/cancel.vim	/^function! s:suite.after()$/;"	f
s:suite.after	nvim/autoload/plugged/incsearch.vim/test/default_behaviors.vim	/^function! s:suite.after()$/;"	f
s:suite.after	nvim/autoload/plugged/incsearch.vim/test/error_warning_emulation.vim	/^function! s:suite.after()$/;"	f
s:suite.after	nvim/autoload/plugged/incsearch.vim/test/fold.vim	/^function! s:suite.after()$/;"	f
s:suite.after	nvim/autoload/plugged/incsearch.vim/test/highlight.vim	/^function! s:suite.after()$/;"	f
s:suite.after	nvim/autoload/plugged/incsearch.vim/test/history.vim	/^function! s:suite.after()$/;"	f
s:suite.after	nvim/autoload/plugged/incsearch.vim/test/incremental_next_prev.vim	/^function! s:suite.after()$/;"	f
s:suite.after	nvim/autoload/plugged/incsearch.vim/test/insert_register.vim	/^function! s:suite.after()$/;"	f
s:suite.after	nvim/autoload/plugged/incsearch.vim/test/jumplist.vim	/^function! s:suite.after()$/;"	f
s:suite.after	nvim/autoload/plugged/incsearch.vim/test/magic_option.vim	/^function! s:suite.after()$/;"	f
s:suite.after	nvim/autoload/plugged/incsearch.vim/test/module.vim	/^function! s:suite.after()$/;"	f
s:suite.after	nvim/autoload/plugged/incsearch.vim/test/n_and_N.vim	/^function! s:suite.after()$/;"	f
s:suite.after	nvim/autoload/plugged/incsearch.vim/test/nomagic.vim	/^function! s:suite.after()$/;"	f
s:suite.after	nvim/autoload/plugged/incsearch.vim/test/operator_pending_behavior.vim	/^function! s:suite.after()$/;"	f
s:suite.after	nvim/autoload/plugged/incsearch.vim/test/repetition.vim	/^function! s:suite.after()$/;"	f
s:suite.after	nvim/autoload/plugged/incsearch.vim/test/scroll.vim	/^function! s:suite.after()$/;"	f
s:suite.after	nvim/autoload/plugged/incsearch.vim/test/visual_behavior.vim	/^function! s:suite.after()$/;"	f
s:suite.after_backward	nvim/autoload/plugged/incsearch.vim/test/n_and_N.vim	/^function! s:suite.after_backward()$/;"	f
s:suite.after_each	nvim/autoload/plugged/incsearch.vim/test/error_warning_emulation.vim	/^function! s:suite.after_each()$/;"	f
s:suite.after_each	nvim/autoload/plugged/incsearch.vim/test/util.vim	/^function! s:suite.after_each()$/;"	f
s:suite.after_forward	nvim/autoload/plugged/incsearch.vim/test/n_and_N.vim	/^function! s:suite.after_forward()$/;"	f
s:suite.after_stay	nvim/autoload/plugged/incsearch.vim/test/n_and_N.vim	/^function! s:suite.after_stay()$/;"	f
s:suite.another_search_offset	nvim/autoload/plugged/incsearch.vim/test/operator_pending_behavior.vim	/^function! s:suite.another_search_offset()$/;"	f
s:suite.backward	nvim/autoload/plugged/incsearch.vim/test/default_behaviors.vim	/^function! s:suite.backward()$/;"	f
s:suite.backward	nvim/autoload/plugged/incsearch.vim/test/jumplist.vim	/^function! s:suite.backward()$/;"	f
s:suite.backward	nvim/autoload/plugged/incsearch.vim/test/visual_behavior.vim	/^function! s:suite.backward()$/;"	f
s:suite.backward_normal	nvim/autoload/plugged/incsearch.vim/test/count.vim	/^function! s:suite.backward_normal()$/;"	f
s:suite.backward_operator_pending	nvim/autoload/plugged/incsearch.vim/test/count.vim	/^function! s:suite.backward_operator_pending()$/;"	f
s:suite.backward_operator_pending_multiply	nvim/autoload/plugged/incsearch.vim/test/count.vim	/^function! s:suite.backward_operator_pending_multiply()$/;"	f
s:suite.backward_pattern	nvim/autoload/plugged/incsearch.vim/test/highlight.vim	/^function! s:suite.backward_pattern()$/;"	f
s:suite.backward_visual	nvim/autoload/plugged/incsearch.vim/test/count.vim	/^function! s:suite.backward_visual()$/;"	f
s:suite.before	nvim/autoload/plugged/incsearch.vim/test/autonohlsearch.vim	/^function! s:suite.before()$/;"	f
s:suite.before	nvim/autoload/plugged/incsearch.vim/test/cancel.vim	/^function! s:suite.before()$/;"	f
s:suite.before	nvim/autoload/plugged/incsearch.vim/test/default_behaviors.vim	/^function! s:suite.before()$/;"	f
s:suite.before	nvim/autoload/plugged/incsearch.vim/test/error_warning_emulation.vim	/^function! s:suite.before()$/;"	f
s:suite.before	nvim/autoload/plugged/incsearch.vim/test/fold.vim	/^function! s:suite.before()$/;"	f
s:suite.before	nvim/autoload/plugged/incsearch.vim/test/highlight.vim	/^function! s:suite.before()$/;"	f
s:suite.before	nvim/autoload/plugged/incsearch.vim/test/history.vim	/^function! s:suite.before()$/;"	f
s:suite.before	nvim/autoload/plugged/incsearch.vim/test/incremental_next_prev.vim	/^function! s:suite.before()$/;"	f
s:suite.before	nvim/autoload/plugged/incsearch.vim/test/insert_register.vim	/^function! s:suite.before()$/;"	f
s:suite.before	nvim/autoload/plugged/incsearch.vim/test/jumplist.vim	/^function! s:suite.before()$/;"	f
s:suite.before	nvim/autoload/plugged/incsearch.vim/test/magic_option.vim	/^function! s:suite.before()$/;"	f
s:suite.before	nvim/autoload/plugged/incsearch.vim/test/module.vim	/^function! s:suite.before()$/;"	f
s:suite.before	nvim/autoload/plugged/incsearch.vim/test/n_and_N.vim	/^function! s:suite.before()$/;"	f
s:suite.before	nvim/autoload/plugged/incsearch.vim/test/nomagic.vim	/^function! s:suite.before()$/;"	f
s:suite.before	nvim/autoload/plugged/incsearch.vim/test/operator_pending_behavior.vim	/^function! s:suite.before()$/;"	f
s:suite.before	nvim/autoload/plugged/incsearch.vim/test/repetition.vim	/^function! s:suite.before()$/;"	f
s:suite.before	nvim/autoload/plugged/incsearch.vim/test/scroll.vim	/^function! s:suite.before()$/;"	f
s:suite.before	nvim/autoload/plugged/incsearch.vim/test/visual_behavior.vim	/^function! s:suite.before()$/;"	f
s:suite.before_each	nvim/autoload/plugged/incsearch.vim/test/autonohlsearch.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	nvim/autoload/plugged/incsearch.vim/test/cancel.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	nvim/autoload/plugged/incsearch.vim/test/count.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	nvim/autoload/plugged/incsearch.vim/test/default_behaviors.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	nvim/autoload/plugged/incsearch.vim/test/error_warning_emulation.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	nvim/autoload/plugged/incsearch.vim/test/fold.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	nvim/autoload/plugged/incsearch.vim/test/highlight.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	nvim/autoload/plugged/incsearch.vim/test/history.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	nvim/autoload/plugged/incsearch.vim/test/incremental_next_prev.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	nvim/autoload/plugged/incsearch.vim/test/insert_register.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	nvim/autoload/plugged/incsearch.vim/test/jumplist.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	nvim/autoload/plugged/incsearch.vim/test/magic_option.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	nvim/autoload/plugged/incsearch.vim/test/module.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	nvim/autoload/plugged/incsearch.vim/test/n_and_N.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	nvim/autoload/plugged/incsearch.vim/test/nomagic.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	nvim/autoload/plugged/incsearch.vim/test/operator_pending_behavior.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	nvim/autoload/plugged/incsearch.vim/test/register.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	nvim/autoload/plugged/incsearch.vim/test/repetition.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	nvim/autoload/plugged/incsearch.vim/test/scroll.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	nvim/autoload/plugged/incsearch.vim/test/visual_behavior.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	nvim/autoload/plugged/incsearch.vim/test/visual_emulation.vim	/^function! s:suite.before_each()$/;"	f
s:suite.cWord	nvim/autoload/plugged/incsearch.vim/test/insert_register.vim	/^function! s:suite.cWord()$/;"	f
s:suite.can_set_magic	nvim/autoload/plugged/incsearch.vim/test/magic_option.vim	/^function! s:suite.can_set_magic()$/;"	f
s:suite.can_set_nomagic	nvim/autoload/plugged/incsearch.vim/test/magic_option.vim	/^function! s:suite.can_set_nomagic()$/;"	f
s:suite.can_set_very_magic	nvim/autoload/plugged/incsearch.vim/test/magic_option.vim	/^function! s:suite.can_set_very_magic()$/;"	f
s:suite.can_set_very_nomagic	nvim/autoload/plugged/incsearch.vim/test/magic_option.vim	/^function! s:suite.can_set_very_nomagic()$/;"	f
s:suite.cancel_backward_does_not_move_cursor	nvim/autoload/plugged/incsearch.vim/test/cancel.vim	/^function! s:suite.cancel_backward_does_not_move_cursor()$/;"	f
s:suite.cancel_backward_operator_pending	nvim/autoload/plugged/incsearch.vim/test/cancel.vim	/^function! s:suite.cancel_backward_operator_pending()$/;"	f
s:suite.cancel_backward_visual	nvim/autoload/plugged/incsearch.vim/test/cancel.vim	/^function! s:suite.cancel_backward_visual()$/;"	f
s:suite.cancel_forward_does_not_move_cursor	nvim/autoload/plugged/incsearch.vim/test/cancel.vim	/^function! s:suite.cancel_forward_does_not_move_cursor()$/;"	f
s:suite.cancel_forward_operator_pending	nvim/autoload/plugged/incsearch.vim/test/cancel.vim	/^function! s:suite.cancel_forward_operator_pending()$/;"	f
s:suite.cancel_forward_visual	nvim/autoload/plugged/incsearch.vim/test/cancel.vim	/^function! s:suite.cancel_forward_visual()$/;"	f
s:suite.cancel_stay_does_not_move_cursor	nvim/autoload/plugged/incsearch.vim/test/cancel.vim	/^function! s:suite.cancel_stay_does_not_move_cursor()$/;"	f
s:suite.cancel_stay_operator_pending	nvim/autoload/plugged/incsearch.vim/test/cancel.vim	/^function! s:suite.cancel_stay_operator_pending()$/;"	f
s:suite.cancel_stay_visual	nvim/autoload/plugged/incsearch.vim/test/cancel.vim	/^function! s:suite.cancel_stay_visual()$/;"	f
s:suite.cancel_will_not_change_last_pattern	nvim/autoload/plugged/incsearch.vim/test/cancel.vim	/^function! s:suite.cancel_will_not_change_last_pattern()$/;"	f
s:suite.cannot_set_other_char	nvim/autoload/plugged/incsearch.vim/test/magic_option.vim	/^function! s:suite.cannot_set_other_char()$/;"	f
s:suite.command_exist	nvim/autoload/plugged/incsearch.vim/test/default_settings.vim	/^function! s:suite.command_exist()$/;"	f
s:suite.commandline_history_backward	nvim/autoload/plugged/incsearch.vim/test/history.vim	/^function! s:suite.commandline_history_backward()$/;"	f
s:suite.commandline_history_forward	nvim/autoload/plugged/incsearch.vim/test/history.vim	/^function! s:suite.commandline_history_forward()$/;"	f
s:suite.commandline_history_stay	nvim/autoload/plugged/incsearch.vim/test/history.vim	/^function! s:suite.commandline_history_stay()$/;"	f
s:suite.config	nvim/autoload/plugged/incsearch.vim/test/default_settings.vim	/^function! s:suite.config()$/;"	f
s:suite.consistent_n_and_N_direction	nvim/autoload/plugged/incsearch.vim/test/n_and_N.vim	/^function! s:suite.consistent_n_and_N_direction()$/;"	f
s:suite.count_backward	nvim/autoload/plugged/incsearch.vim/test/repetition.vim	/^function! s:suite.count_backward()$/;"	f
s:suite.count_forward	nvim/autoload/plugged/incsearch.vim/test/repetition.vim	/^function! s:suite.count_forward()$/;"	f
s:suite.custom_highlight	nvim/autoload/plugged/incsearch.vim/test/visual_emulation.vim	/^function! s:suite.custom_highlight()$/;"	f
s:suite.cword_from_last_matched_pos	nvim/autoload/plugged/incsearch.vim/test/insert_register.vim	/^function! s:suite.cword_from_last_matched_pos()$/;"	f
s:suite.cword_incsearch	nvim/autoload/plugged/incsearch.vim/test/insert_register.vim	/^function! s:suite.cword_incsearch()$/;"	f
s:suite.cword_incsearch_cli_cursor_middle	nvim/autoload/plugged/incsearch.vim/test/insert_register.vim	/^function! s:suite.cword_incsearch_cli_cursor_middle()$/;"	f
s:suite.cword_incsearch_middle	nvim/autoload/plugged/incsearch.vim/test/insert_register.vim	/^function! s:suite.cword_incsearch_middle()$/;"	f
s:suite.cword_incsearch_middle_word	nvim/autoload/plugged/incsearch.vim/test/insert_register.vim	/^function! s:suite.cword_incsearch_middle_word()$/;"	f
s:suite.cword_noincsearch	nvim/autoload/plugged/incsearch.vim/test/insert_register.vim	/^function! s:suite.cword_noincsearch()$/;"	f
s:suite.default_highlight_will_not_remain	nvim/autoload/plugged/incsearch.vim/test/cancel.vim	/^function! s:suite.default_highlight_will_not_remain()$/;"	f
s:suite.detect_case	nvim/autoload/plugged/incsearch.vim/test/util.vim	/^function! s:suite.detect_case()$/;"	f
s:suite.detect_case_explicit_flag	nvim/autoload/plugged/incsearch.vim/test/util.vim	/^function! s:suite.detect_case_explicit_flag()$/;"	f
s:suite.detect_case_ignore_uppercase_escaped_letters	nvim/autoload/plugged/incsearch.vim/test/util.vim	/^function! s:suite.detect_case_ignore_uppercase_escaped_letters()$/;"	f
s:suite.detect_case_parcent	nvim/autoload/plugged/incsearch.vim/test/util.vim	/^function! s:suite.detect_case_parcent()$/;"	f
s:suite.do_not_show_search_hit_TOP_or_BOTTOM_warning_with_stay	nvim/autoload/plugged/incsearch.vim/test/error_warning_emulation.vim	/^function! s:suite.do_not_show_search_hit_TOP_or_BOTTOM_warning_with_stay()$/;"	f
s:suite.do_not_unfold_after_just_stay	nvim/autoload/plugged/incsearch.vim/test/fold.vim	/^function! s:suite.do_not_unfold_after_just_stay()$/;"	f
s:suite.do_not_unfold_if_foldopen_does_not_contain_search	nvim/autoload/plugged/incsearch.vim/test/fold.vim	/^function! s:suite.do_not_unfold_if_foldopen_does_not_contain_search()$/;"	f
s:suite.do_not_unfold_when_operator_pending	nvim/autoload/plugged/incsearch.vim/test/fold.vim	/^function! s:suite.do_not_unfold_when_operator_pending()$/;"	f
s:suite.emulate_V	nvim/autoload/plugged/incsearch.vim/test/visual_emulation.vim	/^function! s:suite.emulate_V()$/;"	f
s:suite.emulate_V_End	nvim/autoload/plugged/incsearch.vim/test/visual_emulation.vim	/^function! s:suite.emulate_V_End()$/;"	f
s:suite.emulate_ctrl_v	nvim/autoload/plugged/incsearch.vim/test/visual_emulation.vim	/^function! s:suite.emulate_ctrl_v()$/;"	f
s:suite.emulate_ctrl_v_End	nvim/autoload/plugged/incsearch.vim/test/visual_emulation.vim	/^function! s:suite.emulate_ctrl_v_End()$/;"	f
s:suite.emulate_v	nvim/autoload/plugged/incsearch.vim/test/visual_emulation.vim	/^function! s:suite.emulate_v()$/;"	f
s:suite.emulate_v_End	nvim/autoload/plugged/incsearch.vim/test/visual_emulation.vim	/^function! s:suite.emulate_v_End()$/;"	f
s:suite.error_forward_backward	nvim/autoload/plugged/incsearch.vim/test/error_warning_emulation.vim	/^function! s:suite.error_forward_backward()$/;"	f
s:suite.error_stay	nvim/autoload/plugged/incsearch.vim/test/error_warning_emulation.vim	/^function! s:suite.error_stay()$/;"	f
s:suite.exit_stay_does_update_jumplist	nvim/autoload/plugged/incsearch.vim/test/jumplist.vim	/^function! s:suite.exit_stay_does_update_jumplist()$/;"	f
s:suite.exit_stay_works_with_operator_c	nvim/autoload/plugged/incsearch.vim/test/operator_pending_behavior.vim	/^function! s:suite.exit_stay_works_with_operator_c()$/;"	f
s:suite.force_exclusive	nvim/autoload/plugged/incsearch.vim/test/operator_pending_behavior.vim	/^function! s:suite.force_exclusive()$/;"	f
s:suite.forward	nvim/autoload/plugged/incsearch.vim/test/default_behaviors.vim	/^function! s:suite.forward()$/;"	f
s:suite.forward	nvim/autoload/plugged/incsearch.vim/test/jumplist.vim	/^function! s:suite.forward()$/;"	f
s:suite.forward	nvim/autoload/plugged/incsearch.vim/test/visual_behavior.vim	/^function! s:suite.forward()$/;"	f
s:suite.forward_normal	nvim/autoload/plugged/incsearch.vim/test/count.vim	/^function! s:suite.forward_normal()$/;"	f
s:suite.forward_operator_pending	nvim/autoload/plugged/incsearch.vim/test/count.vim	/^function! s:suite.forward_operator_pending()$/;"	f
s:suite.forward_operator_pending_multiply	nvim/autoload/plugged/incsearch.vim/test/count.vim	/^function! s:suite.forward_operator_pending_multiply()$/;"	f
s:suite.forward_pattern	nvim/autoload/plugged/incsearch.vim/test/highlight.vim	/^function! s:suite.forward_pattern()$/;"	f
s:suite.forward_visual	nvim/autoload/plugged/incsearch.vim/test/count.vim	/^function! s:suite.forward_visual()$/;"	f
s:suite.function_works	nvim/autoload/plugged/incsearch.vim/test/autonohlsearch.vim	/^function! s:suite.function_works()$/;"	f
s:suite.get_completed_snippet	nvim/autoload/plugged/neosnippet.vim/test/functions.vim	/^function! s:suite.get_completed_snippet() abort$/;"	f
s:suite.get_in_paren	nvim/autoload/plugged/neosnippet.vim/test/functions.vim	/^function! s:suite.get_in_paren() abort$/;"	f
s:suite.get_pattern_V	nvim/autoload/plugged/incsearch.vim/test/visual_emulation.vim	/^function! s:suite.get_pattern_V()$/;"	f
s:suite.get_pattern_ctrl_v	nvim/autoload/plugged/incsearch.vim/test/visual_emulation.vim	/^function! s:suite.get_pattern_ctrl_v()$/;"	f
s:suite.get_pattern_v	nvim/autoload/plugged/incsearch.vim/test/visual_emulation.vim	/^function! s:suite.get_pattern_v()$/;"	f
s:suite.handle_keymapping_option	nvim/autoload/plugged/incsearch.vim/test/default_settings.vim	/^function! s:suite.handle_keymapping_option()$/;"	f
s:suite.handle_shortmess	nvim/autoload/plugged/incsearch.vim/test/error_warning_emulation.vim	/^function! s:suite.handle_shortmess()$/;"	f
s:suite.highlight	nvim/autoload/plugged/incsearch.vim/test/default_settings.vim	/^function! s:suite.highlight()$/;"	f
s:suite.highlight_will_not_remain	nvim/autoload/plugged/incsearch.vim/test/cancel.vim	/^function! s:suite.highlight_will_not_remain()$/;"	f
s:suite.hlsearch	nvim/autoload/plugged/incsearch.vim/test/highlight.vim	/^function! s:suite.hlsearch()$/;"	f
s:suite.inc_last_pattern	nvim/autoload/plugged/incsearch.vim/test/incremental_next_prev.vim	/^function! s:suite.inc_last_pattern()$/;"	f
s:suite.inc_last_pattern_offset	nvim/autoload/plugged/incsearch.vim/test/incremental_next_prev.vim	/^function! s:suite.inc_last_pattern_offset()$/;"	f
s:suite.inc_last_pattern_reset	nvim/autoload/plugged/incsearch.vim/test/incremental_next_prev.vim	/^function! s:suite.inc_last_pattern_reset()$/;"	f
s:suite.inc_next_backward	nvim/autoload/plugged/incsearch.vim/test/incremental_next_prev.vim	/^function! s:suite.inc_next_backward()$/;"	f
s:suite.inc_next_forward	nvim/autoload/plugged/incsearch.vim/test/incremental_next_prev.vim	/^function! s:suite.inc_next_forward()$/;"	f
s:suite.inc_next_stay	nvim/autoload/plugged/incsearch.vim/test/incremental_next_prev.vim	/^function! s:suite.inc_next_stay()$/;"	f
s:suite.inc_prev_backward	nvim/autoload/plugged/incsearch.vim/test/incremental_next_prev.vim	/^function! s:suite.inc_prev_backward()$/;"	f
s:suite.inc_prev_forward	nvim/autoload/plugged/incsearch.vim/test/incremental_next_prev.vim	/^function! s:suite.inc_prev_forward()$/;"	f
s:suite.inc_prev_stay	nvim/autoload/plugged/incsearch.vim/test/incremental_next_prev.vim	/^function! s:suite.inc_prev_stay()$/;"	f
s:suite.incremental_highlight	nvim/autoload/plugged/incsearch.vim/test/highlight.vim	/^function! s:suite.incremental_highlight()$/;"	f
s:suite.incremental_separate_highlight	nvim/autoload/plugged/incsearch.vim/test/highlight.vim	/^function! s:suite.incremental_separate_highlight()$/;"	f
s:suite.is_duplicate_helptags	nvim/autoload/plugged/incsearch.vim/test/default_settings.vim	/^function! s:suite.is_duplicate_helptags()$/;"	f
s:suite.loaded	nvim/autoload/plugged/incsearch.vim/test/default_settings.vim	/^function! s:suite.loaded()$/;"	f
s:suite.mappings	nvim/autoload/plugged/incsearch.vim/test/default_settings.vim	/^function! s:suite.mappings()$/;"	f
s:suite.match_at_cursor_pos_with_nowrapscan	nvim/autoload/plugged/incsearch.vim/test/incremental_next_prev.vim	/^function! s:suite.match_at_cursor_pos_with_nowrapscan() abort$/;"	f
s:suite.match_at_cursor_pos_with_nowrapscan_backward	nvim/autoload/plugged/incsearch.vim/test/incremental_next_prev.vim	/^function! s:suite.match_at_cursor_pos_with_nowrapscan_backward() abort$/;"	f
s:suite.module_management	nvim/autoload/plugged/incsearch.vim/test/module.vim	/^function! s:suite.module_management()$/;"	f
s:suite.nolsearch_with_cursormove_0	nvim/autoload/plugged/incsearch.vim/test/autonohlsearch.vim	/^function! s:suite.nolsearch_with_cursormove_0()$/;"	f
s:suite.nolsearch_with_cursormove_1	nvim/autoload/plugged/incsearch.vim/test/autonohlsearch.vim	/^function! s:suite.nolsearch_with_cursormove_1()$/;"	f
s:suite.nolsearch_with_cursormove_2	nvim/autoload/plugged/incsearch.vim/test/autonohlsearch.vim	/^function! s:suite.nolsearch_with_cursormove_2()$/;"	f
s:suite.nolsearch_with_insert_enter	nvim/autoload/plugged/incsearch.vim/test/autonohlsearch.vim	/^function! s:suite.nolsearch_with_insert_enter()$/;"	f
s:suite.nomagic_as_a_pattern	nvim/autoload/plugged/incsearch.vim/test/nomagic.vim	/^function! s:suite.nomagic_as_a_pattern()$/;"	f
s:suite.nowrapscan_backward_error	nvim/autoload/plugged/incsearch.vim/test/error_warning_emulation.vim	/^function! s:suite.nowrapscan_backward_error()$/;"	f
s:suite.nowrapscan_forward_error	nvim/autoload/plugged/incsearch.vim/test/error_warning_emulation.vim	/^function! s:suite.nowrapscan_forward_error()$/;"	f
s:suite.nowrapscan_scroll_reverse_move_cursor_to_the_last_pattern	nvim/autoload/plugged/incsearch.vim/test/scroll.vim	/^function! s:suite.nowrapscan_scroll_reverse_move_cursor_to_the_last_pattern()$/;"	f
s:suite.nowrapscan_stay_error	nvim/autoload/plugged/incsearch.vim/test/error_warning_emulation.vim	/^function! s:suite.nowrapscan_stay_error()$/;"	f
s:suite.offset	nvim/autoload/plugged/incsearch.vim/test/default_behaviors.vim	/^function! s:suite.offset()$/;"	f
s:suite.operator_c	nvim/autoload/plugged/incsearch.vim/test/operator_pending_behavior.vim	/^function! s:suite.operator_c()$/;"	f
s:suite.over_win_height	nvim/autoload/plugged/incsearch.vim/test/visual_emulation.vim	/^function! s:suite.over_win_height()$/;"	f
s:suite.parse_pattern	nvim/autoload/plugged/incsearch.vim/test/util.vim	/^function! s:suite.parse_pattern()$/;"	f
s:suite.preserve_nohlsearch	nvim/autoload/plugged/incsearch.vim/test/highlight.vim	/^function! s:suite.preserve_nohlsearch() abort$/;"	f
s:suite.preserve_vhlsearch_with_esc	nvim/autoload/plugged/incsearch.vim/test/cancel.vim	/^function! s:suite.preserve_vhlsearch_with_esc()$/;"	f
s:suite.quote_register	nvim/autoload/plugged/incsearch.vim/test/register.vim	/^function! s:suite.quote_register()$/;"	f
s:suite.repetition_backward	nvim/autoload/plugged/incsearch.vim/test/repetition.vim	/^function! s:suite.repetition_backward()$/;"	f
s:suite.repetition_backward_change	nvim/autoload/plugged/incsearch.vim/test/repetition.vim	/^function! s:suite.repetition_backward_change()$/;"	f
s:suite.repetition_forward	nvim/autoload/plugged/incsearch.vim/test/repetition.vim	/^function! s:suite.repetition_forward()$/;"	f
s:suite.repetition_forward_change	nvim/autoload/plugged/incsearch.vim/test/repetition.vim	/^function! s:suite.repetition_forward_change()$/;"	f
s:suite.repetition_stay_change	nvim/autoload/plugged/incsearch.vim/test/repetition.vim	/^function! s:suite.repetition_stay_change()$/;"	f
s:suite.scroll_b_works	nvim/autoload/plugged/incsearch.vim/test/scroll.vim	/^function! s:suite.scroll_b_works()$/;"	f
s:suite.scroll_f_works	nvim/autoload/plugged/incsearch.vim/test/scroll.vim	/^function! s:suite.scroll_f_works()$/;"	f
s:suite.search	nvim/autoload/plugged/incsearch.vim/test/insert_register.vim	/^function! s:suite.search()$/;"	f
s:suite.separate_highlight_with_searching	nvim/autoload/plugged/incsearch.vim/test/highlight.vim	/^function! s:suite.separate_highlight_with_searching()$/;"	f
s:suite.stay	nvim/autoload/plugged/incsearch.vim/test/default_behaviors.vim	/^function! s:suite.stay()$/;"	f
s:suite.stay	nvim/autoload/plugged/incsearch.vim/test/repetition.vim	/^function! s:suite.stay()$/;"	f
s:suite.stay	nvim/autoload/plugged/incsearch.vim/test/visual_behavior.vim	/^function! s:suite.stay()$/;"	f
s:suite.stay_cancell_operator_c	nvim/autoload/plugged/incsearch.vim/test/operator_pending_behavior.vim	/^function! s:suite.stay_cancell_operator_c()$/;"	f
s:suite.stay_does_not_update_jumplist	nvim/autoload/plugged/incsearch.vim/test/jumplist.vim	/^function! s:suite.stay_does_not_update_jumplist()$/;"	f
s:suite.stay_offset	nvim/autoload/plugged/incsearch.vim/test/jumplist.vim	/^function! s:suite.stay_offset()$/;"	f
s:suite.test_autoload_function	nvim/autoload/plugged/incsearch.vim/test/default_settings.vim	/^function! s:suite.test_autoload_function()$/;"	f
s:suite.two_error_E383_and_E367	nvim/autoload/plugged/incsearch.vim/test/error_warning_emulation.vim	/^function! s:suite.two_error_E383_and_E367()$/;"	f
s:suite.unexpected_mode	nvim/autoload/plugged/incsearch.vim/test/visual_emulation.vim	/^function! s:suite.unexpected_mode()$/;"	f
s:suite.unfold_after_exit_stay	nvim/autoload/plugged/incsearch.vim/test/fold.vim	/^function! s:suite.unfold_after_exit_stay()$/;"	f
s:suite.unfold_after_exit_stay_offset	nvim/autoload/plugged/incsearch.vim/test/fold.vim	/^function! s:suite.unfold_after_exit_stay_offset()$/;"	f
s:suite.unfold_after_search_backward	nvim/autoload/plugged/incsearch.vim/test/fold.vim	/^function! s:suite.unfold_after_search_backward()$/;"	f
s:suite.unfold_after_search_forward_backward	nvim/autoload/plugged/incsearch.vim/test/fold.vim	/^function! s:suite.unfold_after_search_forward_backward()$/;"	f
s:suite.unfold_after_search_forward_offset	nvim/autoload/plugged/incsearch.vim/test/fold.vim	/^function! s:suite.unfold_after_search_forward_offset()$/;"	f
s:suite.unfold_if_foldopen_does_contain_all	nvim/autoload/plugged/incsearch.vim/test/fold.vim	/^function! s:suite.unfold_if_foldopen_does_contain_all()$/;"	f
s:suite.unnamed_register	nvim/autoload/plugged/incsearch.vim/test/register.vim	/^function! s:suite.unnamed_register()$/;"	f
s:suite.update_highlight_on_colorscheme	nvim/autoload/plugged/incsearch.vim/test/visual_emulation.vim	/^function! s:suite.update_highlight_on_colorscheme()$/;"	f
s:suite.warning_backward	nvim/autoload/plugged/incsearch.vim/test/error_warning_emulation.vim	/^function! s:suite.warning_backward()$/;"	f
s:suite.warning_forward	nvim/autoload/plugged/incsearch.vim/test/error_warning_emulation.vim	/^function! s:suite.warning_forward()$/;"	f
s:suite.work_with_other_search_mappings	nvim/autoload/plugged/incsearch.vim/test/autonohlsearch.vim	/^function! s:suite.work_with_other_search_mappings()$/;"	f
s:suite.work_with_search	nvim/autoload/plugged/incsearch.vim/test/autonohlsearch.vim	/^function! s:suite.work_with_search()$/;"	f
s:suite.work_with_search_offset	nvim/autoload/plugged/incsearch.vim/test/autonohlsearch.vim	/^function! s:suite.work_with_search_offset()$/;"	f
s:suite.works_with_nomagic	nvim/autoload/plugged/incsearch.vim/test/nomagic.vim	/^function! s:suite.works_with_nomagic()$/;"	f
s:suite.works_with_nomagic_stay	nvim/autoload/plugged/incsearch.vim/test/nomagic.vim	/^function! s:suite.works_with_nomagic_stay()$/;"	f
s:suite.wrapscan_scroll_reverse__move_cursor	nvim/autoload/plugged/incsearch.vim/test/scroll.vim	/^function! s:suite.wrapscan_scroll_reverse__move_cursor()$/;"	f
s:suitePerlSymbol	nvim/autoload/plugged/vim-devicons/test/filetype.vim	/^function! s:suitePerlSymbol()$/;"	f
s:super	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:super(sub, ...) abort "{{{$/;"	f
s:supercall	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank/Schedule.vim	/^function! s:supercall(sub, supername, funcname) abort "{{{$/;"	f
s:surroundings	nvim/autoload/plugged/vim-commentary/plugin/commentary.vim	/^function! s:surroundings() abort$/;"	f
s:swap	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/Dict.vim	/^function! s:swap(dict) abort$/;"	f
s:switch_buffer	nvim/autoload/plugged/vim-buftabline/plugin/buftabline.vim	/^function! s:switch_buffer(bufnum, clicks, button, mod)$/;"	f
s:switch_highlight	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^function! s:switch_highlight(id) abort "{{{$/;"	f
s:switch_in	nvim/autoload/plug.vim	/^function! s:switch_in()$/;"	f
s:switch_out	nvim/autoload/plug.vim	/^function! s:switch_out(...)$/;"	f
s:symbol	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:symbol = get(g:, 'airline#extensions#whitespace#symbol', g:airline_symbols.whitespace)$/;"	v
s:syntax	nvim/autoload/plug.vim	/^function! s:syntax()$/;"	f
s:system	nvim/autoload/plug.vim	/^function! s:system(cmd, ...)$/;"	f
s:system	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Process.vim	/^function! s:system(str, ...) abort$/;"	f
s:system_chomp	nvim/autoload/plug.vim	/^function! s:system_chomp(...)$/;"	f
s:t_funcref	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Buffer.vim	/^let s:t_funcref = type(function('tr'))$/;"	v
s:t_number	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Buffer.vim	/^let s:t_number = type(0)$/;"	v
s:t_string	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Buffer.vim	/^let s:t_string = type('')$/;"	v
s:tab_l_bg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:tab_l_bg = s:palette.bg4$/;"	v
s:tab_l_fg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:tab_l_fg = s:palette.fg$/;"	v
s:tab_label_bg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:tab_label_bg = s:palette.orange$/;"	v
s:tab_label_fg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:tab_label_fg = s:palette.bg0$/;"	v
s:tab_mid_bg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:tab_mid_bg = s:palette.bg1$/;"	v
s:tab_mid_fg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:tab_mid_fg = s:palette.fg$/;"	v
s:tab_middle_bg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:tab_middle_bg = s:palette.bg1$/;"	v
s:tab_middle_fg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:tab_middle_fg = s:palette.fg$/;"	v
s:tab_min_count	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^let s:tab_min_count = get(g:, 'airline#extensions#tabline#tab_min_count', 0)$/;"	v
s:tab_mod_bg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:tab_mod_bg = s:palette.bg_blue$/;"	v
s:tab_mod_fg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:tab_mod_fg = s:palette.bg0$/;"	v
s:tab_r_bg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:tab_r_bg = s:palette.bg4$/;"	v
s:tab_r_fg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:tab_r_fg = s:palette.red$/;"	v
s:tab_sel_bg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:tab_sel_bg = s:palette.bg_red$/;"	v
s:tab_sel_bg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:tab_sel_bg = s:palette.bg_red$/;"	v
s:tab_sel_fg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:tab_sel_fg = s:palette.bg0$/;"	v
s:tab_sel_fg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:tab_sel_fg = s:palette.bg0$/;"	v
s:tab_type_bg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:tab_type_bg = s:palette.purple$/;"	v
s:tab_type_fg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:tab_type_fg = s:palette.bg0$/;"	v
s:tabline_evaluated_length	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! s:tabline_evaluated_length(tabline)$/;"	f
s:tablineat	nvim/autoload/plugged/vim-buftabline/plugin/buftabline.vim	/^let s:tablineat = has('tablineat')$/;"	v
s:taboo	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:taboo = get(g:, 'airline#extensions#taboo#enabled', 1) && get(g:, 'loaded_taboo', 0)$/;"	v
s:tabpagewinnr	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Gift.vim	/^function! s:tabpagewinnr(...)$/;"	f
s:tabpagewinnr	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Gift/Window.vim	/^function! s:tabpagewinnr(nr)$/;"	f
s:tabpagewinnr_list	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Gift.vim	/^function! s:tabpagewinnr_list()$/;"	f
s:tabpagewinnr_list	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Gift/Window.vim	/^function! s:tabpagewinnr_list()$/;"	f
s:tabws	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:tabws = get(g:, 'tabws_loaded', 0)$/;"	v
s:tags_sink	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:tags_sink(lines)$/;"	f
s:take_while	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:take_while(f, xs) abort$/;"	f
s:take_while	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:take_while(f, xs) abort$/;"	f
s:term_bg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:term_bg = s:palette.bg1$/;"	v
s:term_fg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:term_fg = s:palette.fg$/;"	v
s:terminal	nvim/autoload/plugged/sonokai/colors/sonokai.vim	/^  let s:terminal = {$/;"	v
s:terminal_l1_bg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:terminal_l1_bg = s:palette.bg_red$/;"	v
s:terminal_l1_fg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:terminal_l1_fg = s:palette.bg0$/;"	v
s:terminal_l2_bg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:terminal_l2_bg = s:palette.bg4$/;"	v
s:terminal_l2_fg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:terminal_l2_fg = s:palette.fg$/;"	v
s:terminal_middle_bg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:terminal_middle_bg = s:palette.bg1$/;"	v
s:terminal_middle_fg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:terminal_middle_fg = s:palette.fg$/;"	v
s:terminal_r1_bg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:terminal_r1_bg = s:palette.bg_red$/;"	v
s:terminal_r1_fg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:terminal_r1_fg = s:palette.bg0$/;"	v
s:terminal_r2_bg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:terminal_r2_bg = s:palette.bg4$/;"	v
s:terminal_r2_fg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:terminal_r2_fg = s:palette.fg$/;"	v
s:termname	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/term.vim	/^function! s:termname(bufnr) abort$/;"	f
s:tests	nvim/autoload/plugged/vim-rooter/test/runner.vim	/^  let s:tests = filter(s:tests, 'v:val =~ argv(1)')$/;"	v
s:tests	nvim/autoload/plugged/vim-rooter/test/runner.vim	/^let s:tests = split(substitute(@q, 'function \\(\\k*()\\)', '\\1', 'g'))$/;"	v
s:testset	nvim/autoload/plugged/vim-highlightedyank/test/test-highlightedyank.vim	/^let s:testset = [$/;"	v
s:textobject	nvim/autoload/plugged/vim-commentary/plugin/commentary.vim	/^function! s:textobject(inner) abort$/;"	f
s:throw	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Exception.vim	/^function! s:throw(exp, where)$/;"	f
s:throw_cmd	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Exception.vim	/^function! s:throw_cmd(exp, where)$/;"	f
s:tick	nvim/autoload/plug.vim	/^function! s:tick()$/;"	f
s:timeDay	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^    let s:timeDay  = '1 d'$/;"	v
s:timeDay	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^    let s:timeDay  = '1 day ago'$/;"	v
s:timeDays	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^    let s:timeDays = ' d'$/;"	v
s:timeDays	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^    let s:timeDays = ' days ago'$/;"	v
s:timeHour	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^    let s:timeHour  = '1 h'$/;"	v
s:timeHour	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^    let s:timeHour  = '1 hour ago'$/;"	v
s:timeHours	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^    let s:timeHours = ' h'$/;"	v
s:timeHours	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^    let s:timeHours = ' hours ago'$/;"	v
s:timeMinute	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^    let s:timeMinute  = '1 m'$/;"	v
s:timeMinute	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^    let s:timeMinute  = '1 minute ago'$/;"	v
s:timeMinutes	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^    let s:timeMinutes = ' m'$/;"	v
s:timeMinutes	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^    let s:timeMinutes = ' minutes ago'$/;"	v
s:timeOriginal	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^    let s:timeOriginal = 'Orig'$/;"	v
s:timeOriginal	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^    let s:timeOriginal = 'Original'$/;"	v
s:timeSecond	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^    let s:timeSecond  = '1 s'$/;"	v
s:timeSecond	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^    let s:timeSecond = '1 second ago'$/;"	v
s:timeSeconds	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^    let s:timeSeconds = ' s'$/;"	v
s:timeSeconds	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^    let s:timeSeconds = ' seconds ago'$/;"	v
s:timer	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank.vim	/^let s:timer = -1$/;"	v
s:tmuxline_snapshot_file	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tmuxline.vim	/^let s:tmuxline_snapshot_file = get(g:, 'airline#extensions#tmuxline#snapshot_file', '')$/;"	v
s:to_a	nvim/autoload/plug.vim	/^function! s:to_a(v)$/;"	f
s:to_fullpath	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Gift.vim	/^function! s:to_fullpath(filename)$/;"	f
s:to_s	nvim/autoload/plug.vim	/^function! s:to_s(v)$/;"	f
s:to_string	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/InsertRegister.vim	/^function! s:to_string(expr)$/;"	f
s:toggle	nvim/autoload/plugged/vim-rooter/plugin/rooter.vim	/^function! s:toggle()$/;"	f
s:toggle_off	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! s:toggle_off()$/;"	f
s:toggle_on	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! s:toggle_on()$/;"	f
s:toggle_window	nvim/autoload/plugged/minimap.vim/autoload/minimap/vim.vim	/^function! s:toggle_window() abort$/;"	f
s:transpile	nvim/autoload/plugged/vim-buftabline/plugin/buftabline.vim	/^	function s:transpile()$/;"	f
s:triggers	nvim/autoload/plug.vim	/^let s:triggers = get(s:, 'triggers', {})$/;"	v
s:trim	nvim/autoload/plug.vim	/^function! s:trim(str)$/;"	f
s:trim	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:trim(str) abort$/;"	f
s:trim_end	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:trim_end(str) abort$/;"	f
s:trim_start	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:trim_start(str) abort$/;"	f
s:truncate	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:truncate(str, width) abort$/;"	f
s:truncate	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:truncate(str, width) abort$/;"	f
s:truncate	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:truncate(str, width) abort$/;"	f
s:truncate_skipping	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^function! s:truncate_skipping(str, max, footer_width, separator) abort$/;"	f
s:truncate_skipping	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:truncate_skipping(str, max, footer_width, separator) abort$/;"	f
s:truncate_skipping	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:truncate_skipping(str, max, footer_width, separator) abort$/;"	f
s:type_names	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Type.vim	/^let s:type_names = {$/;"	v
s:types	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Type.vim	/^let s:types = {$/;"	v
s:uname	nvim/autoload/plugged/vim-markdown-preview/plugin/vim-markdown-preview.vim	/^  let s:uname = system("uname")$/;"	v
s:undotree	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^let s:undotree = s:new(s:panel)$/;"	v
s:undotree.Action	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.Action(action) abort$/;"	f
s:undotree.ActionClearHistory	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.ActionClearHistory() abort$/;"	f
s:undotree.ActionClose	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.ActionClose() abort$/;"	f
s:undotree.ActionDiffToggle	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.ActionDiffToggle() abort$/;"	f
s:undotree.ActionEnter	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.ActionEnter() abort$/;"	f
s:undotree.ActionFocusTarget	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.ActionFocusTarget() abort$/;"	f
s:undotree.ActionHelp	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.ActionHelp() abort$/;"	f
s:undotree.ActionInTarget	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.ActionInTarget(cmd) abort$/;"	f
s:undotree.ActionNextSavedState	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.ActionNextSavedState() abort$/;"	f
s:undotree.ActionNextState	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.ActionNextState() abort$/;"	f
s:undotree.ActionPreviousSavedState	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.ActionPreviousSavedState() abort$/;"	f
s:undotree.ActionPreviousState	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.ActionPreviousState() abort$/;"	f
s:undotree.ActionRedo	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.ActionRedo() abort$/;"	f
s:undotree.ActionTimestampToggle	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.ActionTimestampToggle() abort$/;"	f
s:undotree.ActionUndo	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.ActionUndo() abort$/;"	f
s:undotree.AppendHelp	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.AppendHelp() abort$/;"	f
s:undotree.BindAu	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.BindAu() abort$/;"	f
s:undotree.BindKey	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.BindKey() abort$/;"	f
s:undotree.ConvertInput	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.ConvertInput(updatetree) abort$/;"	f
s:undotree.Draw	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.Draw() abort$/;"	f
s:undotree.GetStatusLine	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.GetStatusLine() abort$/;"	f
s:undotree.Index2Screen	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.Index2Screen(index) abort$/;"	f
s:undotree.Init	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.Init() abort$/;"	f
s:undotree.MarkSeqs	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.MarkSeqs() abort$/;"	f
s:undotree.Render	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.Render() abort$/;"	f
s:undotree.Screen2Index	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.Screen2Index(line) abort$/;"	f
s:undotree.SetTargetFocus	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.SetTargetFocus() abort$/;"	f
s:undotree.Show	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.Show() abort$/;"	f
s:undotree.Toggle	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.Toggle() abort$/;"	f
s:undotree.Update	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.Update() abort$/;"	f
s:undotree.UpdateDiff	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree.UpdateDiff() abort$/;"	f
s:undotree._parseNode	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotree._parseNode(in,out) abort$/;"	f
s:undotreeAction	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! s:undotreeAction(action) abort$/;"	f
s:unescape	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:unescape(str, chars) abort$/;"	f
s:unescape_pattern	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:unescape_pattern(str) abort$/;"	f
s:unescape_question_for_backward	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/over/modules/incsearch.vim	/^function! s:unescape_question_for_backward(pattern) abort$/;"	f
s:uniq	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:uniq(list) abort$/;"	f
s:uniq	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:uniq(list) abort$/;"	f
s:uniq_by	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:uniq_by(list, f) abort$/;"	f
s:uniq_by	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:uniq_by(list, f) abort$/;"	f
s:uniq_counter	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Gift/Tabpage.vim	/^let s:uniq_counter = 0$/;"	v
s:uniq_counter	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Gift/Window.vim	/^	let s:uniq_counter = 0$/;"	v
s:uniq_nr	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Gift/Tabpage.vim	/^function! s:uniq_nr(...)$/;"	f
s:uniq_nr	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Gift/Window.vim	/^function! s:uniq_nr(...)$/;"	f
s:uniq_tabpagenr	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Gift.vim	/^function! s:uniq_tabpagenr(...)$/;"	f
s:uniq_winnr	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Gift.vim	/^function! s:uniq_winnr(...)$/;"	f
s:uniq_winnr_list	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Gift.vim	/^function! s:uniq_winnr_list(...)$/;"	f
s:unix_redir	nvim/autoload/plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^let s:unix_redir = (&shellredir =~# '%s') ? &shellredir : &shellredir . ' %s'$/;"	v
s:unix_redir	nvim/autoload/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:unix_redir = (&shellredir =~# '%s') ? &shellredir : &shellredir . ' %s'$/;"	v
s:unload	nvim/autoload/plugged/incsearch.vim/autoload/vital/incsearch.vim	/^function! s:unload() abort dict$/;"	f
s:unload	nvim/autoload/plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^function! s:unload() abort dict$/;"	f
s:unload	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^function! s:unload() abort dict$/;"	f
s:unmapping	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Keymapping.vim	/^function! s:unmapping(keymapping, key, ...)$/;"	f
s:unshift	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:unshift(list, val) abort$/;"	f
s:unshift	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:unshift(list, val) abort$/;"	f
s:untracked_jobs	nvim/autoload/plugged/vim-airline/autoload/airline/async.vim	/^let s:untracked_jobs = {}$/;"	v
s:untracked_output	nvim/autoload/plugged/vim-airline/autoload/airline/async.vim	/^function! s:untracked_output(dict, buf)$/;"	f
s:update	nvim/autoload/plug.vim	/^function! s:update(force, names)$/;"	f
s:update_branch	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:update_branch()$/;"	f
s:update_finish	nvim/autoload/plug.vim	/^function! s:update_finish()$/;"	f
s:update_git_branch	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:update_git_branch()$/;"	f
s:update_hg_branch	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:update_hg_branch()$/;"	f
s:update_highlight	nvim/autoload/plugged/minimap.vim/autoload/minimap/vim.vim	/^function! s:update_highlight() abort$/;"	f
s:update_impl	nvim/autoload/plug.vim	/^function! s:update_impl(pull, force, args) abort$/;"	f
s:update_in_progress	nvim/autoload/plugged/vim-gutentags/autoload/gutentags.vim	/^    let s:update_in_progress[module] = []$/;"	v
s:update_in_progress	nvim/autoload/plugged/vim-gutentags/autoload/gutentags.vim	/^let s:update_in_progress = {}$/;"	v
s:update_python	nvim/autoload/plug.vim	/^function! s:update_python()$/;"	f
s:update_queue	nvim/autoload/plugged/vim-gutentags/autoload/gutentags.vim	/^    let s:update_queue[module] = []$/;"	v
s:update_queue	nvim/autoload/plugged/vim-gutentags/autoload/gutentags.vim	/^let s:update_queue = {}$/;"	v
s:update_ruby	nvim/autoload/plug.vim	/^function! s:update_ruby()$/;"	f
s:update_tabline	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! s:update_tabline(forceit)$/;"	f
s:update_tags	nvim/autoload/plugged/vim-gutentags/autoload/gutentags.vim	/^function! s:update_tags(bufno, module, write_mode, queue_mode) abort$/;"	f
s:update_untracked	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:update_untracked()$/;"	f
s:update_vim	nvim/autoload/plug.vim	/^function! s:update_vim()$/;"	f
s:update_wordcount	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^function! s:update_wordcount(force_update)$/;"	f
s:upgrade	nvim/autoload/plug.vim	/^function! s:upgrade()$/;"	f
s:upgrade_specs	nvim/autoload/plug.vim	/^function! s:upgrade_specs()$/;"	f
s:urlEncode	nvim/autoload/plugged/vim-carbon-now-sh/plugin/vim-carbon-now-sh.vim	/^function! s:urlEncode(string) "{{{$/;"	f
s:valid_dir	nvim/autoload/plugged/vim-airline/autoload/airline/async.vim	/^function! s:valid_dir(dir)$/;"	f
s:variable	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Guard.vim	/^let s:variable = {}$/;"	v
s:variable.restore	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Guard.vim	/^function! s:variable.restore() abort$/;"	f
s:vcs_config	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/branch.vim	/^let s:vcs_config = {$/;"	v
s:verbosefiles	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Palette/Capture.vim	/^let s:verbosefiles = []$/;"	v
s:version	nvim/autoload/plugged/vim-devicons/plugin/webdevicons.vim	/^let s:version = '0.11.0'$/;"	v
s:version_requirement	nvim/autoload/plug.vim	/^function! s:version_requirement(val, min)$/;"	f
s:version_requirement	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:version_requirement(val, min)$/;"	f
s:vim8	nvim/autoload/plug.vim	/^let s:vim8 = has('patch-8.0.0039') && exists('*job_start')$/;"	v
s:vim_cmap	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/cli.vim	/^let s:vim_cmap = s:KeyMapping.make_vim_cmdline_mapping()$/;"	v
s:vim_cmap._condition	nvim/autoload/plugged/incsearch.vim/autoload/incsearch/cli.vim	/^function! s:vim_cmap._condition() abort$/;"	f
s:vim_cmdline_mapping	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/KeyMapping.vim	/^let s:vim_cmdline_mapping = {$/;"	v
s:vim_cmdline_mapping.keymapping	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/KeyMapping.vim	/^function! s:vim_cmdline_mapping.keymapping(cmdline)$/;"	f
s:vim_cmdline_mapping.on_enter	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/KeyMapping.vim	/^function! s:vim_cmdline_mapping.on_enter(cmdline)$/;"	f
s:vim_cmdline_mapping.on_update	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/KeyMapping.vim	/^function! s:vim_cmdline_mapping.on_update(cmdline)$/;"	f
s:visual_l1_bg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:visual_l1_bg = s:palette.purple$/;"	v
s:visual_l1_fg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:visual_l1_fg = s:palette.bg0$/;"	v
s:visual_l2_bg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:visual_l2_bg = s:palette.bg4$/;"	v
s:visual_l2_fg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:visual_l2_fg = s:palette.fg$/;"	v
s:visual_mid_bg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:visual_mid_bg = s:palette.bg1$/;"	v
s:visual_mid_fg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:visual_mid_fg = s:palette.fg$/;"	v
s:visual_middle_bg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:visual_middle_bg = s:palette.bg1$/;"	v
s:visual_middle_fg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:visual_middle_fg = s:palette.fg$/;"	v
s:visual_mod_bg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:visual_mod_bg = s:palette.bg1$/;"	v
s:visual_mod_fg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:visual_mod_fg = s:palette.purple$/;"	v
s:visual_r1_bg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:visual_r1_bg = s:palette.purple$/;"	v
s:visual_r1_fg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:visual_r1_fg = s:palette.bg0$/;"	v
s:visual_r2_bg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:visual_r2_bg = s:palette.bg4$/;"	v
s:visual_r2_fg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:visual_r2_fg = s:palette.fg$/;"	v
s:visual_side_bg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:visual_side_bg = s:palette.purple$/;"	v
s:visual_side_fg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:visual_side_fg = s:palette.bg0$/;"	v
s:visual_sub_bg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:visual_sub_bg = s:palette.bg4$/;"	v
s:visual_sub_fg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:visual_sub_fg = s:palette.fg$/;"	v
s:visualmode2motionwise	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^function! s:visualmode2motionwise(visualmode) abort "{{{$/;"	f
s:vital_base_dir	nvim/autoload/plugged/incsearch.vim/autoload/vital/incsearch.vim	/^let s:vital_base_dir = expand('<sfile>:h')$/;"	v
s:vital_base_dir	nvim/autoload/plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^let s:vital_base_dir = expand('<sfile>:h')$/;"	v
s:vital_base_dir	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^let s:vital_base_dir = expand('<sfile>:h')$/;"	v
s:vital_files	nvim/autoload/plugged/incsearch.vim/autoload/vital/incsearch.vim	/^function! s:vital_files() abort$/;"	f
s:vital_files	nvim/autoload/plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^function! s:vital_files() abort$/;"	f
s:vital_files	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^function! s:vital_files() abort$/;"	f
s:vname	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Commandline/Modules/ExceptionMessage.vim	/^let s:vname = expand("<sfile>:h:h:h:h:t")$/;"	v
s:vname	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Over/Exception.vim	/^let s:vname = expand("<sfile>:h:h:t")$/;"	v
s:wait_for_input	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^function! s:wait_for_input(highlight, duration) abort  "{{{$/;"	f
s:warn	nvim/autoload/plug.vim	/^function! s:warn(cmd, msg)$/;"	f
s:warn	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:warn(message)$/;"	f
s:warn	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Vim/Message.vim	/^function! s:warn(msg) abort$/;"	f
s:warned	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:warned = 0$/;"	v
s:warning_bg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:warning_bg = s:palette.yellow$/;"	v
s:warning_fg	nvim/autoload/plugged/sonokai/autoload/airline/themes/sonokai.vim	/^let s:warning_fg = s:palette.bg0$/;"	v
s:warning_symbol	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/coc.vim	/^let s:warning_symbol = get(g:, 'airline#extensions#coc#warning_symbol', 'W:')$/;"	v
s:warning_symbol	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^let s:warning_symbol = get(g:, 'airline#extensions#languageclient#warning_symbol', 'W:')$/;"	v
s:warning_symbol	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/neomake.vim	/^let s:warning_symbol = get(g:, 'airline#extensions#neomake#warning_symbol', 'W:')$/;"	v
s:warning_symbol	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^let s:warning_symbol = get(g:, 'airline#extensions#syntastic#warning_symbol', 'W:')$/;"	v
s:warning_symbol	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/ycm.vim	/^let s:warning_symbol = get(g:, 'airline#extensions#ycm#warning_symbol', 'W:')$/;"	v
s:warningbg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:warningbg = s:palette.yellow$/;"	v
s:warningfg	nvim/autoload/plugged/sonokai/autoload/lightline/colorscheme/sonokai.vim	/^let s:warningfg = s:palette.bg0$/;"	v
s:wcswidth	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Prelude.vim	/^  function! s:wcswidth(str) abort$/;"	f
s:wcswidth	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^  function! s:wcswidth(str) abort$/;"	f
s:wcswidth	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^  let s:wcswidth = function('strwidth')$/;"	v
s:wcswidth	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^  function! s:wcswidth(str) abort$/;"	f
s:whitespace_chars	nvim/autoload/plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^let s:whitespace_chars='\\u0020\\u00a0\\u1680\\u180e\\u2000-\\u200b\\u202f\\u205f\\u3000\\ufeff'$/;"	v
s:wide	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:wide = 120$/;"	v
s:wildignores_options_path	nvim/autoload/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:wildignores_options_path = ''$/;"	v
s:win_enter_handler	nvim/autoload/plugged/minimap.vim/autoload/minimap/vim.vim	/^function! s:win_enter_handler() abort$/;"	f
s:win_getid	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^  function! s:win_getid(...) abort$/;"	f
s:win_getid	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^  let s:win_getid = function('win_getid')$/;"	v
s:win_gotoid	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlight.vim	/^  function! s:win_gotoid(id) abort$/;"	f
s:windo	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Coaster/Window.vim	/^function! s:windo(func, args, ...)$/;"	f
s:windows_sink	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:windows_sink(line)$/;"	f
s:winnr	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Gift.vim	/^function! s:winnr(uniqnr)$/;"	f
s:with_cd	nvim/autoload/plug.vim	/^function! s:with_cd(cmd, dir, ...)$/;"	f
s:with_index	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:with_index(list, ...) abort$/;"	f
s:with_index	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:with_index(list, ...) abort$/;"	f
s:wordcount_cache	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^let s:wordcount_cache = 0  " cache wordcount for performance when force_update=0$/;"	v
s:wrap	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:wrap(name, opts, bang)$/;"	f
s:wrap	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:wrap(str,...) abort$/;"	f
s:wrap_accent	nvim/autoload/plugged/vim-airline/autoload/airline/section.vim	/^function! s:wrap_accent(part, value)$/;"	f
s:wrap_cmds	nvim/autoload/plug.vim	/^  function! s:wrap_cmds(cmds)$/;"	f
s:write_triggered_update_tags	nvim/autoload/plugged/vim-gutentags/autoload/gutentags.vim	/^function! s:write_triggered_update_tags(bufno) abort$/;"	f
s:writefile	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/System/Cache/Deprecated.vim	/^function! s:writefile(cache_dir, filename, list) abort$/;"	f
s:ws_refresh	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! s:ws_refresh()$/;"	f
s:xterm_escape_template	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let s:xterm_escape_template = '\\033]12;%s\\007'$/;"	v
s:yank_normal	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^function! s:yank_normal(count, register) abort "{{{$/;"	f
s:yank_to_register	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:yank_to_register(data)$/;"	f
s:yank_visual	nvim/autoload/plugged/vim-highlightedyank/autoload/highlightedyank/obsolete/highlightedyank.vim	/^function! s:yank_visual(register) abort "{{{$/;"	f
s:zip	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:zip(...) abort$/;"	f
s:zip	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:zip(...) abort$/;"	f
s:zip_fill	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch/Data/List.vim	/^function! s:zip_fill(xs, ys, filler) abort$/;"	f
s:zip_fill	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:zip_fill(xs, ys, filler) abort$/;"	f
s:zoomwintab_status_zoomed_in	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/zoomwintab.vim	/^let s:zoomwintab_status_zoomed_in =$/;"	v
s:zoomwintab_status_zoomed_out	nvim/autoload/plugged/vim-airline/autoload/airline/extensions/zoomwintab.vim	/^let s:zoomwintab_status_zoomed_out =$/;"	v
scala	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	o
screen shot (if possible)	nvim/autoload/plugged/vim-airline/.github/ISSUE_TEMPLATE.md	/^#### screen shot (if possible)$/;"	t
script_output_fn	nvim/autoload/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^    $script_output_fn = [System.IO.Path]::GetTempFileName()$/;"	v
script_output_fn	nvim/autoload/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^$script_output_fn = ''$/;"	v
scry	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## scry$/;"	s	chapter:Configurations
section/base	.config/polybar/base.ini	/^[section\/base]$/;"	s
section/base	polybar/base.ini	/^[section\/base]$/;"	s
select_incremental	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/incremental_selection.lua	/^local function select_incremental(get_parent)$/;"	f
semi	nvim/autoload/plugged/vim-snippets/pythonx/javascript_snippets.py	/^def semi(snip):$/;"	f
set_version	nvim/autoload/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^                $set_version = $argv[$idx]$/;"	v
set_version	nvim/autoload/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^$set_version = ''$/;"	v
setup() function	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## setup() function$/;"	s	chapter:nvim-lspconfig
setup() function	nvim/autoload/plugged/nvim-lspconfig/scripts/README_template.md	/^## setup() function$/;"	s	chapter:nvim-lspconfig
setup_case	nvim/autoload/plugged/completion-nvim/lua/completion/matching.lua	/^local function setup_case(prefix, word)$/;"	f
shadow	.config/picom.conf	/^shadow = true;$/;"	k
shadow	.config/picom/picom.conf	/^shadow              = true;$/;"	k
shadow	.config/picom/picom_rounded_corners.conf	/^shadow = true$/;"	k
shaped	.config/picom.conf	/^shadow-ignore-shaped = false;$/;"	k
shusia	nvim/autoload/plugged/sonokai/alacritty/README.md	/^## shusia$/;"	s	chapter:Installation
sink	.config/polybar/modules.ini	/^sink = alsa_output.usb-Corsair_CORSAIR_HS70_Pro_Wireless_Gaming_Headset-00.iec958-stereo$/;"	k	section:module/mic
snipMate & UltiSnip Snippets	nvim/autoload/plugged/vim-snippets/README.md	/^snipMate & UltiSnip Snippets$/;"	c
snippetsList	nvim/autoload/plugged/completion-nvim/lua/completion/source/snippet.lua	/^  local snippetsList = api.nvim_call_function('UltiSnips#SnippetsInCurrentScope', {})$/;"	f
snippetsList	nvim/autoload/plugged/completion-nvim/lua/completion/source/snippet.lua	/^  local snippetsList = api.nvim_call_function('neosnippet#helpers#get_completion_snippets', {})$/;"	f
snippetsList	nvim/autoload/plugged/completion-nvim/lua/completion/source/snippet.lua	/^  local snippetsList = api.nvim_call_function('vsnip#source#find', {api.nvim_get_current_buf()})$/;"	f
solargraph	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## solargraph$/;"	s	chapter:Configurations
sonokai#ft_clean	nvim/autoload/plugged/sonokai/autoload/sonokai.vim	/^function! sonokai#ft_clean(path, msg) "{{{$/;"	f
sonokai#ft_exists	nvim/autoload/plugged/sonokai/autoload/sonokai.vim	/^function! sonokai#ft_exists(path) "{{{$/;"	f
sonokai#ft_gen	nvim/autoload/plugged/sonokai/autoload/sonokai.vim	/^function! sonokai#ft_gen(path, last_modified, msg) "{{{$/;"	f
sonokai#ft_newest	nvim/autoload/plugged/sonokai/autoload/sonokai.vim	/^function! sonokai#ft_newest(path, last_modified) "{{{$/;"	f
sonokai#ft_rootpath	nvim/autoload/plugged/sonokai/autoload/sonokai.vim	/^function! sonokai#ft_rootpath(path) "{{{$/;"	f
sonokai#ft_write	nvim/autoload/plugged/sonokai/autoload/sonokai.vim	/^function! sonokai#ft_write(rootpath, ft, content) "{{{$/;"	f
sonokai#get_configuration	nvim/autoload/plugged/sonokai/autoload/sonokai.vim	/^function! sonokai#get_configuration() "{{{$/;"	f
sonokai#get_palette	nvim/autoload/plugged/sonokai/autoload/sonokai.vim	/^function! sonokai#get_palette(style) "{{{$/;"	f
sonokai#highlight	nvim/autoload/plugged/sonokai/autoload/sonokai.vim	/^function! sonokai#highlight(group, fg, bg, ...) "{{{$/;"	f
sort_by_key	nvim/autoload/plugged/diagnostic-nvim/lua/diagnostic/util.lua	/^local function sort_by_key(fn)$/;"	f
sorted_map_table	nvim/autoload/plugged/nvim-lspconfig/scripts/docgen.lua	/^local function sorted_map_table(t, func)$/;"	f
sourcekit	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## sourcekit$/;"	s	chapter:Configurations
space_before_function_paren	nvim/autoload/plugged/vim-snippets/pythonx/javascript_snippets.py	/^def space_before_function_paren(snip):$/;"	f
split	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^  local function split(string)$/;"	f
split_lines	nvim/autoload/plugged/diagnostic-nvim/lua/diagnostic/util.lua	/^local function split_lines(value)$/;"	f
sqlls	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## sqlls$/;"	s	chapter:Configurations
statusline on top	nvim/autoload/plugged/vim-airline/README.md	/^### statusline on top$/;"	S	section:Features""Extras
stencil	.config/picom.conf	/^glx-no-stencil = true;$/;"	k
step	.config/picom.conf	/^fade-in-step = 0.03;$/;"	k
step	.config/picom.conf	/^fade-out-step = 0.03;$/;"	k
step	.config/picom/picom_rounded_corners.conf	/^fade-in-step = 0.03;$/;"	k
step	.config/picom/picom_rounded_corners.conf	/^fade-out-step = 0.05;$/;"	k
stl	nvim/autoload/plugged/vim-airline/t/builder.vim	/^    let stl = s:builder.build()$/;"	v
stl	nvim/autoload/plugged/vim-airline/t/extensions_default.vim	/^    let stl = s:builder.build()$/;"	v
substring_match	nvim/autoload/plugged/completion-nvim/lua/completion/matching.lua	/^local function substring_match(prefix, word)$/;"	f
suggest.enablePreview	.config/nvim/coc-settings.json	/^  "suggest.enablePreview": true,$/;"	b
suggest.floatEnable	.config/nvim/coc-settings.json	/^  "suggest.floatEnable": true,$/;"	b
suggest.maxPreviewWidth	.config/nvim/coc-settings.json	/^  "suggest.maxPreviewWidth": 100,$/;"	n
suggest.timeout	.config/nvim/coc-settings.json	/^  "suggest.timeout": 800,$/;"	n
summary	nvim/autoload/plugged/vim-rooter/test/runner.vim	/^let summary = [$/;"	v
sumneko_lua	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## sumneko_lua$/;"	s	chapter:Configurations
swift	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	o
switch_source_header	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/clangd.lua	/^local function switch_source_header(bufnr)$/;"	f
syntax_getter	nvim/autoload/plugged/completion-nvim/lua/completion/chain_completion.lua	/^  local syntax_getter = function()$/;"	f
template	nvim/autoload/plugged/nvim-lspconfig/scripts/docgen.lua	/^local function template(s, params)$/;"	f
terraformls	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## terraformls$/;"	s	chapter:Configurations
test	nvim/autoload/plugged/neosnippet.vim/Makefile	/^test:$/;"	t
test	nvim/autoload/plugged/nvim-lspconfig/Makefile	/^test:$/;"	t
test_editorconfig	nvim/autoload/plugged/editorconfig-vim/tests/plugin/spec/editorconfig_spec.rb	/^def test_editorconfig(vim, file_name, expected_values)$/;"	f
test_instance	nvim/autoload/plugged/editorconfig-vim/tests/plugin/spec/editorconfig_spec.rb	/^def test_instance(vim)$/;"	f
test_snipmate_format	nvim/autoload/plugged/vim-snippets/tests.sh	/^function test_snipmate_format {$/;"	f
test_space_indented	nvim/autoload/plugged/vim-snippets/tests.sh	/^function test_space_indented {$/;"	f
tests_cmake_ec_sort_dir	nvim/autoload/plugged/editorconfig-vim/tests/core/tests/cmake/ec_sort.cmake	/^set(tests_cmake_ec_sort_dir "${CMAKE_CURRENT_LIST_DIR}")$/;"	v
tests_cmakelists_dir	nvim/autoload/plugged/editorconfig-vim/tests/core/tests/CMakeLists.txt	/^set(tests_cmakelists_dir "${CMAKE_CURRENT_LIST_DIR}")$/;"	v
tests_meta_cmakelists_dir	nvim/autoload/plugged/editorconfig-vim/tests/core/tests/meta/CMakeLists.txt	/^set(tests_meta_cmakelists_dir "${CMAKE_CURRENT_LIST_DIR}")$/;"	v
tests_meta_sample_dir	nvim/autoload/plugged/editorconfig-vim/tests/core/tests/meta/sample.cmake	/^set( tests_meta_sample_dir "${CMAKE_CURRENT_LIST_DIR}" )$/;"	v
texlab	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## texlab$/;"	s	chapter:Configurations
text_document_completion_list_to_complete_items	nvim/autoload/plugged/completion-nvim/lua/completion/source/lsp.lua	/^local function text_document_completion_list_to_complete_items(result, params)$/;"	f
tick	nvim/autoload/plugged/nvim-lspconfig/scripts/docgen.lua	/^                    local function tick(s) return string.format("`%s`", s) end$/;"	f
time	.config/polybar/modules.ini	/^time = %I:%M$/;"	k	section:module/date
time	polybar/modules.ini	/^time = %I:%M$/;"	k	section:module/date
title: ''	nvim/autoload/plugged/nvim-lspconfig/.github/PULL_REQUEST_TEMPLATE/pull_request_template.md	/^title: ''$/;"	s
toggle_compton	.bin/toggle.sh	/^toggle_compton() {$/;"	f
toggle_polybar	.bin/toggle.sh	/^toggle_polybar() {$/;"	f
toggle_redshift	.bin/toggle.sh	/^toggle_redshift() {$/;"	f
toggle_terminal	.bin/toggle.sh	/^toggle_terminal() {$/;"	f
toggle_xautlock	.bin/toggle.sh	/^toggle_xautlock() {$/;"	f
tokyo-night	.config/alacritty/alacritty.yml	/^  tokyo-night: &tokyo-night$/;"	a
tokyo-night-storm	.config/alacritty/alacritty.yml	/^  tokyo-night-storm: &tokyo-night-storm$/;"	a
toml	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	o
transform_line	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter.lua	/^local transform_line = function(line)$/;"	f
transient	.config/picom.conf	/^detect-transient = true;$/;"	k
transient	.config/picom/picom_rounded_corners.conf	/^detect-transient = true;$/;"	k
transition	.config/redshift.conf	/^transition=1$/;"	k	section:redshift
traverse_parents	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/util.lua	/^  local function traverse_parents(path, cb)$/;"	f
triggerCurrentCompletion	nvim/autoload/plugged/completion-nvim/lua/completion/source.lua	/^local triggerCurrentCompletion = function(bufnr, line_to_cursor, prefix, textMatch, suffix, forc/;"	f
tsserver	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## tsserver$/;"	s	chapter:Configurations
tsx	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	o
type	.config/polybar/modules.ini	/^type = internal\/bspwm$/;"	k	section:module/bspwm
type	.config/polybar/modules.ini	/^type = internal\/cpu$/;"	k	section:module/cpu
type	.config/polybar/modules.ini	/^type = internal\/date$/;"	k	section:module/date
type	.config/polybar/modules.ini	/^type = internal\/memory$/;"	k	section:module/memory
type	.config/polybar/modules.ini	/^type = internal\/pulseaudio$/;"	k	section:module/mic
type	.config/polybar/modules.ini	/^type = internal\/xwindow$/;"	k	section:module/xwindow
type	nvim/autoload/plugged/vim-snippets/addon-info.json	/^  "repository" : {"type": "git", "url": "git:\/\/github.com\/honza\/snipmate-snippets.git"},$/;"	s	object:repository
type	polybar/modules.ini	/^type = internal\/bspwm$/;"	k	section:module/bspwm
type	polybar/modules.ini	/^type = internal\/cpu$/;"	k	section:module/cpu
type	polybar/modules.ini	/^type = internal\/date$/;"	k	section:module/date
type	polybar/modules.ini	/^type = internal\/memory$/;"	k	section:module/memory
type	polybar/modules.ini	/^type = internal\/xwindow$/;"	k	section:module/xwindow
type_patterns	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter.lua	/^  local type_patterns = options.type_patterns or {'class', 'function', 'method'}$/;"	f
typescript	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	o
underline	.config/polybar/base.ini	/^label-focused-underline= ${colors.color1}$/;"	k	section:section/base
underline	polybar/base.ini	/^label-focused-underline= ${colors.color1}$/;"	k	section:section/base
undotree#UndotreeFocus	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! undotree#UndotreeFocus() abort$/;"	f
undotree#UndotreeHide	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! undotree#UndotreeHide() abort$/;"	f
undotree#UndotreeIsVisible	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! undotree#UndotreeIsVisible() abort$/;"	f
undotree#UndotreeShow	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! undotree#UndotreeShow() abort$/;"	f
undotree#UndotreeToggle	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! undotree#UndotreeToggle() abort$/;"	f
undotree#UndotreeUpdate	nvim/autoload/plugged/undotree/autoload/undotree.vim	/^function! undotree#UndotreeUpdate() abort$/;"	f
unite#sources#neosnippet#define	nvim/autoload/plugged/neosnippet.vim/autoload/unite/sources/neosnippet.vim	/^function! unite#sources#neosnippet#define() abort$/;"	f
unite#sources#neosnippet#start_complete	nvim/autoload/plugged/neosnippet.vim/autoload/unite/sources/neosnippet.vim	/^function! unite#sources#neosnippet#start_complete() abort$/;"	f
unite#sources#neosnippet_file#define	nvim/autoload/plugged/neosnippet.vim/autoload/unite/sources/neosnippet_file.vim	/^function! unite#sources#neosnippet_file#define() abort$/;"	f
update_cached_matches	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/query.lua	/^local function update_cached_matches(bufnr, changed_tick, query_group)$/;"	f
url	nvim/autoload/plugged/vim-snippets/addon-info.json	/^  "repository" : {"type": "git", "url": "git:\/\/github.com\/honza\/snipmate-snippets.git"},$/;"	s	object:repository
usage	nvim/autoload/plugged/minimap.vim/bin/minimap_generator.sh	/^usage() { echo "Usage: $(basename "$0") <hscale> <vscale> <padding> [file]" >&2; }$/;"	f
use_raw_list	nvim/autoload/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        if ["%FILE_LIST_CMD_IS_ABSOLUTE%"]==["1"] set use_raw_list=1$/;"	v
use_raw_list	nvim/autoload/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        if ["%PROJECT_ROOT%"]==["."] set use_raw_list=1$/;"	v
use_raw_list	nvim/autoload/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        set use_raw_list=0$/;"	v
util.error	nvim/autoload/plugged/formatter.nvim/lua/format/util.lua	/^function util.error(...)$/;"	f
util.getLines	nvim/autoload/plugged/formatter.nvim/lua/format/util.lua	/^function util.getLines(bufnr, startLine, endLine)$/;"	f
util.isEmpty	nvim/autoload/plugged/formatter.nvim/lua/format/util.lua	/^function util.isEmpty(s)$/;"	f
util.log	nvim/autoload/plugged/formatter.nvim/lua/format/util.lua	/^function util.log(...)$/;"	f
util.setLines	nvim/autoload/plugged/formatter.nvim/lua/format/util.lua	/^function util.setLines(bufnr, startLine, endLine, lines)$/;"	f
valid_args	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/query_predicates.lua	/^local function valid_args(name, pred, count, strict_count)$/;"	f
validate_string_list	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/util.lua	/^local function validate_string_list(t)$/;"	f
version	.config/fontconfig/fonts.conf	/^<?xml version="1.0"?>$/;"	k
vesc	nvim/autoload/plugged/editorconfig-vim/tests/core/ecvimlib.ps1	/^function global:vesc($str) {$/;"	f
vim	nvim/autoload/plugged/vim-devicons/pythonx/vim_devicons/powerline/segments.py	/^	vim = {}$/;"	v
vim-airline [![Build Status](https://travis-ci.org/vim-airline/vim-airline.svg?branch=master)](https://travis-ci.org/vim-airline/vim-airline) [![Say Thanks!](https://img.shields.io/badge/Say%20Thanks-!-1EAEDB.svg)](https://saythanks.io/to/cb%40256bit.org) [![reviewdog](https://github.com/vim-airline/vim-airline/workflows/reviewdog/badge.svg?branch=master&event=push)](https://github.com/vim-airline/vim-airline/actions?query=workflow%3Areviewdog+event%3Apush+branch%3Amaster)	nvim/autoload/plugged/vim-airline/README.md	/^# vim-airline [![Build Status](https:\/\/travis-ci.org\/vim-airline\/vim-airline.svg?branch=mast/;"	c
vim-carbon-now-sh	nvim/autoload/plugged/vim-carbon-now-sh/README.md	/^# vim-carbon-now-sh$/;"	c
vim-highlightedyank	nvim/autoload/plugged/vim-highlightedyank/README.md	/^# vim-highlightedyank$/;"	c
vim-plug	nvim/autoload/plugged/neosnippet.vim/README.md	/^### vim-plug$/;"	S	section:Neosnippet""Installation
vim-startify	nvim/autoload/plugged/vim-devicons/DEVELOPER.md	/^##### vim-startify$/;"	T	subsubsection:API""Integration with other plugins
vim-themis	nvim/autoload/plugged/neosnippet.vim/Makefile	/^vim-themis:$/;"	t
vim.lsp.callbacks[callback]	nvim/autoload/plugged/diagnostic-nvim/lua/diagnostic.lua	/^  vim.lsp.callbacks[callback] = function(_, _, result, _)$/;"	f
vim_args	nvim/autoload/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^$vim_args = @($/;"	v
vim_snippets#Filename	nvim/autoload/plugged/neosnippet.vim/autoload/vim_snippets.vim	/^function! vim_snippets#Filename(...) abort$/;"	f
vim_snippets#Filename	nvim/autoload/plugged/vim-snippets/autoload/vim_snippets.vim	/^fun! vim_snippets#Filename(...)$/;"	f
vimfiler#columns#devicons#define	nvim/autoload/plugged/vim-devicons/autoload/vimfiler/columns/devicons.vim	/^function! vimfiler#columns#devicons#define() abort$/;"	f
vimls	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## vimls$/;"	s	chapter:Configurations
vimstatus	nvim/autoload/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^$vimstatus = run_process $VIM -stdout $debug -stderr $debug `$/;"	v
visual_selection_range	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/incremental_selection.lua	/^local function visual_selection_range()$/;"	f
vital#	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch.vim	/^function! vital#{s:_plugin_name}#function(funcname) abort$/;"	f
vital#	nvim/autoload/plugged/incsearch.vim/autoload/vital/_incsearch.vim	/^function! vital#{s:_plugin_name}#new() abort$/;"	f
vital#	nvim/autoload/plugged/incsearch.vim/autoload/vital/incsearch.vim	/^function! vital#{s:plugin_name}#import(...) abort$/;"	f
vital#	nvim/autoload/plugged/incsearch.vim/autoload/vital/incsearch.vim	/^function! vital#{s:plugin_name}#new() abort$/;"	f
vital#	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet.vim	/^function! vital#{s:_plugin_name}#new() abort$/;"	f
vital#	nvim/autoload/plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^function! vital#{s:plugin_name}#import(...) abort$/;"	f
vital#	nvim/autoload/plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^function! vital#{s:plugin_name}#new() abort$/;"	f
vital#	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank.vim	/^function! vital#{s:_plugin_name}#function(funcname) abort$/;"	f
vital#	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/_highlightedyank.vim	/^function! vital#{s:_plugin_name}#new() abort$/;"	f
vital#	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^function! vital#{s:plugin_name}#import(...) abort$/;"	f
vital#	nvim/autoload/plugged/vim-highlightedyank/autoload/vital/highlightedyank.vim	/^function! vital#{s:plugin_name}#new() abort$/;"	f
vital#_neosnippet#Data#List#import	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^  function! vital#_neosnippet#Data#List#import() abort$/;"	f
vital#_neosnippet#Data#String#import	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^  function! vital#_neosnippet#Data#String#import() abort$/;"	f
vital#_neosnippet#Prelude#import	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^  function! vital#_neosnippet#Prelude#import() abort$/;"	f
vital#_neosnippet#Process#import	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/Process.vim	/^  function! vital#_neosnippet#Process#import() abort$/;"	f
vital#_neosnippet#System#Cache#Deprecated#import	nvim/autoload/plugged/neosnippet.vim/autoload/vital/_neosnippet/System/Cache/Deprecated.vim	/^  function! vital#_neosnippet#System#Cache#Deprecated#import() abort$/;"	f
vital#of	nvim/autoload/plugged/incsearch.vim/autoload/vital.vim	/^function! vital#of(name) abort$/;"	f
vital#of	nvim/autoload/plugged/neosnippet.vim/autoload/vital.vim	/^function! vital#of(name) abort$/;"	f
volume	.config/polybar/modules.ini	/^format-volume =   <label-volume>$/;"	k	section:module/mic
volume	.config/polybar/modules.ini	/^label-volume = %percentage%%$/;"	k	section:module/mic
vscale	nvim/autoload/plugged/minimap.vim/bin/minimap_generator.bat	/^set vscale=%2$/;"	v
vsync	.config/picom.conf	/^vsync = true;$/;"	k
vsync	.config/picom/picom_rounded_corners.conf	/^vsync = true$/;"	k
vue	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	o
vuels	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## vuels$/;"	s	chapter:Configurations
webdevicons	nvim/autoload/plugged/vim-devicons/pythonx/vim_devicons/powerline/segments.py	/^def webdevicons(pl, segment_info):$/;"	f
webdevicons#hardRefresh	nvim/autoload/plugged/vim-devicons/plugin/webdevicons.vim	/^function! webdevicons#hardRefresh()$/;"	f
webdevicons#pluginHome	nvim/autoload/plugged/vim-devicons/plugin/webdevicons.vim	/^function! webdevicons#pluginHome()$/;"	f
webdevicons#refresh	nvim/autoload/plugged/vim-devicons/plugin/webdevicons.vim	/^function! webdevicons#refresh()$/;"	f
webdevicons#softRefresh	nvim/autoload/plugged/vim-devicons/plugin/webdevicons.vim	/^function! webdevicons#softRefresh()$/;"	f
webdevicons#version	nvim/autoload/plugged/vim-devicons/plugin/webdevicons.vim	/^function! webdevicons#version()$/;"	f
webdevicons_conceal_nerdtree_brackets	nvim/autoload/plugged/vim-devicons/plugin/webdevicons.vim	/^    augroup webdevicons_conceal_nerdtree_brackets$/;"	a
webdevicons_cursor_hold	nvim/autoload/plugged/vim-devicons/plugin/webdevicons.vim	/^    augroup webdevicons_cursor_hold$/;"	a
webdevicons_file_format	nvim/autoload/plugged/vim-devicons/pythonx/vim_devicons/powerline/segments.py	/^def webdevicons_file_format(pl, segment_info):$/;"	f
webdevicons_flagship_filesymbol	nvim/autoload/plugged/vim-devicons/autoload/devicons/plugins/flagship.vim	/^    augroup webdevicons_flagship_filesymbol$/;"	a
webdevicons_flagship_filetype	nvim/autoload/plugged/vim-devicons/autoload/devicons/plugins/flagship.vim	/^    augroup webdevicons_flagship_filetype$/;"	a
whitespace	nvim/autoload/plugged/vim-airline/README.md	/^#### whitespace$/;"	t	section:Features""Extras
width	.config/polybar/base.ini	/^width = 100%[bar\/example]$/;"	k	section:section/base
width	polybar/base.ini	/^width = 100%$/;"	k	section:section/base
win	.config/picom.conf	/^use-ewmh-active-win = true;$/;"	k
wintypes	.config/picom.conf	/^wintypes:$/;"	k
workspaces	.config/polybar/modules.ini	/^pin-workspaces = true$/;"	k	section:module/bspwm
workspaces	polybar/modules.ini	/^pin-workspaces = true$/;"	k	section:module/bspwm
wrapped.newsink	nvim/autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^  function! wrapped.newsink(lines)$/;"	f
x	.config/picom.conf	/^shadow-offset-x = -10;$/;"	k
x	.config/picom/picom.conf	/^shadow-offset-x     = 8;$/;"	k
x	.config/picom/picom_rounded_corners.conf	/^shadow-offset-x = -20;$/;"	k
x	.config/polybar/bars.ini	/^tray-offset-x = 0$/;"	k	section:bar/right
x	polybar/bars.ini	/^tray-offset-x = 0$/;"	k	section:bar/right
y	.config/picom.conf	/^shadow-offset-y = -10;$/;"	k
y	.config/picom/picom.conf	/^shadow-offset-y     = 8;$/;"	k
y	.config/picom/picom_rounded_corners.conf	/^shadow-offset-y = -10;$/;"	k
y	.config/polybar/bars.ini	/^tray-offset-y = 0$/;"	k	section:bar/right
y	nvim/autoload/plugged/vim-highlightedyank/test/test-highlightedyank.vim	/^map y <Plug>(highlightedyank)$/;"	m
y	polybar/bars.ini	/^tray-offset-y = 0$/;"	k	section:bar/right
yaml	nvim/autoload/plugged/nvim-treesitter/lockfile.json	/^{"jsdoc": {"revision": "77e7785739ad3e90c3de8ed5a55418a5fd2b8225"}, "tsx": {"revision": "07a12bd/;"	o
yamlls	nvim/autoload/plugged/nvim-lspconfig/README.md	/^## yamlls$/;"	s	chapter:Configurations
zip_lists_to_map	nvim/autoload/plugged/nvim-lspconfig/lua/nvim_lsp/util.lua	/^local function zip_lists_to_map(a, b)$/;"	f
{__index	nvim/autoload/plugged/completion-nvim/lua/completion/source/path.lua	/^}, {__index = function()$/;"	f
{process	nvim/autoload/plugged/nvim-treesitter/lua/nvim-treesitter/configs.lua	/^  print(vim.inspect(config, {process = process_function}))$/;"	f
~	nvim/autoload/plugged/completion-nvim/lua/completion/hover.lua	/^    if default_callback ~= callback_function then$/;"	f
⚙  Options	nvim/autoload/plugged/minimap.vim/README.md	/^### ⚙  Options$/;"	S
✨ Features	nvim/autoload/plugged/minimap.vim/README.md	/^### ✨ Features$/;"	S
💬 F.A.Q	nvim/autoload/plugged/minimap.vim/README.md	/^### 💬 F.A.Q$/;"	S
📃 License	nvim/autoload/plugged/minimap.vim/README.md	/^### 📃 License$/;"	S
📥 Installation	nvim/autoload/plugged/minimap.vim/README.md	/^### 📥 Installation$/;"	S
📦 Related Projects	nvim/autoload/plugged/minimap.vim/README.md	/^### 📦 Related Projects$/;"	S
🛠  Commands	nvim/autoload/plugged/minimap.vim/README.md	/^### 🛠  Commands$/;"	S
